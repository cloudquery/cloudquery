name: Source Plugin AWS Workflow

on:
  pull_request:
    paths:
      - "plugins/source/aws/**"
      - ".github/workflows/source_aws.yml"
  push:
    branches:
      - main
    paths:
      - "plugins/source/aws/**"
      - ".github/workflows/source_aws.yml"

jobs:
  resolve-runner:
    uses: cloudquery/cloudquery/.github/workflows/reusable_resolve_runner.yml@feat/workflows/reusable
  test:
    name: "plugins/source/aws"
    needs: [ resolve-runner ]
    uses: cloudquery/cloudquery/.github/workflows/reusable_test_source.yml@feat/workflows/reusable
    with:
      plugin: aws
      runner: ${{ needs.resolve-runner.outputs.runner }}
  sanity-check:
    if: startsWith(github.head_ref, 'release-please--branches--main--components')
    timeout-minutes: 45
    needs: [resolve-runner]
    permissions:
      id-token: write
      contents: read
    runs-on: ${{ needs.resolve-runner.outputs.runner }}
    defaults:
      run:
        working-directory: ./plugins/source/aws
    steps:
      - name: Set up Go
        id:   set-up-go
        uses: actions/setup-go@v3
        with:
          go-version-file:       plugins/source/aws/go.mod
          cache:                 true
          cache-dependency-path: plugins/source/aws/go.sum
      - name: Restore build cache
        uses: actions/cache/restore@v3
        with:
          path: |
                ~/.cache/go-build
                ~/Library/Caches/go-build
                ~\AppData\Local\go-build
          key:  source-aws-${{ runner.os }}-go-${{ steps.set-up-go.outputs.go-version }}-${{ hashFiles('plugins/source/aws/go.sum') }}
          # no direct cache hit, however, even a partial hit might be beneficial
          restore-keys: source-aws-${{ runner.os }}-go-${{ steps.set-up-go.outputs.go-version }}-
      - name: Get dependencies
        run: go get -t -d ./...
      - name: Build
        run: go build .
      - name: Setup CloudQuery
        uses: cloudquery/setup-cloudquery@v3
        with:
          version: 'v2.0.22'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::615713231484:role/cq-playground-aws-github-action
          aws-region: us-east-1
      - name: Run sync
        run: cloudquery sync test/sanity.yml --log-console
  validate-release:
    if: startsWith(github.head_ref, 'release-please--branches--main--components') || github.event_name == 'push'
    needs: [ resolve-runner ]
    uses: cloudquery/cloudquery/.github/workflows/reusable_validate_release.yml@feat/workflows/reusable
    with:
      plugin: aws
      type:   source
      runner: ${{ needs.resolve-runner.outputs.runner }}
  test-policies:
    timeout-minutes: 30
    needs: [resolve-runner]
    runs-on: ${{ needs.resolve-runner.outputs.runner }}
    defaults:
      run:
        working-directory: ./plugins/source/aws
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        id:   set-up-go
        uses: actions/setup-go@v3
        with:
          go-version-file:       plugins/source/aws/go.mod
          cache:                 true
          cache-dependency-path: plugins/source/aws/go.sum
      - name: Restore build cache
        uses: actions/cache/restore@v3
        with:
          path: |
                ~/.cache/go-build
                ~/Library/Caches/go-build
                ~\AppData\Local\go-build
          key:  source-aws-${{ runner.os }}-go-${{ steps.set-up-go.outputs.go-version }}-${{ hashFiles('plugins/source/aws/go.sum') }}
          # no direct cache hit, however, even a partial hit might be beneficial
          restore-keys: source-aws-${{ runner.os }}-go-${{ steps.set-up-go.outputs.go-version }}-
      - name: Build
        run: go build .
      - name: Setup CloudQuery
        uses: cloudquery/setup-cloudquery@v3
        with:
          version: 'v2.0.22'
      - name: Migrate DB
        run: cloudquery migrate test/policy_cq_config.yml
        env:
          CQ_DSN: postgresql://postgres:pass@localhost:5432/postgres
      - name: Run all policies
        run: cd policies && psql -h localhost -p 5432 -U postgres -d postgres -w -f ./policy.sql
        env:
          PGPASSWORD: pass

      
