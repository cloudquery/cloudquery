name: Source Plugin Slack Workflow

on:
  pull_request:
    paths:
      - "plugins/source/slack/**"
      - ".github/workflows/source_slack.yml"
  push:
    branches:
      - main
    paths:
      - "plugins/source/slack/**"
      - ".github/workflows/source_slack.yml"

jobs:
  plugins-source-slack:
    timeout-minutes: 30
    name: "plugins/source/slack"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./plugins/source/slack
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version-file: plugins/source/slack/go.mod
          cache: true
          cache-dependency-path: plugins/source/slack/go.sum
      - name: golangci-lint
        uses: cloudquery/golangci-lint-action@master
        with:
          version: v1.50.1
          working-directory: plugins/source/slack
          args: "--config ../../.golangci.yml"
          skip-pkg-cache: true
          skip-build-cache: true
      - name: Get dependencies
        run: go get -t -d ./...
      - name: Build
        run: go build .
      - name: Test
        run: make test
      - name: gen
        if: github.event_name == 'pull_request'
        run: make gen
      - name: Fail if generation updated files
        if: github.event_name == 'pull_request'
        run: test "$(git status -s | wc -l)" -eq 0 || (git status -s; exit 1)
  validate-release:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
    steps:
      - name: Checkout
        if: startsWith(github.head_ref, 'release-please--branches--main--components') || github.event_name == 'push'
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        if: startsWith(github.head_ref, 'release-please--branches--main--components') || github.event_name == 'push'
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-1.19.4-release-cache-${{ hashFiles('plugins/source/slack/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-1.19.4-release-cache-plugins-source-slack
      - name: Set up Go
        if: startsWith(github.head_ref, 'release-please--branches--main--components') || github.event_name == 'push'
        uses: actions/setup-go@v3
        with:
          go-version-file: plugins/source/slack/go.mod
      - name: Install GoReleaser
        if: startsWith(github.head_ref, 'release-please--branches--main--components') || github.event_name == 'push'
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: latest
          install-only: true
      - name: Run GoReleaser Dry-Run
        if: startsWith(github.head_ref, 'release-please--branches--main--components') || github.event_name == 'push'
        run: goreleaser release --snapshot --rm-dist --skip-validate --skip-publish --skip-sign -f ./plugins/source/slack/.goreleaser.yaml
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
