name: Validate plugin release

on:
  workflow_call:
    inputs:
      plugin:
        description: 'Plugin dir (e.g. "aws", "postgresql")'
        type:        string
        required:    true
      type:
        description: 'Plugin type ("source" or "destination")'
        type:        string
        required:    true
      runner:
        description: 'Runner to be used (default: "ubuntu-latest")'
        type:        string
        required:    false
        default:     'ubuntu-latest'

jobs:
  validate-release:
    if:              startsWith(github.head_ref, 'release-please--branches--main--components') || github.event_name == 'push'
    timeout-minutes: 30
    runs-on:         ${{ inputs.runner }}
    env:
      CGO_ENABLED: 0
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Go
      id:   set-up-go
      uses: actions/setup-go@v3
      with:
        go-version-file:       plugins/${{ inputs.type }}/${{ inputs.plugin }}/go.mod
        cache:                 true
        cache-dependency-path: plugins/${{ inputs.type }}/${{ inputs.plugin }}/go.sum
    - name: Restore build cache
      uses: actions/cache/restore@v3
      with:
        path:         |
                      ~/.cache/go-build
                      ~/Library/Caches/go-build
                      ~\AppData\Local\go-build
        key:          ${{ inputs.type }}-${{ inputs.plugin }}-${{ runner.os }}-go-${{ steps.set-up-go.outputs.go-version }}-${{ hashFiles(format('plugins/{0}/{1}/go.sum', inputs.type, inputs.plugin)) }}
        # no direct cache hit, however, even a partial hit might be beneficial
        restore-keys: ${{ inputs.type }}-${{ inputs.plugin }}-${{ runner.os }}-go-${{ steps.set-up-go.outputs.go-version }}-
    - name: Install GoReleaser
      uses: goreleaser/goreleaser-action@v3
      with:
        distribution: goreleaser-pro
        version:      latest
        install-only: true
    - name: Run GoReleaser Dry-Run
      run:  >
            goreleaser release
            --timeout 50m
            --snapshot
            --clean
            --skip-validate
            --skip-publish
            --skip-sign
            -f ./plugins/${{ inputs.type }}/${{ inputs.plugin }}/.goreleaser.yaml
      env:
        GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
