name: Publish plugin MotherDuck to hub
on:
  push:
    tags:
      - "plugins-destination-motherduck-v*.*.*"
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      plugin_name: ${{ steps.split.outputs.plugin_name }}
      plugin_kind: ${{ steps.split.outputs.plugin_kind }}
      plugin_kind_plural: ${{ steps.split.outputs.plugin_kind_plural }}
      plugin_version: ${{ steps.split.outputs.plugin_version }}
      plugin_dir: ${{ steps.split.outputs.plugin_dir }}
      prerelease: ${{ steps.semver_parser.outputs.prerelease }}
    steps:
      - name: Split tag
        id: split
        run: |
          tag=${{ github.ref_name }}
          plugin_kind=$(echo $tag | cut -d- -f2)
          plugin_name=$(echo $tag | cut -d- -f3)
          plugin_kind_plural=$(if [ "$plugin_kind" = "source" ]; then echo "sources"; else echo "destinations"; fi)
          plugin_version=$(echo $tag | cut -d- -f4-)
          echo "plugin_name=${plugin_name}" >> $GITHUB_OUTPUT
          echo "plugin_kind=${plugin_kind}" >> $GITHUB_OUTPUT
          echo "plugin_kind_plural=${plugin_kind_plural}" >> $GITHUB_OUTPUT
          echo "plugin_version=${plugin_version}" >> $GITHUB_OUTPUT
          echo "plugin_dir=plugins/${plugin_kind}/${plugin_name}" >> $GITHUB_OUTPUT
      # Fail if not a valid SemVer string
      - name: Parse semver string
        uses: booxmedialtd/ws-action-parse-semver@7784200024d6b3fc01253e617ec0168daf603de3
        id: semver_parser
        with:
          input_string: ${{steps.split.outputs.plugin_version}}
  publish-plugin-to-hub:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cloudquery/golang-cross:v10.0.0
      env:
        CC: /usr/bin/gencc.sh
        CXX: /usr/bin/gencpp.sh
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-1.21.4-publish-plugin-to-hub-cache-${{ hashFiles(format('{0}/{1}', needs.prepare.outputs.plugin_dir, 'go.sum')) }}
          restore-keys: |
            ${{ runner.os }}-go-1.21.4-publish-plugin-to-hub-cache-plugins-${{ needs.prepare.outputs.plugin_kind }}-${{ needs.prepare.outputs.plugin_name }}

      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ needs.prepare.outputs.plugin_dir }}/go.mod
          cache: false

      - name: Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install shell escape
        run: |
          npm install shell-escape@0.2.0

      - name: Get Release Notes
        id: release-notes
        uses: actions/github-script@v7
        env:
          PRERELEASE: ${{ needs.prepare.outputs.prerelease }}
        with:
          result-encoding: string
          script: |
            const shellescape = require('shell-escape');
            const { PRERELEASE } = process.env;
            if (PRERELEASE) {
              return shellescape(["This is a pre-release version of the plugin and should be used for testing purposes only"])
            }
            const { data } = await github.rest.repos.getReleaseByTag({
              owner: "cloudquery",
              repo: context.repo.repo,
              tag: context.ref.replace('refs/tags/', ''),
            });
            return shellescape([data.body]);

      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@3a8ed858a4e3fb487c6f53658ec40b2b1d45d9d8
        with:
          find: "(?i)version_${{ needs.prepare.outputs.plugin_kind }}_${{ needs.prepare.outputs.plugin_name }}"
          replace: ${{ needs.prepare.outputs.plugin_version }}
          include: ${{ needs.prepare.outputs.plugin_dir }}/docs/*.md

      - name: Run package command
        working-directory: ${{ needs.prepare.outputs.plugin_dir }}
        run: |
          go run main.go package -m ${{ steps.release-notes.outputs.result }} ${{ needs.prepare.outputs.plugin_version }} .
      - name: Setup CloudQuery
        uses: cloudquery/setup-cloudquery@v3
        with:
          version: v5.11.0

      - name: Publish plugin to hub
        working-directory: ${{ needs.prepare.outputs.plugin_dir }}
        env:
          CLOUDQUERY_API_KEY: ${{ secrets.CLOUDQUERY_API_KEY }}
        run: |
          cloudquery plugin publish --finalize
