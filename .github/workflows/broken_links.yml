name: Check for broken links

on:
  workflow_dispatch:
  schedule:
    - cron:  "0 12 * * *"
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/broken_links.yml
      - "website/**"
    types:
      - opened
      - synchronize
      - reopened

jobs:
  check-broken-links:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Waiting for Vercel Preview
        if: github.event_name == 'pull_request'
        uses: patrickedqvist/wait-for-vercel-preview@v1.2.0
        id: preview-deployment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 360
          check_interval: 10
          environment: 'Preview – cloudquery-web'

      - name: Set Vercel URL output
        id: vercel
        run: |
          DEPLOY_URL=${{ steps.preview-deployment.outputs.url }}
          echo "url=${DEPLOY_URL:-"https://www.cloudquery.io/"}" >> $GITHUB_OUTPUT

      - name: Check for broken links
        # We need to exclude some hosts that protect against bots
        run: |
          set -o pipefail

          npx broken-link-checker --requests 100 --host-requests 10 -f -r -v -o --filter-level 3 \
            --exclude "${{ steps.vercel.outputs.url }}/logo" \
            --exclude linkedin \
            --exclude cloudquery.io/discord \
            --exclude fonts.gstatic.com \
            --exclude fonts.googleapis.com \
            --exclude github.com \
            --exclude support.google.com \
            ${{ steps.vercel.outputs.url }} \
            | grep -v '───OK───' | grep -v '──SKIP──' | grep -v '0 broken'
