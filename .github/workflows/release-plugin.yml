name: release-plugin
on:
  push:
    tags:
      - "plugins/*/*/v*.*.*"
env:
  CGO_ENABLED: 0

jobs:
  release-plugin-binary:
    runs-on: ubuntu-latest
    steps:
      # Tag format is plugins/<type>/<name>/<version>
      - name: Split tag
        id: split
        run: |
          tag=${{github.ref_name}}
          echo ::set-output name=plugin_dir::${tag%%v*}
          echo ::set-output name=plugin_version::${tag##*/}
      # Fail if not a valid SemVer string
      - name: Parse semver string
        uses: booxmedialtd/ws-action-parse-semver@966a26512c94239a00aa10b1b0c196906f7e1909
        with:
          input_string: ${{steps.split.outputs.plugin_version}}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: latest
          install-only: true
      - name: Run GoReleaser Dry-Run
        run: goreleaser release --rm-dist --skip-validate --skip-publish --skip-sign -f ./${{steps.split.outputs.plugin_dir}}.goreleaser.yaml
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.PRIVATE_KEY }}
      - name: Run GoReleaser
        run: goreleaser release --rm-dist -f ./${{steps.split.outputs.plugin_dir}}.goreleaser.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
