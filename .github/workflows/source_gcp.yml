name: Source Plugin GCP Workflow

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths:
      - "plugins/source/gcp/**"
      - ".github/workflows/source_gcp.yml"
  push:
    branches:
      - main
    paths:
      - "plugins/source/gcp/**"
      - ".github/workflows/source_gcp.yml"

jobs:
  plugins-source-gcp:
    timeout-minutes: 30
    name: "plugins/source/gcp"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./plugins/source/gcp
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Set up Go 1.x
        uses: erezrokah/setup-go@feat/add_cache_prefix
        with:
          go-version-file: plugins/source/gcp/go.mod
          cache: true
          cache-dependency-path: plugins/source/gcp/go.sum
          cache-key-prefix: test-cache-
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.55.2
          working-directory: plugins/source/gcp
          args: "--config ../../.golangci.yml"
          skip-pkg-cache: true
          skip-build-cache: true
      - name: Setup CloudQuery
        if: github.event_name == 'pull_request'
        uses: cloudquery/setup-cloudquery@v3
        with:
          version: v5.5.7
      - name: gen
        if: github.event_name == 'pull_request'
        run: make gen
      - name: Fail if generation updated files
        if: github.event_name == 'pull_request'
        run: test "$(git status -s | wc -l)" -eq 0 || (git status -s; exit 1)
      - name: Build
        run: go build .
      - name: Test
        run: make test
  validate-release:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
    steps:
      - name: Checkout
        if: startsWith(github.head_ref, 'release-please--branches--main--components') || github.event_name == 'push'
        uses: actions/checkout@v4
      - uses: actions/cache@v3
        if: startsWith(github.head_ref, 'release-please--branches--main--components') || github.event_name == 'push'
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-1.21.4-release-cache-${{ hashFiles('plugins/source/gcp/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-1.21.4-release-cache-plugins-source-gcp
      - name: Set up Go
        if: startsWith(github.head_ref, 'release-please--branches--main--components') || github.event_name == 'push'
        uses: actions/setup-go@v4
        with:
          go-version-file: plugins/source/gcp/go.mod
          cache: false
      - name: Install GoReleaser
        if: startsWith(github.head_ref, 'release-please--branches--main--components') || github.event_name == 'push'
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser-pro
          version: latest
          install-only: true
      - name: Run GoReleaser Dry-Run
        if: startsWith(github.head_ref, 'release-please--branches--main--components') || github.event_name == 'push'
        run: goreleaser release --snapshot --clean --skip=validate,publish,sign -f ./plugins/source/gcp/.goreleaser.yaml
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
  test-policies:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./plugins/source/gcp
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go 1.x
        uses: erezrokah/setup-go@feat/add_cache_prefix
        with:
          go-version-file: plugins/source/gcp/go.mod
          cache: true
          cache-dependency-path: plugins/source/gcp/go.sum
          cache-key-prefix: policies-cache-
      - name: Build
        run: go build .
      - name: Setup CloudQuery
        uses: cloudquery/setup-cloudquery@v3
        with:
          version: v5.5.7
      - name: Migrate DB
        run: cloudquery migrate test/policy_cq_config.yml
        env:
          CQ_DSN: postgresql://postgres:pass@localhost:5432/postgres
      - name: Run all policies
        run: cd policies && psql -h localhost -p 5432 -U postgres -d postgres -w -f ./policy.sql
        env:
          PGPASSWORD: pass
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dbt-postgres
        run: pip install dbt-postgres
      - name: Run dbt policies
        run: cd policies/gcp_compliance && dbt run --profiles-dir ../../test/dbt/
        env:
          CQ_DBT_HOST: localhost
          CQ_DBT_PORT: 5432
          CQ_DBT_USER: postgres
          CQ_DBT_PASSWORD: pass
          CQ_DBT_DBNAME: postgres
