name: Destination Plugin Microsoft SQL Server Workflow

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths:
    - "plugins/destination/mssql/**"
    - ".github/workflows/dest_mssql.yml"
  push:
    branches:
    - main
    paths:
    - "plugins/destination/mssql/**"
    - ".github/workflows/dest_mssql.yml"

jobs:
  plugins-destination-mssql:
    name: "plugins/destination/mssql"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DB_USER:     SA
      DB_PASSWORD: yourStrongP@ssword
      DB_NAME:     cloudquery
    defaults:
      run:
        working-directory: plugins/destination/mssql
    services:
      mssql:
        image:   mcr.microsoft.com/mssql/server:2017-latest
        env:
          ACCEPT_EULA:       Y
          MSSQL_PID:         Express
          MSSQL_SA_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_USER:           ${{ env.DB_USER }}
          DB_NAME:           ${{ env.DB_NAME }}
        ports:
        - 1433:1433
        options: >-
                 --health-cmd "/opt/mssql-tools/bin/sqlcmd -U $DB_USER -P $MSSQL_SA_PASSWORD -Q 'select 1' -b -o /dev/null"
                 --health-interval 60s
                 --health-timeout 30s
                 --health-start-period 20s
                 --health-retries 5
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - name: Create Database
      run:  >-
            docker exec $(docker ps -alq) \
              /opt/mssql-tools/bin/sqlcmd \
              -U "$DB_USER" \
              -P "$DB_PASSWORD" \
              -Q "CREATE DATABASE $DB_NAME;"
    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version-file:       plugins/destination/mssql/go.mod
        cache:                 true
        cache-dependency-path: plugins/destination/mssql/go.sum
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.55.2
        working-directory: plugins/destination/mssql
        args:              "--config ../../.golangci.yml"
    - name: gen
      if: github.event_name == 'pull_request'
      run: make gen
    - name: Fail if generation updated files
      if: github.event_name == 'pull_request'
      run: test "$(git status -s | wc -l)" -eq 0 || (git status -s; exit 1)
    - run: go mod tidy
    - name: Build
      run:  go build .
    - name: Test Microsoft SQL Server
      run:  make test
  