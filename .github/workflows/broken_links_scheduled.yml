name: Check for broken links

on:
  workflow_dispatch:
  schedule:
    - cron:  "0 12 * * *"
jobs:
  check-broken-links:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          # By default actions/checkout puts us in detached HEAD state. We need to checkout the branch so git log works
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          # This matches the default on Vercel
          fetch-depth: 10

      - name: Should run broken links check
        if: github.event_name == 'pull_request'
        id: broken-links
        working-directory: website
        run: |
          if ! scripts/diff.sh ; then
              echo "check=true" >> $GITHUB_OUTPUT 
          else
              echo "check=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup node
        if: steps.broken-links.outputs.check != 'false'
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Waiting for Vercel Preview
        if: github.event_name == 'pull_request' && steps.broken-links.outputs.check != 'false'
        uses: patrickedqvist/wait-for-vercel-preview@bfdff514ff78a669f2536e9f4dd4ef5813a704a2
        id: preview-deployment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 1200
          check_interval: 10
          environment: 'Preview'
          allow_inactive: true

      - name: Set Vercel URL output
        if: steps.broken-links.outputs.check != 'false'
        id: vercel
        run: |
          DEPLOY_URL=${{ steps.preview-deployment.outputs.url }}
          echo "url=${DEPLOY_URL:-"https://www.cloudquery.io"}" >> $GITHUB_OUTPUT

      - name: Check for broken links
        if: steps.broken-links.outputs.check != 'false'
        # We need to exclude some hosts that protect against bots
        run: |
          set -o pipefail

          npx broken-link-checker --requests 100 --host-requests 10 -f -r -v -o --filter-level 3 \
            --exclude "${{ steps.vercel.outputs.url }}/logo" \
            --exclude "${{ steps.vercel.outputs.url }}/docs/plugins/sources/*/tables" \
            --exclude "${{ steps.vercel.outputs.url }}/integrations/*" \
            --exclude "${{ steps.vercel.outputs.url }}/buy/*" \
            --exclude "${{ steps.vercel.outputs.url }}/contact" \
            --exclude "${{ steps.vercel.outputs.url }}/register_for_cloud" \
            --exclude linkedin \
            --exclude cloudquery.io/discord \
            --exclude cloudquery.io/buy \
            --exclude fonts.gstatic.com \
            --exclude fonts.googleapis.com \
            --exclude github.com \
            --exclude support.google.com \
            --exclude work-bench.com \
            --exclude api.typeform.com \
            --exclude api.eu.typeform.com \
            --exclude mailchimp.com \
            --exclude returngis.net \
            --exclude plausible.io \
            --exclude localhost \
            --exclude twitter.com \
            --exclude mongodb.com \
            --exclude regex101.com \
            --exclude help.shopify.com/en/manual/apps/app-types/custom-apps \
            ${{ steps.vercel.outputs.url }} \
            | grep -v '───OK───' | grep -v '──SKIP──' | grep -v '0 broken'
      - name: Slack Notify
        uses: rtCamp/action-slack-notify@v2.2.0
        if: always()
        with:
          status: ${{ job.status }}
          notify_when: 'failure'
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_NAME }}}
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/cloudquery.png?size=48
          SLACK_MESSAGE: 'Broken links detected :bang:'
          SLACK_TITLE: Broken Links Checker
          SLACK_USERNAME: cq-bot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}