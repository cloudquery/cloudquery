# DO NOT EDIT. This file is synced from https://github.com/cloudquery/.github/.github
name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]

env:
  CGO_ENABLED: 0
  CQ_NO_TELEMETRY: 1

jobs:
  unitests:
    strategy:
      matrix:
        dbversion: ['postgres:latest']
        go: ['1.17']
        platform: [ ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    services:
      postgres:
        image: ${{ matrix.dbversion }}
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: go get -v -t -d ./...
        env:
          CGO_ENABLED: 0

      - name: Build
        run: go build -v .
        env:
          CGO_ENABLED: 0

      - name: Sanity Fetch
        run: go run ./main.go fetch --config=internal/test/test_config.hcl --enable-console-log
        env:
          CGO_ENABLED: 0
          CQ_NO_TELEMETRY: 1

      - name: Sanity Init
        run: go run ./main.go init test --config=test_init_config.hcl
        env:
          CGO_ENABLED: 0
          CQ_NO_TELEMETRY: 1

      - name: Test
        run: go test -v ./...
        env:
          CGO_ENABLED: 0

