name: check_generated_code_drift
on:
  push:
    branches:
      - main
      - monorepo
  pull_request:
    branches:
      - main
      - monorepo
jobs:
  resolve-modules:
    name: Resolve Modules
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
      - id: set-matrix
        run: ../scripts/resolve-modules.sh
        working-directory: ./plugins
  check_generated_code_drift:
    name: Check Generated Code for Drift
    runs-on: ubuntu-latest
    needs: resolve-modules
    strategy:
      matrix: ${{ fromJson(needs.resolve-modules.outputs.matrix) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - "${{ matrix.workdir }}/**"
      - name: Set up Go 1.x
        if: steps.changes.outputs.src == 'true' || github.event_name != 'pull_request'
        uses: actions/setup-go@v3
        with:
          go-version: ^1.18
      - name: Install tools
        if: steps.changes.outputs.src == 'true' || github.event_name != 'pull_request'
        run: |
          make install-tools
      - uses: actions/cache@v3
        if: steps.changes.outputs.src == 'true' || github.event_name != 'pull_request'
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
          key: ${{ runner.os }}-go-1.18-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-1.18-
      - name: Fail if new cq-gen config file is missing //check-for-changes
        if: steps.changes.outputs.src == 'true' || github.event_name != 'pull_request'
        run: |
          ../../scripts/check-new-files-have-check-for-changes-flag.sh
        working-directory: ${{ matrix.workdir }}
      - name: Run go generate on changed service directories
        if: steps.changes.outputs.src == 'true' || github.event_name != 'pull_request'
        run: |
          ../../scripts/regenerate-changed-directories.sh
        working-directory: ${{ matrix.workdir }}
      - name: Fail if any files are changed
        if: steps.changes.outputs.src == 'true' || github.event_name != 'pull_request'
        run: |
          echo "List of files changed after running go generate:"
          git status -s ./resources/services
          test "$(git status -s ./resources/services | wc -l)" -eq 0
        working-directory: ${{ matrix.workdir }}
