name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]

env:
  CGO_ENABLED: 0
  CQ_NO_TELEMETRY: 1

jobs:
  policy-tests:
    strategy:
      matrix:
        dbversion: ['postgres:10']
        go: ['1.17']
        platform: [ ubuntu-latest]
        provider: ['aws', 'gcp', 'azure', 'k8s']
    runs-on: ${{ matrix.platform }}
    services:
      postgres:
        image: ${{ matrix.dbversion }}
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^${{ matrix.go }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go }}-
      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Build
        run: go build -v .

      - name: Build Schema (${{ matrix.provider }})
        run: |
          go run ./main.go provider sync ${{ matrix.provider }} --config ./internal/test/test_policies_config.yml --enable-console-log

      - name: Policy Run (${{ matrix.provider }})
        run: |
          go run ./main.go policy run ${{ matrix.provider }} --config ./internal/test/test_policies_config.yml --enable-console-log --disable-fetch-check
