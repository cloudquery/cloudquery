name: validate-release
on:
  pull_request:
    branches:
      - main
env:
  CGO_ENABLED: 0

jobs:
  release-dry-run:
    runs-on: ubuntu-latest
    steps:
      # Expected branch format for release PRs is 'release-please--branches--main--components--<name>'
      - name: Get component name
        if: startsWith(github.head_ref, 'release-please--branches--main--components')
        id: component
        run: |
          source_branch=${{github.head_ref}}
          component_name=${source_branch##*--}
          component_dir=${component_name//\-/\/}
          echo ::set-output name=component_dir::${component_dir}
      - name: Checkout
        if: startsWith(github.head_ref, 'release-please--branches--main--components')
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        if: startsWith(github.head_ref, 'release-please--branches--main--components')
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-1.19.1-release-cache-${{ hashFiles(format('{0}/go.sum', steps.component.outputs.component_dir)) }}
          restore-keys: |
            ${{ runner.os }}-go-1.19.1-release-cache-${{ steps.component.outputs.component_dir }}
      - name: Set up Go
        if: startsWith(github.head_ref, 'release-please--branches--main--components')
        uses: actions/setup-go@v3
        with:
          go-version-file: ${{steps.component.outputs.component_dir}}/go.mod
      - name: Install GoReleaser
        if: startsWith(github.head_ref, 'release-please--branches--main--components')
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: latest
          install-only: true
      - name: Run GoReleaser Dry-Run
        if: startsWith(github.head_ref, 'release-please--branches--main--components')
        run: goreleaser release --snapshot --rm-dist --skip-validate --skip-publish --skip-sign -f ./${{steps.component.outputs.component_dir}}/.goreleaser.yaml
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
