{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/cloudquery/cloudquery/plugins/destination/file/client/spec/spec",
  "$ref": "#/$defs/Spec",
  "$defs": {
    "Duration": {
      "type": "string",
      "pattern": "^[-+]?([0-9]*(\\.[0-9]*)?[a-z]+)+$",
      "title": "CloudQuery configtype.Duration"
    },
    "Spec": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "directory"
              ],
              "title": "directory"
            },
            {
              "required": [
                "path"
              ],
              "title": "path"
            }
          ]
        },
        {
          "oneOf": [
            {
              "properties": {
                "format": {
                  "type": "string",
                  "const": "csv"
                },
                "format_spec": {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/Spec-1"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            },
            {
              "properties": {
                "format": {
                  "type": "string",
                  "const": "json"
                },
                "format_spec": {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/Spec-2"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            },
            {
              "properties": {
                "format": {
                  "type": "string",
                  "const": "parquet"
                },
                "format_spec": {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/Spec-3"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "properties": {
        "format": {
          "type": "string",
          "enum": [
            "csv",
            "json",
            "parquet"
          ],
          "description": "Output format."
        },
        "format_spec": {
          "oneOf": [
            {
              "anyOf": [
                {
                  "$ref": "#/$defs/Spec-1"
                },
                {
                  "$ref": "#/$defs/Spec-2"
                },
                {
                  "$ref": "#/$defs/Spec-3"
                }
              ]
            },
            {
              "type": "null"
            }
          ]
        },
        "compression": {
          "type": "string",
          "enum": [
            "",
            "gzip"
          ],
          "description": "Compression type.\nEmpty or missing stands for no compression."
        },
        "directory": {
          "type": "string",
          "minLength": 1,
          "description": "Directory where all files will be written. One file will be created per table.\n\nThis is now **deprecated** in favor of `path` which allows more flexibility, and the `directory` option will be removed in a future version.",
          "deprecated": true
        },
        "path": {
          "type": "string",
          "minLength": 1,
          "description": "Path template string that determines where files will be written.\n\nThe path supports the following placeholder variables:\n- `{{TABLE}}` will be replaced with the table name\n- `{{FORMAT}}` will be replaced with the file format, such as `csv`, `json` or `parquet`. If compression is enabled, the format will be `csv.gz`, `json.gz` etc.\n- `{{UUID}}` will be replaced with a random UUID to uniquely identify each file\n- `{{YEAR}}` will be replaced with the current year in `YYYY` format\n- `{{MONTH}}` will be replaced with the current month in `MM` format\n- `{{DAY}}` will be replaced with the current day in `DD` format\n- `{{HOUR}}` will be replaced with the current hour in `HH` format\n- `{{MINUTE}}` will be replaced with the current minute in `mm` format\n\n **Note** that timestamps are in `UTC` and will be the current time at the time the file is written, not when the sync started."
        },
        "no_rotate": {
          "type": "boolean",
          "description": "If set to `true`, the plugin will write to one file per table.\nOtherwise, for every batch a new file will be created with a different `.\u003cUUID\u003e` suffix.",
          "default": false
        },
        "batch_size": {
          "oneOf": [
            {
              "type": "integer",
              "description": "This parameter controls the maximum amount of items may be grouped together to be written in a single write.",
              "default": 10000
            },
            {
              "type": "null"
            }
          ]
        },
        "batch_size_bytes": {
          "oneOf": [
            {
              "type": "integer",
              "description": "This parameter controls the maximum size of items that may be grouped together to be written in a single write.",
              "default": 52428800
            },
            {
              "type": "null"
            }
          ]
        },
        "batch_timeout": {
          "oneOf": [
            {
              "$ref": "#/$defs/Duration",
              "description": "This parameter controls the maximum interval between batch writes."
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "format"
      ]
    },
    "Spec-1": {
      "properties": {
        "skip_header": {
          "type": "boolean",
          "description": "Specifies if the first line of a file should be the header.",
          "default": false
        },
        "delimiter": {
          "type": "string",
          "pattern": "^.$",
          "description": "Character that will be used as the delimiter.",
          "default": ","
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "CloudQuery CSV file output spec."
    },
    "Spec-2": {
      "additionalProperties": false,
      "type": "object",
      "description": "CloudQuery JSON file output spec."
    },
    "Spec-3": {
      "additionalProperties": false,
      "type": "object",
      "description": "CloudQuery Parquet file output spec."
    }
  }
}
