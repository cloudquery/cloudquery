// Code generated by codegen; DO NOT EDIT.

package dependency

import (
	"github.com/cloudquery/cloudquery/plugins/source/snyk/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Dependencies() *schema.Table {
	return &schema.Table{
		Name:        "snyk_dependencies",
		Description: `https://pkg.go.dev/github.com/pavel-snyk/snyk-sdk-go/snyk#Dependency`,
		Resolver:    fetchDependencies,
		Multiplex:   client.ByOrganization,
		Columns: []schema.Column{
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
			{
				Name:     "version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Version"),
			},
			{
				Name:     "latest_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LatestVersion"),
			},
			{
				Name:     "latest_version_published_date",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("LatestVersionPublishedDate"),
			},
			{
				Name:     "first_published_date",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("FirstPublishedDate"),
			},
			{
				Name:     "is_deprecated",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("IsDeprecated"),
			},
			{
				Name:     "deprecated_versions",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("DeprecatedVersions"),
			},
			{
				Name:     "dependencies_with_issues",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("DependenciesWithIssues"),
			},
			{
				Name:     "issues_critical",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("IssuesCritical"),
			},
			{
				Name:     "issues_high",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("IssuesHigh"),
			},
			{
				Name:     "issues_medium",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("IssuesMedium"),
			},
			{
				Name:     "issues_low",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("IssuesLow"),
			},
			{
				Name:     "licenses",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Licenses"),
			},
			{
				Name:     "projects",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Projects"),
			},
			{
				Name:     "copyright",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Copyright"),
			},
		},
	}
}
