// Code generated by MockGen. DO NOT EDIT.
// Source: dashboards_api.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	http "net/http"
	reflect "reflect"

	datadog "github.com/DataDog/datadog-api-client-go/v2/api/datadog"
	datadogV1 "github.com/DataDog/datadog-api-client-go/v2/api/datadogV1"
	gomock "github.com/golang/mock/gomock"
)

// MockDashboardsAPIClient is a mock of DashboardsAPIClient interface.
type MockDashboardsAPIClient struct {
	ctrl     *gomock.Controller
	recorder *MockDashboardsAPIClientMockRecorder
}

// MockDashboardsAPIClientMockRecorder is the mock recorder for MockDashboardsAPIClient.
type MockDashboardsAPIClientMockRecorder struct {
	mock *MockDashboardsAPIClient
}

// NewMockDashboardsAPIClient creates a new mock instance.
func NewMockDashboardsAPIClient(ctrl *gomock.Controller) *MockDashboardsAPIClient {
	mock := &MockDashboardsAPIClient{ctrl: ctrl}
	mock.recorder = &MockDashboardsAPIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDashboardsAPIClient) EXPECT() *MockDashboardsAPIClientMockRecorder {
	return m.recorder
}

// ListDashboards mocks base method.
func (m *MockDashboardsAPIClient) ListDashboards(arg0 context.Context, arg1 ...datadogV1.ListDashboardsOptionalParameters) (datadogV1.DashboardSummary, *http.Response, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListDashboards", varargs...)
	ret0, _ := ret[0].(datadogV1.DashboardSummary)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListDashboards indicates an expected call of ListDashboards.
func (mr *MockDashboardsAPIClientMockRecorder) ListDashboards(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDashboards", reflect.TypeOf((*MockDashboardsAPIClient)(nil).ListDashboards), varargs...)
}

// ListDashboardsWithPagination mocks base method.
func (m *MockDashboardsAPIClient) ListDashboardsWithPagination(arg0 context.Context, arg1 ...datadogV1.ListDashboardsOptionalParameters) (<-chan datadog.PaginationResult[datadogV1.DashboardSummaryDefinition], func()) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListDashboardsWithPagination", varargs...)
	ret0, _ := ret[0].(<-chan datadog.PaginationResult[datadogV1.DashboardSummaryDefinition])
	ret1, _ := ret[1].(func())
	return ret0, ret1
}

// ListDashboardsWithPagination indicates an expected call of ListDashboardsWithPagination.
func (mr *MockDashboardsAPIClientMockRecorder) ListDashboardsWithPagination(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDashboardsWithPagination", reflect.TypeOf((*MockDashboardsAPIClient)(nil).ListDashboardsWithPagination), varargs...)
}
