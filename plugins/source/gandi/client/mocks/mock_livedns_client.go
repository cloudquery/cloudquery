// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cloudquery/plugins/source/gandi/client (interfaces: LiveDNSClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	livedns "github.com/go-gandi/go-gandi/livedns"
	gomock "github.com/golang/mock/gomock"
)

// MockLiveDNSClient is a mock of LiveDNSClient interface.
type MockLiveDNSClient struct {
	ctrl     *gomock.Controller
	recorder *MockLiveDNSClientMockRecorder
}

// MockLiveDNSClientMockRecorder is the mock recorder for MockLiveDNSClient.
type MockLiveDNSClientMockRecorder struct {
	mock *MockLiveDNSClient
}

// NewMockLiveDNSClient creates a new mock instance.
func NewMockLiveDNSClient(ctrl *gomock.Controller) *MockLiveDNSClient {
	mock := &MockLiveDNSClient{ctrl: ctrl}
	mock.recorder = &MockLiveDNSClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLiveDNSClient) EXPECT() *MockLiveDNSClientMockRecorder {
	return m.recorder
}

// ListDomains mocks base method.
func (m *MockLiveDNSClient) ListDomains() ([]livedns.Domain, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDomains")
	ret0, _ := ret[0].([]livedns.Domain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDomains indicates an expected call of ListDomains.
func (mr *MockLiveDNSClientMockRecorder) ListDomains() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDomains", reflect.TypeOf((*MockLiveDNSClient)(nil).ListDomains))
}

// ListSnapshots mocks base method.
func (m *MockLiveDNSClient) ListSnapshots(arg0 string) ([]livedns.Snapshot, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSnapshots", arg0)
	ret0, _ := ret[0].([]livedns.Snapshot)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSnapshots indicates an expected call of ListSnapshots.
func (mr *MockLiveDNSClientMockRecorder) ListSnapshots(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSnapshots", reflect.TypeOf((*MockLiveDNSClient)(nil).ListSnapshots), arg0)
}
