// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cloudquery/plugins/source/gandi/client (interfaces: CertificateClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	certificate "github.com/go-gandi/go-gandi/certificate"
	gomock "github.com/golang/mock/gomock"
)

// MockCertificateClient is a mock of CertificateClient interface.
type MockCertificateClient struct {
	ctrl     *gomock.Controller
	recorder *MockCertificateClientMockRecorder
}

// MockCertificateClientMockRecorder is the mock recorder for MockCertificateClient.
type MockCertificateClientMockRecorder struct {
	mock *MockCertificateClient
}

// NewMockCertificateClient creates a new mock instance.
func NewMockCertificateClient(ctrl *gomock.Controller) *MockCertificateClient {
	mock := &MockCertificateClient{ctrl: ctrl}
	mock.recorder = &MockCertificateClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCertificateClient) EXPECT() *MockCertificateClientMockRecorder {
	return m.recorder
}

// ListCertificates mocks base method.
func (m *MockCertificateClient) ListCertificates() ([]certificate.CertificateType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCertificates")
	ret0, _ := ret[0].([]certificate.CertificateType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCertificates indicates an expected call of ListCertificates.
func (mr *MockCertificateClientMockRecorder) ListCertificates() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCertificates", reflect.TypeOf((*MockCertificateClient)(nil).ListCertificates))
}

// ListPackages mocks base method.
func (m *MockCertificateClient) ListPackages() ([]certificate.Package, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPackages")
	ret0, _ := ret[0].([]certificate.Package)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPackages indicates an expected call of ListPackages.
func (mr *MockCertificateClientMockRecorder) ListPackages() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPackages", reflect.TypeOf((*MockCertificateClient)(nil).ListPackages))
}
