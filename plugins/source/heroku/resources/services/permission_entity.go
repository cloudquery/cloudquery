// Code generated by codegen; DO NOT EDIT.

package services

import (
	"context"
	"github.com/cloudquery/cloudquery/plugins/source/heroku/client"
	"github.com/cloudquery/cq-provider-sdk/provider/schema"
	"github.com/pkg/errors"
)

func PermissionEntities() *schema.Table {
	return &schema.Table{
		Name:      "heroku_permission_entities",
		Resolver:  fetchPermissionEntities,
		Multiplex: client.NoMultiplex,
		Columns: []schema.Column{
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "team_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("TeamID"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
			{
				Name:     "users",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Users"),
			},
		},
	}
}

func fetchPermissionEntities(ctx context.Context, meta schema.ClientMeta, _ *schema.Resource, res chan<- interface{}) error {
	c := meta.(*client.Client)
	items, err := c.Heroku.TeamList(ctx, nil)
	if err != nil {
		return errors.WithStack(err)
	}

	for _, it := range items {
		v, err := c.Heroku.PermissionEntityList(ctx, it.ID, nil)
		if err != nil {
			return errors.WithStack(err)
		}
		res <- v
	}
	return nil
}
