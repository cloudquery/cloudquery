// Code generated by MockGen. DO NOT EDIT.
// Source: k8s.io/client-go/kubernetes/typed/policy/v1 (interfaces: PolicyV1Interface)

// Package v1 is a generated GoMock package.
package v1

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/client-go/kubernetes/typed/policy/v1"
	rest "k8s.io/client-go/rest"
)

// MockPolicyV1Interface is a mock of PolicyV1Interface interface.
type MockPolicyV1Interface struct {
	ctrl     *gomock.Controller
	recorder *MockPolicyV1InterfaceMockRecorder
}

// MockPolicyV1InterfaceMockRecorder is the mock recorder for MockPolicyV1Interface.
type MockPolicyV1InterfaceMockRecorder struct {
	mock *MockPolicyV1Interface
}

// NewMockPolicyV1Interface creates a new mock instance.
func NewMockPolicyV1Interface(ctrl *gomock.Controller) *MockPolicyV1Interface {
	mock := &MockPolicyV1Interface{ctrl: ctrl}
	mock.recorder = &MockPolicyV1InterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPolicyV1Interface) EXPECT() *MockPolicyV1InterfaceMockRecorder {
	return m.recorder
}

// Evictions mocks base method.
func (m *MockPolicyV1Interface) Evictions(arg0 string) v1.EvictionInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Evictions", arg0)
	ret0, _ := ret[0].(v1.EvictionInterface)
	return ret0
}

// Evictions indicates an expected call of Evictions.
func (mr *MockPolicyV1InterfaceMockRecorder) Evictions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Evictions", reflect.TypeOf((*MockPolicyV1Interface)(nil).Evictions), arg0)
}

// PodDisruptionBudgets mocks base method.
func (m *MockPolicyV1Interface) PodDisruptionBudgets(arg0 string) v1.PodDisruptionBudgetInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PodDisruptionBudgets", arg0)
	ret0, _ := ret[0].(v1.PodDisruptionBudgetInterface)
	return ret0
}

// PodDisruptionBudgets indicates an expected call of PodDisruptionBudgets.
func (mr *MockPolicyV1InterfaceMockRecorder) PodDisruptionBudgets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PodDisruptionBudgets", reflect.TypeOf((*MockPolicyV1Interface)(nil).PodDisruptionBudgets), arg0)
}

// RESTClient mocks base method.
func (m *MockPolicyV1Interface) RESTClient() rest.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RESTClient")
	ret0, _ := ret[0].(rest.Interface)
	return ret0
}

// RESTClient indicates an expected call of RESTClient.
func (mr *MockPolicyV1InterfaceMockRecorder) RESTClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RESTClient", reflect.TypeOf((*MockPolicyV1Interface)(nil).RESTClient))
}
