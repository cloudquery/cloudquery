// Code generated by MockGen. DO NOT EDIT.
// Source: k8s.io/apiextensions-apiserver/pkg/client/clientset/clientset/typed/apiextensions/v1 (interfaces: ApiextensionsV1Interface)

// Package v1 is a generated GoMock package.
package v1

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/apiextensions-apiserver/pkg/client/clientset/clientset/typed/apiextensions/v1"
	rest "k8s.io/client-go/rest"
)

// MockApiextensionsV1Interface is a mock of ApiextensionsV1Interface interface.
type MockApiextensionsV1Interface struct {
	ctrl     *gomock.Controller
	recorder *MockApiextensionsV1InterfaceMockRecorder
}

// MockApiextensionsV1InterfaceMockRecorder is the mock recorder for MockApiextensionsV1Interface.
type MockApiextensionsV1InterfaceMockRecorder struct {
	mock *MockApiextensionsV1Interface
}

// NewMockApiextensionsV1Interface creates a new mock instance.
func NewMockApiextensionsV1Interface(ctrl *gomock.Controller) *MockApiextensionsV1Interface {
	mock := &MockApiextensionsV1Interface{ctrl: ctrl}
	mock.recorder = &MockApiextensionsV1InterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApiextensionsV1Interface) EXPECT() *MockApiextensionsV1InterfaceMockRecorder {
	return m.recorder
}

// CustomResourceDefinitions mocks base method.
func (m *MockApiextensionsV1Interface) CustomResourceDefinitions() v1.CustomResourceDefinitionInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CustomResourceDefinitions")
	ret0, _ := ret[0].(v1.CustomResourceDefinitionInterface)
	return ret0
}

// CustomResourceDefinitions indicates an expected call of CustomResourceDefinitions.
func (mr *MockApiextensionsV1InterfaceMockRecorder) CustomResourceDefinitions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CustomResourceDefinitions", reflect.TypeOf((*MockApiextensionsV1Interface)(nil).CustomResourceDefinitions))
}

// RESTClient mocks base method.
func (m *MockApiextensionsV1Interface) RESTClient() rest.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RESTClient")
	ret0, _ := ret[0].(rest.Interface)
	return ret0
}

// RESTClient indicates an expected call of RESTClient.
func (mr *MockApiextensionsV1InterfaceMockRecorder) RESTClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RESTClient", reflect.TypeOf((*MockApiextensionsV1Interface)(nil).RESTClient))
}
