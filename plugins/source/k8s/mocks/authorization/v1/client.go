// Code generated by MockGen. DO NOT EDIT.
// Source: k8s.io/client-go/kubernetes/typed/authorization/v1 (interfaces: AuthorizationV1Interface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/client-go/kubernetes/typed/authorization/v1"
	rest "k8s.io/client-go/rest"
)

// MockAuthorizationV1Interface is a mock of AuthorizationV1Interface interface.
type MockAuthorizationV1Interface struct {
	ctrl     *gomock.Controller
	recorder *MockAuthorizationV1InterfaceMockRecorder
}

// MockAuthorizationV1InterfaceMockRecorder is the mock recorder for MockAuthorizationV1Interface.
type MockAuthorizationV1InterfaceMockRecorder struct {
	mock *MockAuthorizationV1Interface
}

// NewMockAuthorizationV1Interface creates a new mock instance.
func NewMockAuthorizationV1Interface(ctrl *gomock.Controller) *MockAuthorizationV1Interface {
	mock := &MockAuthorizationV1Interface{ctrl: ctrl}
	mock.recorder = &MockAuthorizationV1InterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthorizationV1Interface) EXPECT() *MockAuthorizationV1InterfaceMockRecorder {
	return m.recorder
}

// LocalSubjectAccessReviews mocks base method.
func (m *MockAuthorizationV1Interface) LocalSubjectAccessReviews(arg0 string) v1.LocalSubjectAccessReviewInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LocalSubjectAccessReviews", arg0)
	ret0, _ := ret[0].(v1.LocalSubjectAccessReviewInterface)
	return ret0
}

// LocalSubjectAccessReviews indicates an expected call of LocalSubjectAccessReviews.
func (mr *MockAuthorizationV1InterfaceMockRecorder) LocalSubjectAccessReviews(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LocalSubjectAccessReviews", reflect.TypeOf((*MockAuthorizationV1Interface)(nil).LocalSubjectAccessReviews), arg0)
}

// RESTClient mocks base method.
func (m *MockAuthorizationV1Interface) RESTClient() rest.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RESTClient")
	ret0, _ := ret[0].(rest.Interface)
	return ret0
}

// RESTClient indicates an expected call of RESTClient.
func (mr *MockAuthorizationV1InterfaceMockRecorder) RESTClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RESTClient", reflect.TypeOf((*MockAuthorizationV1Interface)(nil).RESTClient))
}

// SelfSubjectAccessReviews mocks base method.
func (m *MockAuthorizationV1Interface) SelfSubjectAccessReviews() v1.SelfSubjectAccessReviewInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelfSubjectAccessReviews")
	ret0, _ := ret[0].(v1.SelfSubjectAccessReviewInterface)
	return ret0
}

// SelfSubjectAccessReviews indicates an expected call of SelfSubjectAccessReviews.
func (mr *MockAuthorizationV1InterfaceMockRecorder) SelfSubjectAccessReviews() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelfSubjectAccessReviews", reflect.TypeOf((*MockAuthorizationV1Interface)(nil).SelfSubjectAccessReviews))
}

// SelfSubjectRulesReviews mocks base method.
func (m *MockAuthorizationV1Interface) SelfSubjectRulesReviews() v1.SelfSubjectRulesReviewInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelfSubjectRulesReviews")
	ret0, _ := ret[0].(v1.SelfSubjectRulesReviewInterface)
	return ret0
}

// SelfSubjectRulesReviews indicates an expected call of SelfSubjectRulesReviews.
func (mr *MockAuthorizationV1InterfaceMockRecorder) SelfSubjectRulesReviews() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelfSubjectRulesReviews", reflect.TypeOf((*MockAuthorizationV1Interface)(nil).SelfSubjectRulesReviews))
}

// SubjectAccessReviews mocks base method.
func (m *MockAuthorizationV1Interface) SubjectAccessReviews() v1.SubjectAccessReviewInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubjectAccessReviews")
	ret0, _ := ret[0].(v1.SubjectAccessReviewInterface)
	return ret0
}

// SubjectAccessReviews indicates an expected call of SubjectAccessReviews.
func (mr *MockAuthorizationV1InterfaceMockRecorder) SubjectAccessReviews() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubjectAccessReviews", reflect.TypeOf((*MockAuthorizationV1Interface)(nil).SubjectAccessReviews))
}
