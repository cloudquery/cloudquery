// Code generated by codegen; DO NOT EDIT.

package {{.Service}}

import (
	"context"
	"github.com/pkg/errors"

	"github.com/cloudquery/plugin-sdk/schema"
	"github.com/cloudquery/plugins/source/gcp/client"
  {{range .Imports}}
  "{{.}}"
  {{end}}
  {{if .ProtobufImport}}
  pb "{{.ProtobufImport}}"
  {{end}}
)

func {{.SubService | ToCamel}}() *schema.Table {
    return &schema.Table{{template "table.go.tpl" .Table}}
}

func fetch{{.SubService | ToCamel}}(ctx context.Context, meta schema.ClientMeta, r *schema.Resource, res chan<- interface{}) error {
	c := meta.(*client.Client)
	req := &pb.{{.RequestStructName}}{
		{{if .RequestStructFields}}{{.RequestStructFields}}{{end}}
	}
  resp, err := c.Services.{{.Service | ToCamel}}{{.ClientName}}.{{.ListFunctionName}}(ctx, req)
	if err != nil {
		return errors.WithStack(err)
	}
	res <- resp
	return nil
}