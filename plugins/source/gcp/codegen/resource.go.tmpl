// Code generated by codegen resource generator; DO NOT EDIT.

package {{.PackageName}}

import (
	"context"

)

func {{.Table.Service}}{{.Table.Resource | plural}}() *schema.Table {
    return &schema.Table{{template "base_table.go.tmpl" .Table}}
}

func fetch{{.Service}}{{.Resource | plural}}(ctx context.Context, meta schema.ClientMeta, _ *schema.Resource, res chan<- interface{}) error {

	c := meta.(*client.Client)
	nextPageToken := ""
	for {
		output, err := c.Services.Compute.Addresses.AggregatedList(c.ProjectId).PageToken(nextPageToken).Do()
		if err != nil {
			return errors.WithStack(err)
		}

		var addresses []*compute.Address
		for _, items := range output.Items {
			addresses = append(addresses, items.Addresses...)
		}
		res <- addresses

		if output.NextPageToken == "" {
			break
		}
		nextPageToken = output.NextPageToken
	}
	return nil
}