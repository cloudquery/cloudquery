// Code generated by codegen; DO NOT EDIT.

package {{.GCPService}}

import (
	"context"
	"github.com/cloudquery/plugin-sdk/schema"
	"github.com/cloudquery/plugins/source/gcp/client"
	"github.com/pkg/errors"
)

func {{.TableFunctionName}}() *schema.Table {
    return &schema.Table{{template "table.go.tpl" .Table}}
}

func fetch{{.TableFunctionName}}(ctx context.Context, meta schema.ClientMeta, _ *schema.Resource, res chan<- interface{}) error {
	c := meta.(*client.Client)
	var nextPageToken string
	for {
		call := c.Services.{{.ListFunction}}("projects/" + c.ProjectId + "/locations/-").Continue(nextPageToken)
		output, err := call.Do()
		if err != nil {
			return errors.WithStack(err)
		}
		if output.Items == nil {
			return nil
		}

		res <- output.Items
		if output.Metadata == nil || output.Metadata.Continue == "" {
			break
		}
		nextPageToken = output.Metadata.Continue
	}
	return nil
}