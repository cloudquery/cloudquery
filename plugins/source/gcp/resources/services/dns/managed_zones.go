// Code generated by codegen; DO NOT EDIT.

package dns

import (
	"github.com/cloudquery/plugin-sdk/schema"
	"github.com/cloudquery/plugins/source/gcp/client"
)

func ManagedZones() *schema.Table {
	return &schema.Table{
		Name:        "gcp_dns_managed_zones",
		Description: `https://cloud.google.com/dns/docs/reference/v1/managedZones#resource`,
		Resolver:    fetchManagedZones,
		Multiplex:   client.ProjectMultiplex,
		Columns: []schema.Column{
			{
				Name:     "project_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveProject,
			},
			{
				Name:     "cloud_logging_config",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("CloudLoggingConfig"),
			},
			{
				Name:     "creation_time",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CreationTime"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Description"),
			},
			{
				Name:     "dns_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DnsName"),
			},
			{
				Name:     "dnssec_config",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("DnssecConfig"),
			},
			{
				Name:     "forwarding_config",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ForwardingConfig"),
			},
			{
				Name:     "id",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Id"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "kind",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Kind"),
			},
			{
				Name:     "labels",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Labels"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "name_server_set",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("NameServerSet"),
			},
			{
				Name:     "name_servers",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("NameServers"),
			},
			{
				Name:     "peering_config",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("PeeringConfig"),
			},
			{
				Name:     "private_visibility_config",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("PrivateVisibilityConfig"),
			},
			{
				Name:     "reverse_lookup_config",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ReverseLookupConfig"),
			},
			{
				Name:     "service_directory_config",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ServiceDirectoryConfig"),
			},
			{
				Name:     "visibility",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Visibility"),
			},
		},
	}
}
