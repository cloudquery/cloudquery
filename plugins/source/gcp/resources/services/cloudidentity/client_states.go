// Code generated by codegen; DO NOT EDIT.

package cloudidentity

import (
	"github.com/cloudquery/plugin-sdk/schema"
	"github.com/cloudquery/plugins/source/gcp/client"
)

func ClientStates() *schema.Table {
	return &schema.Table{
		Name:        "gcp_cloudidentity_client_states",
		Description: `https://cloud.google.com/identity/docs/reference/rest/v1/devices.deviceUsers.clientStates#ClientState`,
		Resolver:    fetchClientStates,
		Multiplex:   client.ProjectMultiplexEnabledServices("cloudidentity.googleapis.com"),
		Columns: []schema.Column{
			{
				Name:     "project_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveProject,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "asset_tags",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("AssetTags"),
			},
			{
				Name:     "compliance_state",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ComplianceState"),
			},
			{
				Name:     "create_time",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CreateTime"),
			},
			{
				Name:     "custom_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CustomId"),
			},
			{
				Name:     "etag",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Etag"),
			},
			{
				Name:     "health_score",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("HealthScore"),
			},
			{
				Name:     "key_value_pairs",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("KeyValuePairs"),
			},
			{
				Name:     "last_update_time",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LastUpdateTime"),
			},
			{
				Name:     "managed",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Managed"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "owner_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("OwnerType"),
			},
			{
				Name:     "score_reason",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ScoreReason"),
			},
		},
	}
}
