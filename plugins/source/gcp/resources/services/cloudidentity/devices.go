// Code generated by codegen; DO NOT EDIT.

package cloudidentity

import (
	"github.com/cloudquery/plugin-sdk/schema"
	"github.com/cloudquery/plugins/source/gcp/client"
)

func Devices() *schema.Table {
	return &schema.Table{
		Name:        "gcp_cloudidentity_devices",
		Description: `https://cloud.google.com/identity/docs/reference/rest/v1/devices#Device`,
		Resolver:    fetchDevices,
		Multiplex:   client.ProjectMultiplexEnabledServices("cloudidentity.googleapis.com"),
		Columns: []schema.Column{
			{
				Name:     "project_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveProject,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "android_specific_attributes",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("AndroidSpecificAttributes"),
			},
			{
				Name:     "asset_tag",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("AssetTag"),
			},
			{
				Name:     "baseband_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("BasebandVersion"),
			},
			{
				Name:     "bootloader_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("BootloaderVersion"),
			},
			{
				Name:     "brand",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Brand"),
			},
			{
				Name:     "build_number",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("BuildNumber"),
			},
			{
				Name:     "compromised_state",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CompromisedState"),
			},
			{
				Name:     "create_time",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CreateTime"),
			},
			{
				Name:     "device_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DeviceId"),
			},
			{
				Name:     "device_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DeviceType"),
			},
			{
				Name:     "enabled_developer_options",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("EnabledDeveloperOptions"),
			},
			{
				Name:     "enabled_usb_debugging",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("EnabledUsbDebugging"),
			},
			{
				Name:     "encryption_state",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("EncryptionState"),
			},
			{
				Name:     "imei",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Imei"),
			},
			{
				Name:     "kernel_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("KernelVersion"),
			},
			{
				Name:     "last_sync_time",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LastSyncTime"),
			},
			{
				Name:     "management_state",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ManagementState"),
			},
			{
				Name:     "manufacturer",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Manufacturer"),
			},
			{
				Name:     "meid",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Meid"),
			},
			{
				Name:     "model",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Model"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "network_operator",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("NetworkOperator"),
			},
			{
				Name:     "os_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("OsVersion"),
			},
			{
				Name:     "other_accounts",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("OtherAccounts"),
			},
			{
				Name:     "owner_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("OwnerType"),
			},
			{
				Name:     "release_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ReleaseVersion"),
			},
			{
				Name:     "security_patch_time",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SecurityPatchTime"),
			},
			{
				Name:     "serial_number",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SerialNumber"),
			},
			{
				Name:     "wifi_mac_addresses",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("WifiMacAddresses"),
			},
		},
	}
}
