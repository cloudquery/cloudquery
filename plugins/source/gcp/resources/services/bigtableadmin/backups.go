// Code generated by codegen; DO NOT EDIT.

package bigtableadmin

import (
	"github.com/cloudquery/plugin-sdk/schema"
	"github.com/cloudquery/plugins/source/gcp/client"
)

func Backups() *schema.Table {
	return &schema.Table{
		Name:        "gcp_bigtableadmin_backups",
		Description: `https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters.backups#Backup`,
		Resolver:    fetchBackups,
		Multiplex:   client.ProjectMultiplexEnabledServices("bigtableadmin.googleapis.com"),
		Columns: []schema.Column{
			{
				Name:     "project_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveProject,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "source_table",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SourceTable"),
			},
			{
				Name:     "size_bytes",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("SizeBytes"),
			},
			{
				Name:     "start_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("StartTime"),
			},
			{
				Name:     "end_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("EndTime"),
			},
			{
				Name:     "expire_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("ExpireTime"),
			},
			{
				Name:     "state",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("State"),
			},
			{
				Name:     "encryption_info",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("EncryptionInfo"),
			},
		},
	}
}
