// Code generated by codegen; DO NOT EDIT.

package kms

import (
	"github.com/cloudquery/plugin-sdk/schema"
	"github.com/cloudquery/plugins/source/gcp/client"
)

func CryptoKeys() *schema.Table {
	return &schema.Table{
		Name:        "gcp_kms_crypto_keys",
		Description: `https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKey`,
		Resolver:    fetchCryptoKeys,
		Columns: []schema.Column{
			{
				Name:     "project_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveProject,
			},
			{
				Name:     "rotation_period",
				Type:     schema.TypeInt,
				Resolver: resolveRotationPeriod,
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "primary",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Primary"),
			},
			{
				Name:     "purpose",
				Type:     schema.TypeString,
				Resolver: client.ResolveProtoEnum("Purpose"),
			},
			{
				Name:     "create_time",
				Type:     schema.TypeTimestamp,
				Resolver: client.ResolveProtoTimestamp("CreateTime"),
			},
			{
				Name:     "next_rotation_time",
				Type:     schema.TypeTimestamp,
				Resolver: client.ResolveProtoTimestamp("NextRotationTime"),
			},
			{
				Name:     "version_template",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("VersionTemplate"),
			},
			{
				Name:     "labels",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Labels"),
			},
			{
				Name:     "import_only",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("ImportOnly"),
			},
			{
				Name:     "destroy_scheduled_duration",
				Type:     schema.TypeInt,
				Resolver: client.ResolveProtoDuration("DestroyScheduledDuration"),
			},
			{
				Name:     "crypto_key_backend",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CryptoKeyBackend"),
			},
		},
	}
}
