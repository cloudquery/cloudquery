// Code generated by codegen; DO NOT EDIT.

package services

import (
	"github.com/cloudquery/plugin-sdk/schema"
)

func ServiceHealthChecks() *schema.Table {
	return &schema.Table{
		Name:        "fastly_service_health_checks",
		Description: `https://developer.fastly.com/reference/api/services/healthcheck/`,
		Resolver:    fetchServiceHealthChecks,
		Columns: []schema.Column{
			{
				Name:     "check_interval",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("CheckInterval"),
			},
			{
				Name:     "comment",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Comment"),
			},
			{
				Name:     "created_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedAt"),
			},
			{
				Name:     "deleted_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("DeletedAt"),
			},
			{
				Name:     "expected_response",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("ExpectedResponse"),
			},
			{
				Name:     "http_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("HTTPVersion"),
			},
			{
				Name:     "headers",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Headers"),
			},
			{
				Name:     "host",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Host"),
			},
			{
				Name:     "initial",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Initial"),
			},
			{
				Name:     "method",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Method"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "path",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Path"),
			},
			{
				Name:     "service_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ServiceID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "service_version",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("ServiceVersion"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "threshold",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Threshold"),
			},
			{
				Name:     "timeout",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Timeout"),
			},
			{
				Name:     "updated_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("UpdatedAt"),
			},
			{
				Name:     "window",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Window"),
			},
		},
	}
}
