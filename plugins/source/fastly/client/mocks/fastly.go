// Code generated by MockGen. DO NOT EDIT.
// Source: fastly.go

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	fastly "github.com/fastly/go-fastly/v7/fastly"
	gomock "github.com/golang/mock/gomock"
)

// MockFastlyClient is a mock of FastlyClient interface.
type MockFastlyClient struct {
	ctrl     *gomock.Controller
	recorder *MockFastlyClientMockRecorder
}

// MockFastlyClientMockRecorder is the mock recorder for MockFastlyClient.
type MockFastlyClientMockRecorder struct {
	mock *MockFastlyClient
}

// NewMockFastlyClient creates a new mock instance.
func NewMockFastlyClient(ctrl *gomock.Controller) *MockFastlyClient {
	mock := &MockFastlyClient{ctrl: ctrl}
	mock.recorder = &MockFastlyClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFastlyClient) EXPECT() *MockFastlyClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockFastlyClient) Get(arg0 string, arg1 *fastly.RequestOptions) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockFastlyClientMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockFastlyClient)(nil).Get), arg0, arg1)
}

// GetACL mocks base method.
func (m *MockFastlyClient) GetACL(arg0 *fastly.GetACLInput) (*fastly.ACL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetACL", arg0)
	ret0, _ := ret[0].(*fastly.ACL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetACL indicates an expected call of GetACL.
func (mr *MockFastlyClientMockRecorder) GetACL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetACL", reflect.TypeOf((*MockFastlyClient)(nil).GetACL), arg0)
}

// GetACLEntry mocks base method.
func (m *MockFastlyClient) GetACLEntry(arg0 *fastly.GetACLEntryInput) (*fastly.ACLEntry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetACLEntry", arg0)
	ret0, _ := ret[0].(*fastly.ACLEntry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetACLEntry indicates an expected call of GetACLEntry.
func (mr *MockFastlyClientMockRecorder) GetACLEntry(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetACLEntry", reflect.TypeOf((*MockFastlyClient)(nil).GetACLEntry), arg0)
}

// GetAPIEvent mocks base method.
func (m *MockFastlyClient) GetAPIEvent(arg0 *fastly.GetAPIEventInput) (*fastly.Event, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAPIEvent", arg0)
	ret0, _ := ret[0].(*fastly.Event)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAPIEvent indicates an expected call of GetAPIEvent.
func (mr *MockFastlyClientMockRecorder) GetAPIEvent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAPIEvent", reflect.TypeOf((*MockFastlyClient)(nil).GetAPIEvent), arg0)
}

// GetAPIEvents mocks base method.
func (m *MockFastlyClient) GetAPIEvents(arg0 *fastly.GetAPIEventsFilterInput) (fastly.GetAPIEventsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAPIEvents", arg0)
	ret0, _ := ret[0].(fastly.GetAPIEventsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAPIEvents indicates an expected call of GetAPIEvents.
func (mr *MockFastlyClientMockRecorder) GetAPIEvents(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAPIEvents", reflect.TypeOf((*MockFastlyClient)(nil).GetAPIEvents), arg0)
}

// GetBackend mocks base method.
func (m *MockFastlyClient) GetBackend(arg0 *fastly.GetBackendInput) (*fastly.Backend, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBackend", arg0)
	ret0, _ := ret[0].(*fastly.Backend)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBackend indicates an expected call of GetBackend.
func (mr *MockFastlyClientMockRecorder) GetBackend(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBackend", reflect.TypeOf((*MockFastlyClient)(nil).GetBackend), arg0)
}

// GetBigQuery mocks base method.
func (m *MockFastlyClient) GetBigQuery(arg0 *fastly.GetBigQueryInput) (*fastly.BigQuery, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBigQuery", arg0)
	ret0, _ := ret[0].(*fastly.BigQuery)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBigQuery indicates an expected call of GetBigQuery.
func (mr *MockFastlyClientMockRecorder) GetBigQuery(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBigQuery", reflect.TypeOf((*MockFastlyClient)(nil).GetBigQuery), arg0)
}

// GetBilling mocks base method.
func (m *MockFastlyClient) GetBilling(arg0 *fastly.GetBillingInput) (*fastly.Billing, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBilling", arg0)
	ret0, _ := ret[0].(*fastly.Billing)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBilling indicates an expected call of GetBilling.
func (mr *MockFastlyClientMockRecorder) GetBilling(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBilling", reflect.TypeOf((*MockFastlyClient)(nil).GetBilling), arg0)
}

// GetBlobStorage mocks base method.
func (m *MockFastlyClient) GetBlobStorage(arg0 *fastly.GetBlobStorageInput) (*fastly.BlobStorage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlobStorage", arg0)
	ret0, _ := ret[0].(*fastly.BlobStorage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlobStorage indicates an expected call of GetBlobStorage.
func (mr *MockFastlyClientMockRecorder) GetBlobStorage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlobStorage", reflect.TypeOf((*MockFastlyClient)(nil).GetBlobStorage), arg0)
}

// GetBulkCertificate mocks base method.
func (m *MockFastlyClient) GetBulkCertificate(arg0 *fastly.GetBulkCertificateInput) (*fastly.BulkCertificate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBulkCertificate", arg0)
	ret0, _ := ret[0].(*fastly.BulkCertificate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBulkCertificate indicates an expected call of GetBulkCertificate.
func (mr *MockFastlyClientMockRecorder) GetBulkCertificate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBulkCertificate", reflect.TypeOf((*MockFastlyClient)(nil).GetBulkCertificate), arg0)
}

// GetCacheSetting mocks base method.
func (m *MockFastlyClient) GetCacheSetting(arg0 *fastly.GetCacheSettingInput) (*fastly.CacheSetting, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCacheSetting", arg0)
	ret0, _ := ret[0].(*fastly.CacheSetting)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCacheSetting indicates an expected call of GetCacheSetting.
func (mr *MockFastlyClientMockRecorder) GetCacheSetting(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCacheSetting", reflect.TypeOf((*MockFastlyClient)(nil).GetCacheSetting), arg0)
}

// GetCloudfiles mocks base method.
func (m *MockFastlyClient) GetCloudfiles(arg0 *fastly.GetCloudfilesInput) (*fastly.Cloudfiles, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCloudfiles", arg0)
	ret0, _ := ret[0].(*fastly.Cloudfiles)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCloudfiles indicates an expected call of GetCloudfiles.
func (mr *MockFastlyClientMockRecorder) GetCloudfiles(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCloudfiles", reflect.TypeOf((*MockFastlyClient)(nil).GetCloudfiles), arg0)
}

// GetCondition mocks base method.
func (m *MockFastlyClient) GetCondition(arg0 *fastly.GetConditionInput) (*fastly.Condition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCondition", arg0)
	ret0, _ := ret[0].(*fastly.Condition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCondition indicates an expected call of GetCondition.
func (mr *MockFastlyClientMockRecorder) GetCondition(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCondition", reflect.TypeOf((*MockFastlyClient)(nil).GetCondition), arg0)
}

// GetCurrentUser mocks base method.
func (m *MockFastlyClient) GetCurrentUser() (*fastly.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentUser")
	ret0, _ := ret[0].(*fastly.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrentUser indicates an expected call of GetCurrentUser.
func (mr *MockFastlyClientMockRecorder) GetCurrentUser() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentUser", reflect.TypeOf((*MockFastlyClient)(nil).GetCurrentUser))
}

// GetCustomTLSCertificate mocks base method.
func (m *MockFastlyClient) GetCustomTLSCertificate(arg0 *fastly.GetCustomTLSCertificateInput) (*fastly.CustomTLSCertificate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomTLSCertificate", arg0)
	ret0, _ := ret[0].(*fastly.CustomTLSCertificate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCustomTLSCertificate indicates an expected call of GetCustomTLSCertificate.
func (mr *MockFastlyClientMockRecorder) GetCustomTLSCertificate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomTLSCertificate", reflect.TypeOf((*MockFastlyClient)(nil).GetCustomTLSCertificate), arg0)
}

// GetCustomTLSConfiguration mocks base method.
func (m *MockFastlyClient) GetCustomTLSConfiguration(arg0 *fastly.GetCustomTLSConfigurationInput) (*fastly.CustomTLSConfiguration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomTLSConfiguration", arg0)
	ret0, _ := ret[0].(*fastly.CustomTLSConfiguration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCustomTLSConfiguration indicates an expected call of GetCustomTLSConfiguration.
func (mr *MockFastlyClientMockRecorder) GetCustomTLSConfiguration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomTLSConfiguration", reflect.TypeOf((*MockFastlyClient)(nil).GetCustomTLSConfiguration), arg0)
}

// GetDatadog mocks base method.
func (m *MockFastlyClient) GetDatadog(arg0 *fastly.GetDatadogInput) (*fastly.Datadog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDatadog", arg0)
	ret0, _ := ret[0].(*fastly.Datadog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDatadog indicates an expected call of GetDatadog.
func (mr *MockFastlyClientMockRecorder) GetDatadog(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDatadog", reflect.TypeOf((*MockFastlyClient)(nil).GetDatadog), arg0)
}

// GetDictionary mocks base method.
func (m *MockFastlyClient) GetDictionary(arg0 *fastly.GetDictionaryInput) (*fastly.Dictionary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDictionary", arg0)
	ret0, _ := ret[0].(*fastly.Dictionary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDictionary indicates an expected call of GetDictionary.
func (mr *MockFastlyClientMockRecorder) GetDictionary(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDictionary", reflect.TypeOf((*MockFastlyClient)(nil).GetDictionary), arg0)
}

// GetDictionaryInfo mocks base method.
func (m *MockFastlyClient) GetDictionaryInfo(arg0 *fastly.GetDictionaryInfoInput) (*fastly.DictionaryInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDictionaryInfo", arg0)
	ret0, _ := ret[0].(*fastly.DictionaryInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDictionaryInfo indicates an expected call of GetDictionaryInfo.
func (mr *MockFastlyClientMockRecorder) GetDictionaryInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDictionaryInfo", reflect.TypeOf((*MockFastlyClient)(nil).GetDictionaryInfo), arg0)
}

// GetDictionaryItem mocks base method.
func (m *MockFastlyClient) GetDictionaryItem(arg0 *fastly.GetDictionaryItemInput) (*fastly.DictionaryItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDictionaryItem", arg0)
	ret0, _ := ret[0].(*fastly.DictionaryItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDictionaryItem indicates an expected call of GetDictionaryItem.
func (mr *MockFastlyClientMockRecorder) GetDictionaryItem(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDictionaryItem", reflect.TypeOf((*MockFastlyClient)(nil).GetDictionaryItem), arg0)
}

// GetDiff mocks base method.
func (m *MockFastlyClient) GetDiff(arg0 *fastly.GetDiffInput) (*fastly.Diff, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDiff", arg0)
	ret0, _ := ret[0].(*fastly.Diff)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDiff indicates an expected call of GetDiff.
func (mr *MockFastlyClientMockRecorder) GetDiff(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiff", reflect.TypeOf((*MockFastlyClient)(nil).GetDiff), arg0)
}

// GetDigitalOcean mocks base method.
func (m *MockFastlyClient) GetDigitalOcean(arg0 *fastly.GetDigitalOceanInput) (*fastly.DigitalOcean, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDigitalOcean", arg0)
	ret0, _ := ret[0].(*fastly.DigitalOcean)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDigitalOcean indicates an expected call of GetDigitalOcean.
func (mr *MockFastlyClientMockRecorder) GetDigitalOcean(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDigitalOcean", reflect.TypeOf((*MockFastlyClient)(nil).GetDigitalOcean), arg0)
}

// GetDirector mocks base method.
func (m *MockFastlyClient) GetDirector(arg0 *fastly.GetDirectorInput) (*fastly.Director, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDirector", arg0)
	ret0, _ := ret[0].(*fastly.Director)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDirector indicates an expected call of GetDirector.
func (mr *MockFastlyClientMockRecorder) GetDirector(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDirector", reflect.TypeOf((*MockFastlyClient)(nil).GetDirector), arg0)
}

// GetDirectorBackend mocks base method.
func (m *MockFastlyClient) GetDirectorBackend(arg0 *fastly.GetDirectorBackendInput) (*fastly.DirectorBackend, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDirectorBackend", arg0)
	ret0, _ := ret[0].(*fastly.DirectorBackend)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDirectorBackend indicates an expected call of GetDirectorBackend.
func (mr *MockFastlyClientMockRecorder) GetDirectorBackend(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDirectorBackend", reflect.TypeOf((*MockFastlyClient)(nil).GetDirectorBackend), arg0)
}

// GetDomain mocks base method.
func (m *MockFastlyClient) GetDomain(arg0 *fastly.GetDomainInput) (*fastly.Domain, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDomain", arg0)
	ret0, _ := ret[0].(*fastly.Domain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDomain indicates an expected call of GetDomain.
func (mr *MockFastlyClientMockRecorder) GetDomain(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDomain", reflect.TypeOf((*MockFastlyClient)(nil).GetDomain), arg0)
}

// GetDynamicSnippet mocks base method.
func (m *MockFastlyClient) GetDynamicSnippet(arg0 *fastly.GetDynamicSnippetInput) (*fastly.DynamicSnippet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDynamicSnippet", arg0)
	ret0, _ := ret[0].(*fastly.DynamicSnippet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDynamicSnippet indicates an expected call of GetDynamicSnippet.
func (mr *MockFastlyClientMockRecorder) GetDynamicSnippet(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDynamicSnippet", reflect.TypeOf((*MockFastlyClient)(nil).GetDynamicSnippet), arg0)
}

// GetERL mocks base method.
func (m *MockFastlyClient) GetERL(arg0 *fastly.GetERLInput) (*fastly.ERL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetERL", arg0)
	ret0, _ := ret[0].(*fastly.ERL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetERL indicates an expected call of GetERL.
func (mr *MockFastlyClientMockRecorder) GetERL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetERL", reflect.TypeOf((*MockFastlyClient)(nil).GetERL), arg0)
}

// GetElasticsearch mocks base method.
func (m *MockFastlyClient) GetElasticsearch(arg0 *fastly.GetElasticsearchInput) (*fastly.Elasticsearch, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetElasticsearch", arg0)
	ret0, _ := ret[0].(*fastly.Elasticsearch)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetElasticsearch indicates an expected call of GetElasticsearch.
func (mr *MockFastlyClientMockRecorder) GetElasticsearch(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetElasticsearch", reflect.TypeOf((*MockFastlyClient)(nil).GetElasticsearch), arg0)
}

// GetFTP mocks base method.
func (m *MockFastlyClient) GetFTP(arg0 *fastly.GetFTPInput) (*fastly.FTP, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFTP", arg0)
	ret0, _ := ret[0].(*fastly.FTP)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFTP indicates an expected call of GetFTP.
func (mr *MockFastlyClientMockRecorder) GetFTP(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFTP", reflect.TypeOf((*MockFastlyClient)(nil).GetFTP), arg0)
}

// GetGCS mocks base method.
func (m *MockFastlyClient) GetGCS(arg0 *fastly.GetGCSInput) (*fastly.GCS, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGCS", arg0)
	ret0, _ := ret[0].(*fastly.GCS)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGCS indicates an expected call of GetGCS.
func (mr *MockFastlyClientMockRecorder) GetGCS(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGCS", reflect.TypeOf((*MockFastlyClient)(nil).GetGCS), arg0)
}

// GetGeneratedVCL mocks base method.
func (m *MockFastlyClient) GetGeneratedVCL(arg0 *fastly.GetGeneratedVCLInput) (*fastly.VCL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGeneratedVCL", arg0)
	ret0, _ := ret[0].(*fastly.VCL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGeneratedVCL indicates an expected call of GetGeneratedVCL.
func (mr *MockFastlyClientMockRecorder) GetGeneratedVCL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGeneratedVCL", reflect.TypeOf((*MockFastlyClient)(nil).GetGeneratedVCL), arg0)
}

// GetGzip mocks base method.
func (m *MockFastlyClient) GetGzip(arg0 *fastly.GetGzipInput) (*fastly.Gzip, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGzip", arg0)
	ret0, _ := ret[0].(*fastly.Gzip)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGzip indicates an expected call of GetGzip.
func (mr *MockFastlyClientMockRecorder) GetGzip(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGzip", reflect.TypeOf((*MockFastlyClient)(nil).GetGzip), arg0)
}

// GetHTTPS mocks base method.
func (m *MockFastlyClient) GetHTTPS(arg0 *fastly.GetHTTPSInput) (*fastly.HTTPS, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHTTPS", arg0)
	ret0, _ := ret[0].(*fastly.HTTPS)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHTTPS indicates an expected call of GetHTTPS.
func (mr *MockFastlyClientMockRecorder) GetHTTPS(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHTTPS", reflect.TypeOf((*MockFastlyClient)(nil).GetHTTPS), arg0)
}

// GetHeader mocks base method.
func (m *MockFastlyClient) GetHeader(arg0 *fastly.GetHeaderInput) (*fastly.Header, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHeader", arg0)
	ret0, _ := ret[0].(*fastly.Header)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHeader indicates an expected call of GetHeader.
func (mr *MockFastlyClientMockRecorder) GetHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHeader", reflect.TypeOf((*MockFastlyClient)(nil).GetHeader), arg0)
}

// GetHealthCheck mocks base method.
func (m *MockFastlyClient) GetHealthCheck(arg0 *fastly.GetHealthCheckInput) (*fastly.HealthCheck, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHealthCheck", arg0)
	ret0, _ := ret[0].(*fastly.HealthCheck)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHealthCheck indicates an expected call of GetHealthCheck.
func (mr *MockFastlyClientMockRecorder) GetHealthCheck(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHealthCheck", reflect.TypeOf((*MockFastlyClient)(nil).GetHealthCheck), arg0)
}

// GetHeroku mocks base method.
func (m *MockFastlyClient) GetHeroku(arg0 *fastly.GetHerokuInput) (*fastly.Heroku, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHeroku", arg0)
	ret0, _ := ret[0].(*fastly.Heroku)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHeroku indicates an expected call of GetHeroku.
func (mr *MockFastlyClientMockRecorder) GetHeroku(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHeroku", reflect.TypeOf((*MockFastlyClient)(nil).GetHeroku), arg0)
}

// GetHoneycomb mocks base method.
func (m *MockFastlyClient) GetHoneycomb(arg0 *fastly.GetHoneycombInput) (*fastly.Honeycomb, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHoneycomb", arg0)
	ret0, _ := ret[0].(*fastly.Honeycomb)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHoneycomb indicates an expected call of GetHoneycomb.
func (mr *MockFastlyClientMockRecorder) GetHoneycomb(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHoneycomb", reflect.TypeOf((*MockFastlyClient)(nil).GetHoneycomb), arg0)
}

// GetKafka mocks base method.
func (m *MockFastlyClient) GetKafka(arg0 *fastly.GetKafkaInput) (*fastly.Kafka, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKafka", arg0)
	ret0, _ := ret[0].(*fastly.Kafka)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKafka indicates an expected call of GetKafka.
func (mr *MockFastlyClientMockRecorder) GetKafka(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKafka", reflect.TypeOf((*MockFastlyClient)(nil).GetKafka), arg0)
}

// GetKinesis mocks base method.
func (m *MockFastlyClient) GetKinesis(arg0 *fastly.GetKinesisInput) (*fastly.Kinesis, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKinesis", arg0)
	ret0, _ := ret[0].(*fastly.Kinesis)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKinesis indicates an expected call of GetKinesis.
func (mr *MockFastlyClientMockRecorder) GetKinesis(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKinesis", reflect.TypeOf((*MockFastlyClient)(nil).GetKinesis), arg0)
}

// GetLogentries mocks base method.
func (m *MockFastlyClient) GetLogentries(arg0 *fastly.GetLogentriesInput) (*fastly.Logentries, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogentries", arg0)
	ret0, _ := ret[0].(*fastly.Logentries)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLogentries indicates an expected call of GetLogentries.
func (mr *MockFastlyClientMockRecorder) GetLogentries(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogentries", reflect.TypeOf((*MockFastlyClient)(nil).GetLogentries), arg0)
}

// GetLoggly mocks base method.
func (m *MockFastlyClient) GetLoggly(arg0 *fastly.GetLogglyInput) (*fastly.Loggly, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoggly", arg0)
	ret0, _ := ret[0].(*fastly.Loggly)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLoggly indicates an expected call of GetLoggly.
func (mr *MockFastlyClientMockRecorder) GetLoggly(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoggly", reflect.TypeOf((*MockFastlyClient)(nil).GetLoggly), arg0)
}

// GetLogshuttle mocks base method.
func (m *MockFastlyClient) GetLogshuttle(arg0 *fastly.GetLogshuttleInput) (*fastly.Logshuttle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogshuttle", arg0)
	ret0, _ := ret[0].(*fastly.Logshuttle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLogshuttle indicates an expected call of GetLogshuttle.
func (mr *MockFastlyClientMockRecorder) GetLogshuttle(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogshuttle", reflect.TypeOf((*MockFastlyClient)(nil).GetLogshuttle), arg0)
}

// GetNewRelic mocks base method.
func (m *MockFastlyClient) GetNewRelic(arg0 *fastly.GetNewRelicInput) (*fastly.NewRelic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNewRelic", arg0)
	ret0, _ := ret[0].(*fastly.NewRelic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNewRelic indicates an expected call of GetNewRelic.
func (mr *MockFastlyClientMockRecorder) GetNewRelic(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNewRelic", reflect.TypeOf((*MockFastlyClient)(nil).GetNewRelic), arg0)
}

// GetObjectStore mocks base method.
func (m *MockFastlyClient) GetObjectStore(arg0 *fastly.GetObjectStoreInput) (*fastly.ObjectStore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObjectStore", arg0)
	ret0, _ := ret[0].(*fastly.ObjectStore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObjectStore indicates an expected call of GetObjectStore.
func (mr *MockFastlyClientMockRecorder) GetObjectStore(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObjectStore", reflect.TypeOf((*MockFastlyClient)(nil).GetObjectStore), arg0)
}

// GetObjectStoreKey mocks base method.
func (m *MockFastlyClient) GetObjectStoreKey(arg0 *fastly.GetObjectStoreKeyInput) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObjectStoreKey", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObjectStoreKey indicates an expected call of GetObjectStoreKey.
func (mr *MockFastlyClientMockRecorder) GetObjectStoreKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObjectStoreKey", reflect.TypeOf((*MockFastlyClient)(nil).GetObjectStoreKey), arg0)
}

// GetOpenstack mocks base method.
func (m *MockFastlyClient) GetOpenstack(arg0 *fastly.GetOpenstackInput) (*fastly.Openstack, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOpenstack", arg0)
	ret0, _ := ret[0].(*fastly.Openstack)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOpenstack indicates an expected call of GetOpenstack.
func (mr *MockFastlyClientMockRecorder) GetOpenstack(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOpenstack", reflect.TypeOf((*MockFastlyClient)(nil).GetOpenstack), arg0)
}

// GetOriginMetricsForService mocks base method.
func (m *MockFastlyClient) GetOriginMetricsForService(arg0 *fastly.GetOriginMetricsInput) (*fastly.OriginInspector, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOriginMetricsForService", arg0)
	ret0, _ := ret[0].(*fastly.OriginInspector)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOriginMetricsForService indicates an expected call of GetOriginMetricsForService.
func (mr *MockFastlyClientMockRecorder) GetOriginMetricsForService(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOriginMetricsForService", reflect.TypeOf((*MockFastlyClient)(nil).GetOriginMetricsForService), arg0)
}

// GetOriginMetricsForServiceJSON mocks base method.
func (m *MockFastlyClient) GetOriginMetricsForServiceJSON(arg0 *fastly.GetOriginMetricsInput, arg1 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOriginMetricsForServiceJSON", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetOriginMetricsForServiceJSON indicates an expected call of GetOriginMetricsForServiceJSON.
func (mr *MockFastlyClientMockRecorder) GetOriginMetricsForServiceJSON(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOriginMetricsForServiceJSON", reflect.TypeOf((*MockFastlyClient)(nil).GetOriginMetricsForServiceJSON), arg0, arg1)
}

// GetPackage mocks base method.
func (m *MockFastlyClient) GetPackage(arg0 *fastly.GetPackageInput) (*fastly.Package, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPackage", arg0)
	ret0, _ := ret[0].(*fastly.Package)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPackage indicates an expected call of GetPackage.
func (mr *MockFastlyClientMockRecorder) GetPackage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPackage", reflect.TypeOf((*MockFastlyClient)(nil).GetPackage), arg0)
}

// GetPapertrail mocks base method.
func (m *MockFastlyClient) GetPapertrail(arg0 *fastly.GetPapertrailInput) (*fastly.Papertrail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPapertrail", arg0)
	ret0, _ := ret[0].(*fastly.Papertrail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPapertrail indicates an expected call of GetPapertrail.
func (mr *MockFastlyClientMockRecorder) GetPapertrail(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPapertrail", reflect.TypeOf((*MockFastlyClient)(nil).GetPapertrail), arg0)
}

// GetPool mocks base method.
func (m *MockFastlyClient) GetPool(arg0 *fastly.GetPoolInput) (*fastly.Pool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPool", arg0)
	ret0, _ := ret[0].(*fastly.Pool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPool indicates an expected call of GetPool.
func (mr *MockFastlyClientMockRecorder) GetPool(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPool", reflect.TypeOf((*MockFastlyClient)(nil).GetPool), arg0)
}

// GetPrivateKey mocks base method.
func (m *MockFastlyClient) GetPrivateKey(arg0 *fastly.GetPrivateKeyInput) (*fastly.PrivateKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPrivateKey", arg0)
	ret0, _ := ret[0].(*fastly.PrivateKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPrivateKey indicates an expected call of GetPrivateKey.
func (mr *MockFastlyClientMockRecorder) GetPrivateKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPrivateKey", reflect.TypeOf((*MockFastlyClient)(nil).GetPrivateKey), arg0)
}

// GetPubsub mocks base method.
func (m *MockFastlyClient) GetPubsub(arg0 *fastly.GetPubsubInput) (*fastly.Pubsub, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPubsub", arg0)
	ret0, _ := ret[0].(*fastly.Pubsub)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPubsub indicates an expected call of GetPubsub.
func (mr *MockFastlyClientMockRecorder) GetPubsub(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPubsub", reflect.TypeOf((*MockFastlyClient)(nil).GetPubsub), arg0)
}

// GetRegions mocks base method.
func (m *MockFastlyClient) GetRegions() (*fastly.RegionsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRegions")
	ret0, _ := ret[0].(*fastly.RegionsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRegions indicates an expected call of GetRegions.
func (mr *MockFastlyClientMockRecorder) GetRegions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRegions", reflect.TypeOf((*MockFastlyClient)(nil).GetRegions))
}

// GetRequestSetting mocks base method.
func (m *MockFastlyClient) GetRequestSetting(arg0 *fastly.GetRequestSettingInput) (*fastly.RequestSetting, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRequestSetting", arg0)
	ret0, _ := ret[0].(*fastly.RequestSetting)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRequestSetting indicates an expected call of GetRequestSetting.
func (mr *MockFastlyClientMockRecorder) GetRequestSetting(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRequestSetting", reflect.TypeOf((*MockFastlyClient)(nil).GetRequestSetting), arg0)
}

// GetResponseObject mocks base method.
func (m *MockFastlyClient) GetResponseObject(arg0 *fastly.GetResponseObjectInput) (*fastly.ResponseObject, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResponseObject", arg0)
	ret0, _ := ret[0].(*fastly.ResponseObject)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResponseObject indicates an expected call of GetResponseObject.
func (mr *MockFastlyClientMockRecorder) GetResponseObject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResponseObject", reflect.TypeOf((*MockFastlyClient)(nil).GetResponseObject), arg0)
}

// GetS3 mocks base method.
func (m *MockFastlyClient) GetS3(arg0 *fastly.GetS3Input) (*fastly.S3, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetS3", arg0)
	ret0, _ := ret[0].(*fastly.S3)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetS3 indicates an expected call of GetS3.
func (mr *MockFastlyClientMockRecorder) GetS3(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetS3", reflect.TypeOf((*MockFastlyClient)(nil).GetS3), arg0)
}

// GetSFTP mocks base method.
func (m *MockFastlyClient) GetSFTP(arg0 *fastly.GetSFTPInput) (*fastly.SFTP, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSFTP", arg0)
	ret0, _ := ret[0].(*fastly.SFTP)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSFTP indicates an expected call of GetSFTP.
func (mr *MockFastlyClientMockRecorder) GetSFTP(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSFTP", reflect.TypeOf((*MockFastlyClient)(nil).GetSFTP), arg0)
}

// GetScalyr mocks base method.
func (m *MockFastlyClient) GetScalyr(arg0 *fastly.GetScalyrInput) (*fastly.Scalyr, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScalyr", arg0)
	ret0, _ := ret[0].(*fastly.Scalyr)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetScalyr indicates an expected call of GetScalyr.
func (mr *MockFastlyClientMockRecorder) GetScalyr(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScalyr", reflect.TypeOf((*MockFastlyClient)(nil).GetScalyr), arg0)
}

// GetSecret mocks base method.
func (m *MockFastlyClient) GetSecret(arg0 *fastly.GetSecretInput) (*fastly.Secret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecret", arg0)
	ret0, _ := ret[0].(*fastly.Secret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecret indicates an expected call of GetSecret.
func (mr *MockFastlyClientMockRecorder) GetSecret(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockFastlyClient)(nil).GetSecret), arg0)
}

// GetSecretStore mocks base method.
func (m *MockFastlyClient) GetSecretStore(arg0 *fastly.GetSecretStoreInput) (*fastly.SecretStore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecretStore", arg0)
	ret0, _ := ret[0].(*fastly.SecretStore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecretStore indicates an expected call of GetSecretStore.
func (mr *MockFastlyClientMockRecorder) GetSecretStore(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecretStore", reflect.TypeOf((*MockFastlyClient)(nil).GetSecretStore), arg0)
}

// GetServer mocks base method.
func (m *MockFastlyClient) GetServer(arg0 *fastly.GetServerInput) (*fastly.Server, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServer", arg0)
	ret0, _ := ret[0].(*fastly.Server)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetServer indicates an expected call of GetServer.
func (mr *MockFastlyClientMockRecorder) GetServer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServer", reflect.TypeOf((*MockFastlyClient)(nil).GetServer), arg0)
}

// GetService mocks base method.
func (m *MockFastlyClient) GetService(arg0 *fastly.GetServiceInput) (*fastly.Service, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetService", arg0)
	ret0, _ := ret[0].(*fastly.Service)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetService indicates an expected call of GetService.
func (mr *MockFastlyClientMockRecorder) GetService(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetService", reflect.TypeOf((*MockFastlyClient)(nil).GetService), arg0)
}

// GetServiceAuthorization mocks base method.
func (m *MockFastlyClient) GetServiceAuthorization(arg0 *fastly.GetServiceAuthorizationInput) (*fastly.ServiceAuthorization, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServiceAuthorization", arg0)
	ret0, _ := ret[0].(*fastly.ServiceAuthorization)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetServiceAuthorization indicates an expected call of GetServiceAuthorization.
func (mr *MockFastlyClientMockRecorder) GetServiceAuthorization(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceAuthorization", reflect.TypeOf((*MockFastlyClient)(nil).GetServiceAuthorization), arg0)
}

// GetServiceDetails mocks base method.
func (m *MockFastlyClient) GetServiceDetails(arg0 *fastly.GetServiceInput) (*fastly.ServiceDetail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServiceDetails", arg0)
	ret0, _ := ret[0].(*fastly.ServiceDetail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetServiceDetails indicates an expected call of GetServiceDetails.
func (mr *MockFastlyClientMockRecorder) GetServiceDetails(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceDetails", reflect.TypeOf((*MockFastlyClient)(nil).GetServiceDetails), arg0)
}

// GetSettings mocks base method.
func (m *MockFastlyClient) GetSettings(arg0 *fastly.GetSettingsInput) (*fastly.Settings, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSettings", arg0)
	ret0, _ := ret[0].(*fastly.Settings)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSettings indicates an expected call of GetSettings.
func (mr *MockFastlyClientMockRecorder) GetSettings(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSettings", reflect.TypeOf((*MockFastlyClient)(nil).GetSettings), arg0)
}

// GetSnippet mocks base method.
func (m *MockFastlyClient) GetSnippet(arg0 *fastly.GetSnippetInput) (*fastly.Snippet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSnippet", arg0)
	ret0, _ := ret[0].(*fastly.Snippet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSnippet indicates an expected call of GetSnippet.
func (mr *MockFastlyClientMockRecorder) GetSnippet(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSnippet", reflect.TypeOf((*MockFastlyClient)(nil).GetSnippet), arg0)
}

// GetSplunk mocks base method.
func (m *MockFastlyClient) GetSplunk(arg0 *fastly.GetSplunkInput) (*fastly.Splunk, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSplunk", arg0)
	ret0, _ := ret[0].(*fastly.Splunk)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSplunk indicates an expected call of GetSplunk.
func (mr *MockFastlyClientMockRecorder) GetSplunk(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSplunk", reflect.TypeOf((*MockFastlyClient)(nil).GetSplunk), arg0)
}

// GetStats mocks base method.
func (m *MockFastlyClient) GetStats(arg0 *fastly.GetStatsInput) (*fastly.StatsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStats", arg0)
	ret0, _ := ret[0].(*fastly.StatsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStats indicates an expected call of GetStats.
func (mr *MockFastlyClientMockRecorder) GetStats(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStats", reflect.TypeOf((*MockFastlyClient)(nil).GetStats), arg0)
}

// GetStatsField mocks base method.
func (m *MockFastlyClient) GetStatsField(arg0 *fastly.GetStatsInput) (*fastly.StatsFieldResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatsField", arg0)
	ret0, _ := ret[0].(*fastly.StatsFieldResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatsField indicates an expected call of GetStatsField.
func (mr *MockFastlyClientMockRecorder) GetStatsField(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatsField", reflect.TypeOf((*MockFastlyClient)(nil).GetStatsField), arg0)
}

// GetStatsJSON mocks base method.
func (m *MockFastlyClient) GetStatsJSON(arg0 *fastly.GetStatsInput, arg1 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatsJSON", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetStatsJSON indicates an expected call of GetStatsJSON.
func (mr *MockFastlyClientMockRecorder) GetStatsJSON(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatsJSON", reflect.TypeOf((*MockFastlyClient)(nil).GetStatsJSON), arg0, arg1)
}

// GetSumologic mocks base method.
func (m *MockFastlyClient) GetSumologic(arg0 *fastly.GetSumologicInput) (*fastly.Sumologic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSumologic", arg0)
	ret0, _ := ret[0].(*fastly.Sumologic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSumologic indicates an expected call of GetSumologic.
func (mr *MockFastlyClientMockRecorder) GetSumologic(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSumologic", reflect.TypeOf((*MockFastlyClient)(nil).GetSumologic), arg0)
}

// GetSyslog mocks base method.
func (m *MockFastlyClient) GetSyslog(arg0 *fastly.GetSyslogInput) (*fastly.Syslog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSyslog", arg0)
	ret0, _ := ret[0].(*fastly.Syslog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSyslog indicates an expected call of GetSyslog.
func (mr *MockFastlyClientMockRecorder) GetSyslog(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSyslog", reflect.TypeOf((*MockFastlyClient)(nil).GetSyslog), arg0)
}

// GetTLSActivation mocks base method.
func (m *MockFastlyClient) GetTLSActivation(arg0 *fastly.GetTLSActivationInput) (*fastly.TLSActivation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTLSActivation", arg0)
	ret0, _ := ret[0].(*fastly.TLSActivation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTLSActivation indicates an expected call of GetTLSActivation.
func (mr *MockFastlyClientMockRecorder) GetTLSActivation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTLSActivation", reflect.TypeOf((*MockFastlyClient)(nil).GetTLSActivation), arg0)
}

// GetTLSSubscription mocks base method.
func (m *MockFastlyClient) GetTLSSubscription(arg0 *fastly.GetTLSSubscriptionInput) (*fastly.TLSSubscription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTLSSubscription", arg0)
	ret0, _ := ret[0].(*fastly.TLSSubscription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTLSSubscription indicates an expected call of GetTLSSubscription.
func (mr *MockFastlyClientMockRecorder) GetTLSSubscription(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTLSSubscription", reflect.TypeOf((*MockFastlyClient)(nil).GetTLSSubscription), arg0)
}

// GetTokenSelf mocks base method.
func (m *MockFastlyClient) GetTokenSelf() (*fastly.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenSelf")
	ret0, _ := ret[0].(*fastly.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTokenSelf indicates an expected call of GetTokenSelf.
func (mr *MockFastlyClientMockRecorder) GetTokenSelf() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenSelf", reflect.TypeOf((*MockFastlyClient)(nil).GetTokenSelf))
}

// GetUsage mocks base method.
func (m *MockFastlyClient) GetUsage(arg0 *fastly.GetUsageInput) (*fastly.UsageResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsage", arg0)
	ret0, _ := ret[0].(*fastly.UsageResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsage indicates an expected call of GetUsage.
func (mr *MockFastlyClientMockRecorder) GetUsage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsage", reflect.TypeOf((*MockFastlyClient)(nil).GetUsage), arg0)
}

// GetUsageByService mocks base method.
func (m *MockFastlyClient) GetUsageByService(arg0 *fastly.GetUsageInput) (*fastly.UsageByServiceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsageByService", arg0)
	ret0, _ := ret[0].(*fastly.UsageByServiceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsageByService indicates an expected call of GetUsageByService.
func (mr *MockFastlyClientMockRecorder) GetUsageByService(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsageByService", reflect.TypeOf((*MockFastlyClient)(nil).GetUsageByService), arg0)
}

// GetUser mocks base method.
func (m *MockFastlyClient) GetUser(arg0 *fastly.GetUserInput) (*fastly.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", arg0)
	ret0, _ := ret[0].(*fastly.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockFastlyClientMockRecorder) GetUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockFastlyClient)(nil).GetUser), arg0)
}

// GetVCL mocks base method.
func (m *MockFastlyClient) GetVCL(arg0 *fastly.GetVCLInput) (*fastly.VCL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVCL", arg0)
	ret0, _ := ret[0].(*fastly.VCL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVCL indicates an expected call of GetVCL.
func (mr *MockFastlyClientMockRecorder) GetVCL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVCL", reflect.TypeOf((*MockFastlyClient)(nil).GetVCL), arg0)
}

// GetVersion mocks base method.
func (m *MockFastlyClient) GetVersion(arg0 *fastly.GetVersionInput) (*fastly.Version, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVersion", arg0)
	ret0, _ := ret[0].(*fastly.Version)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVersion indicates an expected call of GetVersion.
func (mr *MockFastlyClientMockRecorder) GetVersion(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVersion", reflect.TypeOf((*MockFastlyClient)(nil).GetVersion), arg0)
}

// GetWAF mocks base method.
func (m *MockFastlyClient) GetWAF(arg0 *fastly.GetWAFInput) (*fastly.WAF, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWAF", arg0)
	ret0, _ := ret[0].(*fastly.WAF)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWAF indicates an expected call of GetWAF.
func (mr *MockFastlyClientMockRecorder) GetWAF(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWAF", reflect.TypeOf((*MockFastlyClient)(nil).GetWAF), arg0)
}

// GetWAFVersion mocks base method.
func (m *MockFastlyClient) GetWAFVersion(arg0 *fastly.GetWAFVersionInput) (*fastly.WAFVersion, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWAFVersion", arg0)
	ret0, _ := ret[0].(*fastly.WAFVersion)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWAFVersion indicates an expected call of GetWAFVersion.
func (mr *MockFastlyClientMockRecorder) GetWAFVersion(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWAFVersion", reflect.TypeOf((*MockFastlyClient)(nil).GetWAFVersion), arg0)
}

// ListACLEntries mocks base method.
func (m *MockFastlyClient) ListACLEntries(arg0 *fastly.ListACLEntriesInput) ([]*fastly.ACLEntry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListACLEntries", arg0)
	ret0, _ := ret[0].([]*fastly.ACLEntry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListACLEntries indicates an expected call of ListACLEntries.
func (mr *MockFastlyClientMockRecorder) ListACLEntries(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListACLEntries", reflect.TypeOf((*MockFastlyClient)(nil).ListACLEntries), arg0)
}

// ListACLs mocks base method.
func (m *MockFastlyClient) ListACLs(arg0 *fastly.ListACLsInput) ([]*fastly.ACL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListACLs", arg0)
	ret0, _ := ret[0].([]*fastly.ACL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListACLs indicates an expected call of ListACLs.
func (mr *MockFastlyClientMockRecorder) ListACLs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListACLs", reflect.TypeOf((*MockFastlyClient)(nil).ListACLs), arg0)
}

// ListAllWAFActiveRules mocks base method.
func (m *MockFastlyClient) ListAllWAFActiveRules(arg0 *fastly.ListAllWAFActiveRulesInput) (*fastly.WAFActiveRuleResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAllWAFActiveRules", arg0)
	ret0, _ := ret[0].(*fastly.WAFActiveRuleResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAllWAFActiveRules indicates an expected call of ListAllWAFActiveRules.
func (mr *MockFastlyClientMockRecorder) ListAllWAFActiveRules(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAllWAFActiveRules", reflect.TypeOf((*MockFastlyClient)(nil).ListAllWAFActiveRules), arg0)
}

// ListAllWAFRuleExclusions mocks base method.
func (m *MockFastlyClient) ListAllWAFRuleExclusions(arg0 *fastly.ListAllWAFRuleExclusionsInput) (*fastly.WAFRuleExclusionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAllWAFRuleExclusions", arg0)
	ret0, _ := ret[0].(*fastly.WAFRuleExclusionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAllWAFRuleExclusions indicates an expected call of ListAllWAFRuleExclusions.
func (mr *MockFastlyClientMockRecorder) ListAllWAFRuleExclusions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAllWAFRuleExclusions", reflect.TypeOf((*MockFastlyClient)(nil).ListAllWAFRuleExclusions), arg0)
}

// ListAllWAFRules mocks base method.
func (m *MockFastlyClient) ListAllWAFRules(arg0 *fastly.ListAllWAFRulesInput) (*fastly.WAFRuleResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAllWAFRules", arg0)
	ret0, _ := ret[0].(*fastly.WAFRuleResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAllWAFRules indicates an expected call of ListAllWAFRules.
func (mr *MockFastlyClientMockRecorder) ListAllWAFRules(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAllWAFRules", reflect.TypeOf((*MockFastlyClient)(nil).ListAllWAFRules), arg0)
}

// ListAllWAFVersions mocks base method.
func (m *MockFastlyClient) ListAllWAFVersions(arg0 *fastly.ListAllWAFVersionsInput) (*fastly.WAFVersionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAllWAFVersions", arg0)
	ret0, _ := ret[0].(*fastly.WAFVersionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAllWAFVersions indicates an expected call of ListAllWAFVersions.
func (mr *MockFastlyClientMockRecorder) ListAllWAFVersions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAllWAFVersions", reflect.TypeOf((*MockFastlyClient)(nil).ListAllWAFVersions), arg0)
}

// ListBackends mocks base method.
func (m *MockFastlyClient) ListBackends(arg0 *fastly.ListBackendsInput) ([]*fastly.Backend, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBackends", arg0)
	ret0, _ := ret[0].([]*fastly.Backend)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListBackends indicates an expected call of ListBackends.
func (mr *MockFastlyClientMockRecorder) ListBackends(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBackends", reflect.TypeOf((*MockFastlyClient)(nil).ListBackends), arg0)
}

// ListBigQueries mocks base method.
func (m *MockFastlyClient) ListBigQueries(arg0 *fastly.ListBigQueriesInput) ([]*fastly.BigQuery, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBigQueries", arg0)
	ret0, _ := ret[0].([]*fastly.BigQuery)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListBigQueries indicates an expected call of ListBigQueries.
func (mr *MockFastlyClientMockRecorder) ListBigQueries(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBigQueries", reflect.TypeOf((*MockFastlyClient)(nil).ListBigQueries), arg0)
}

// ListBlobStorages mocks base method.
func (m *MockFastlyClient) ListBlobStorages(arg0 *fastly.ListBlobStoragesInput) ([]*fastly.BlobStorage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBlobStorages", arg0)
	ret0, _ := ret[0].([]*fastly.BlobStorage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListBlobStorages indicates an expected call of ListBlobStorages.
func (mr *MockFastlyClientMockRecorder) ListBlobStorages(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBlobStorages", reflect.TypeOf((*MockFastlyClient)(nil).ListBlobStorages), arg0)
}

// ListBulkCertificates mocks base method.
func (m *MockFastlyClient) ListBulkCertificates(arg0 *fastly.ListBulkCertificatesInput) ([]*fastly.BulkCertificate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBulkCertificates", arg0)
	ret0, _ := ret[0].([]*fastly.BulkCertificate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListBulkCertificates indicates an expected call of ListBulkCertificates.
func (mr *MockFastlyClientMockRecorder) ListBulkCertificates(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBulkCertificates", reflect.TypeOf((*MockFastlyClient)(nil).ListBulkCertificates), arg0)
}

// ListCacheSettings mocks base method.
func (m *MockFastlyClient) ListCacheSettings(arg0 *fastly.ListCacheSettingsInput) ([]*fastly.CacheSetting, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCacheSettings", arg0)
	ret0, _ := ret[0].([]*fastly.CacheSetting)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCacheSettings indicates an expected call of ListCacheSettings.
func (mr *MockFastlyClientMockRecorder) ListCacheSettings(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCacheSettings", reflect.TypeOf((*MockFastlyClient)(nil).ListCacheSettings), arg0)
}

// ListCloudfiles mocks base method.
func (m *MockFastlyClient) ListCloudfiles(arg0 *fastly.ListCloudfilesInput) ([]*fastly.Cloudfiles, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCloudfiles", arg0)
	ret0, _ := ret[0].([]*fastly.Cloudfiles)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCloudfiles indicates an expected call of ListCloudfiles.
func (mr *MockFastlyClientMockRecorder) ListCloudfiles(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCloudfiles", reflect.TypeOf((*MockFastlyClient)(nil).ListCloudfiles), arg0)
}

// ListConditions mocks base method.
func (m *MockFastlyClient) ListConditions(arg0 *fastly.ListConditionsInput) ([]*fastly.Condition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListConditions", arg0)
	ret0, _ := ret[0].([]*fastly.Condition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListConditions indicates an expected call of ListConditions.
func (mr *MockFastlyClientMockRecorder) ListConditions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListConditions", reflect.TypeOf((*MockFastlyClient)(nil).ListConditions), arg0)
}

// ListCustomTLSCertificates mocks base method.
func (m *MockFastlyClient) ListCustomTLSCertificates(arg0 *fastly.ListCustomTLSCertificatesInput) ([]*fastly.CustomTLSCertificate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCustomTLSCertificates", arg0)
	ret0, _ := ret[0].([]*fastly.CustomTLSCertificate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCustomTLSCertificates indicates an expected call of ListCustomTLSCertificates.
func (mr *MockFastlyClientMockRecorder) ListCustomTLSCertificates(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCustomTLSCertificates", reflect.TypeOf((*MockFastlyClient)(nil).ListCustomTLSCertificates), arg0)
}

// ListCustomTLSConfigurations mocks base method.
func (m *MockFastlyClient) ListCustomTLSConfigurations(arg0 *fastly.ListCustomTLSConfigurationsInput) ([]*fastly.CustomTLSConfiguration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCustomTLSConfigurations", arg0)
	ret0, _ := ret[0].([]*fastly.CustomTLSConfiguration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCustomTLSConfigurations indicates an expected call of ListCustomTLSConfigurations.
func (mr *MockFastlyClientMockRecorder) ListCustomTLSConfigurations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCustomTLSConfigurations", reflect.TypeOf((*MockFastlyClient)(nil).ListCustomTLSConfigurations), arg0)
}

// ListCustomerTokens mocks base method.
func (m *MockFastlyClient) ListCustomerTokens(arg0 *fastly.ListCustomerTokensInput) ([]*fastly.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCustomerTokens", arg0)
	ret0, _ := ret[0].([]*fastly.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCustomerTokens indicates an expected call of ListCustomerTokens.
func (mr *MockFastlyClientMockRecorder) ListCustomerTokens(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCustomerTokens", reflect.TypeOf((*MockFastlyClient)(nil).ListCustomerTokens), arg0)
}

// ListCustomerUsers mocks base method.
func (m *MockFastlyClient) ListCustomerUsers(arg0 *fastly.ListCustomerUsersInput) ([]*fastly.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCustomerUsers", arg0)
	ret0, _ := ret[0].([]*fastly.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCustomerUsers indicates an expected call of ListCustomerUsers.
func (mr *MockFastlyClientMockRecorder) ListCustomerUsers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCustomerUsers", reflect.TypeOf((*MockFastlyClient)(nil).ListCustomerUsers), arg0)
}

// ListDatadog mocks base method.
func (m *MockFastlyClient) ListDatadog(arg0 *fastly.ListDatadogInput) ([]*fastly.Datadog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDatadog", arg0)
	ret0, _ := ret[0].([]*fastly.Datadog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDatadog indicates an expected call of ListDatadog.
func (mr *MockFastlyClientMockRecorder) ListDatadog(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDatadog", reflect.TypeOf((*MockFastlyClient)(nil).ListDatadog), arg0)
}

// ListDictionaries mocks base method.
func (m *MockFastlyClient) ListDictionaries(arg0 *fastly.ListDictionariesInput) ([]*fastly.Dictionary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDictionaries", arg0)
	ret0, _ := ret[0].([]*fastly.Dictionary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDictionaries indicates an expected call of ListDictionaries.
func (mr *MockFastlyClientMockRecorder) ListDictionaries(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDictionaries", reflect.TypeOf((*MockFastlyClient)(nil).ListDictionaries), arg0)
}

// ListDictionaryItems mocks base method.
func (m *MockFastlyClient) ListDictionaryItems(arg0 *fastly.ListDictionaryItemsInput) ([]*fastly.DictionaryItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDictionaryItems", arg0)
	ret0, _ := ret[0].([]*fastly.DictionaryItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDictionaryItems indicates an expected call of ListDictionaryItems.
func (mr *MockFastlyClientMockRecorder) ListDictionaryItems(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDictionaryItems", reflect.TypeOf((*MockFastlyClient)(nil).ListDictionaryItems), arg0)
}

// ListDigitalOceans mocks base method.
func (m *MockFastlyClient) ListDigitalOceans(arg0 *fastly.ListDigitalOceansInput) ([]*fastly.DigitalOcean, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDigitalOceans", arg0)
	ret0, _ := ret[0].([]*fastly.DigitalOcean)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDigitalOceans indicates an expected call of ListDigitalOceans.
func (mr *MockFastlyClientMockRecorder) ListDigitalOceans(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDigitalOceans", reflect.TypeOf((*MockFastlyClient)(nil).ListDigitalOceans), arg0)
}

// ListDirectors mocks base method.
func (m *MockFastlyClient) ListDirectors(arg0 *fastly.ListDirectorsInput) ([]*fastly.Director, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDirectors", arg0)
	ret0, _ := ret[0].([]*fastly.Director)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDirectors indicates an expected call of ListDirectors.
func (mr *MockFastlyClientMockRecorder) ListDirectors(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDirectors", reflect.TypeOf((*MockFastlyClient)(nil).ListDirectors), arg0)
}

// ListDomains mocks base method.
func (m *MockFastlyClient) ListDomains(arg0 *fastly.ListDomainsInput) ([]*fastly.Domain, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDomains", arg0)
	ret0, _ := ret[0].([]*fastly.Domain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDomains indicates an expected call of ListDomains.
func (mr *MockFastlyClientMockRecorder) ListDomains(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDomains", reflect.TypeOf((*MockFastlyClient)(nil).ListDomains), arg0)
}

// ListERLs mocks base method.
func (m *MockFastlyClient) ListERLs(arg0 *fastly.ListERLsInput) ([]*fastly.ERL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListERLs", arg0)
	ret0, _ := ret[0].([]*fastly.ERL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListERLs indicates an expected call of ListERLs.
func (mr *MockFastlyClientMockRecorder) ListERLs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListERLs", reflect.TypeOf((*MockFastlyClient)(nil).ListERLs), arg0)
}

// ListElasticsearch mocks base method.
func (m *MockFastlyClient) ListElasticsearch(arg0 *fastly.ListElasticsearchInput) ([]*fastly.Elasticsearch, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListElasticsearch", arg0)
	ret0, _ := ret[0].([]*fastly.Elasticsearch)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListElasticsearch indicates an expected call of ListElasticsearch.
func (mr *MockFastlyClientMockRecorder) ListElasticsearch(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListElasticsearch", reflect.TypeOf((*MockFastlyClient)(nil).ListElasticsearch), arg0)
}

// ListFTPs mocks base method.
func (m *MockFastlyClient) ListFTPs(arg0 *fastly.ListFTPsInput) ([]*fastly.FTP, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListFTPs", arg0)
	ret0, _ := ret[0].([]*fastly.FTP)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListFTPs indicates an expected call of ListFTPs.
func (mr *MockFastlyClientMockRecorder) ListFTPs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFTPs", reflect.TypeOf((*MockFastlyClient)(nil).ListFTPs), arg0)
}

// ListGCSs mocks base method.
func (m *MockFastlyClient) ListGCSs(arg0 *fastly.ListGCSsInput) ([]*fastly.GCS, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListGCSs", arg0)
	ret0, _ := ret[0].([]*fastly.GCS)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListGCSs indicates an expected call of ListGCSs.
func (mr *MockFastlyClientMockRecorder) ListGCSs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGCSs", reflect.TypeOf((*MockFastlyClient)(nil).ListGCSs), arg0)
}

// ListGzips mocks base method.
func (m *MockFastlyClient) ListGzips(arg0 *fastly.ListGzipsInput) ([]*fastly.Gzip, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListGzips", arg0)
	ret0, _ := ret[0].([]*fastly.Gzip)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListGzips indicates an expected call of ListGzips.
func (mr *MockFastlyClientMockRecorder) ListGzips(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGzips", reflect.TypeOf((*MockFastlyClient)(nil).ListGzips), arg0)
}

// ListHTTPS mocks base method.
func (m *MockFastlyClient) ListHTTPS(arg0 *fastly.ListHTTPSInput) ([]*fastly.HTTPS, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListHTTPS", arg0)
	ret0, _ := ret[0].([]*fastly.HTTPS)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListHTTPS indicates an expected call of ListHTTPS.
func (mr *MockFastlyClientMockRecorder) ListHTTPS(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListHTTPS", reflect.TypeOf((*MockFastlyClient)(nil).ListHTTPS), arg0)
}

// ListHeaders mocks base method.
func (m *MockFastlyClient) ListHeaders(arg0 *fastly.ListHeadersInput) ([]*fastly.Header, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListHeaders", arg0)
	ret0, _ := ret[0].([]*fastly.Header)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListHeaders indicates an expected call of ListHeaders.
func (mr *MockFastlyClientMockRecorder) ListHeaders(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListHeaders", reflect.TypeOf((*MockFastlyClient)(nil).ListHeaders), arg0)
}

// ListHealthChecks mocks base method.
func (m *MockFastlyClient) ListHealthChecks(arg0 *fastly.ListHealthChecksInput) ([]*fastly.HealthCheck, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListHealthChecks", arg0)
	ret0, _ := ret[0].([]*fastly.HealthCheck)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListHealthChecks indicates an expected call of ListHealthChecks.
func (mr *MockFastlyClientMockRecorder) ListHealthChecks(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListHealthChecks", reflect.TypeOf((*MockFastlyClient)(nil).ListHealthChecks), arg0)
}

// ListHerokus mocks base method.
func (m *MockFastlyClient) ListHerokus(arg0 *fastly.ListHerokusInput) ([]*fastly.Heroku, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListHerokus", arg0)
	ret0, _ := ret[0].([]*fastly.Heroku)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListHerokus indicates an expected call of ListHerokus.
func (mr *MockFastlyClientMockRecorder) ListHerokus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListHerokus", reflect.TypeOf((*MockFastlyClient)(nil).ListHerokus), arg0)
}

// ListHoneycombs mocks base method.
func (m *MockFastlyClient) ListHoneycombs(arg0 *fastly.ListHoneycombsInput) ([]*fastly.Honeycomb, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListHoneycombs", arg0)
	ret0, _ := ret[0].([]*fastly.Honeycomb)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListHoneycombs indicates an expected call of ListHoneycombs.
func (mr *MockFastlyClientMockRecorder) ListHoneycombs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListHoneycombs", reflect.TypeOf((*MockFastlyClient)(nil).ListHoneycombs), arg0)
}

// ListKafkas mocks base method.
func (m *MockFastlyClient) ListKafkas(arg0 *fastly.ListKafkasInput) ([]*fastly.Kafka, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListKafkas", arg0)
	ret0, _ := ret[0].([]*fastly.Kafka)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListKafkas indicates an expected call of ListKafkas.
func (mr *MockFastlyClientMockRecorder) ListKafkas(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListKafkas", reflect.TypeOf((*MockFastlyClient)(nil).ListKafkas), arg0)
}

// ListKinesis mocks base method.
func (m *MockFastlyClient) ListKinesis(arg0 *fastly.ListKinesisInput) ([]*fastly.Kinesis, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListKinesis", arg0)
	ret0, _ := ret[0].([]*fastly.Kinesis)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListKinesis indicates an expected call of ListKinesis.
func (mr *MockFastlyClientMockRecorder) ListKinesis(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListKinesis", reflect.TypeOf((*MockFastlyClient)(nil).ListKinesis), arg0)
}

// ListLogentries mocks base method.
func (m *MockFastlyClient) ListLogentries(arg0 *fastly.ListLogentriesInput) ([]*fastly.Logentries, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListLogentries", arg0)
	ret0, _ := ret[0].([]*fastly.Logentries)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListLogentries indicates an expected call of ListLogentries.
func (mr *MockFastlyClientMockRecorder) ListLogentries(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListLogentries", reflect.TypeOf((*MockFastlyClient)(nil).ListLogentries), arg0)
}

// ListLoggly mocks base method.
func (m *MockFastlyClient) ListLoggly(arg0 *fastly.ListLogglyInput) ([]*fastly.Loggly, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListLoggly", arg0)
	ret0, _ := ret[0].([]*fastly.Loggly)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListLoggly indicates an expected call of ListLoggly.
func (mr *MockFastlyClientMockRecorder) ListLoggly(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListLoggly", reflect.TypeOf((*MockFastlyClient)(nil).ListLoggly), arg0)
}

// ListLogshuttles mocks base method.
func (m *MockFastlyClient) ListLogshuttles(arg0 *fastly.ListLogshuttlesInput) ([]*fastly.Logshuttle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListLogshuttles", arg0)
	ret0, _ := ret[0].([]*fastly.Logshuttle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListLogshuttles indicates an expected call of ListLogshuttles.
func (mr *MockFastlyClientMockRecorder) ListLogshuttles(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListLogshuttles", reflect.TypeOf((*MockFastlyClient)(nil).ListLogshuttles), arg0)
}

// ListNewRelic mocks base method.
func (m *MockFastlyClient) ListNewRelic(arg0 *fastly.ListNewRelicInput) ([]*fastly.NewRelic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNewRelic", arg0)
	ret0, _ := ret[0].([]*fastly.NewRelic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNewRelic indicates an expected call of ListNewRelic.
func (mr *MockFastlyClientMockRecorder) ListNewRelic(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNewRelic", reflect.TypeOf((*MockFastlyClient)(nil).ListNewRelic), arg0)
}

// ListObjectStoreKeys mocks base method.
func (m *MockFastlyClient) ListObjectStoreKeys(arg0 *fastly.ListObjectStoreKeysInput) (*fastly.ListObjectStoreKeysResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListObjectStoreKeys", arg0)
	ret0, _ := ret[0].(*fastly.ListObjectStoreKeysResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListObjectStoreKeys indicates an expected call of ListObjectStoreKeys.
func (mr *MockFastlyClientMockRecorder) ListObjectStoreKeys(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListObjectStoreKeys", reflect.TypeOf((*MockFastlyClient)(nil).ListObjectStoreKeys), arg0)
}

// ListObjectStores mocks base method.
func (m *MockFastlyClient) ListObjectStores(arg0 *fastly.ListObjectStoresInput) (*fastly.ListObjectStoresResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListObjectStores", arg0)
	ret0, _ := ret[0].(*fastly.ListObjectStoresResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListObjectStores indicates an expected call of ListObjectStores.
func (mr *MockFastlyClientMockRecorder) ListObjectStores(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListObjectStores", reflect.TypeOf((*MockFastlyClient)(nil).ListObjectStores), arg0)
}

// ListOpenstack mocks base method.
func (m *MockFastlyClient) ListOpenstack(arg0 *fastly.ListOpenstackInput) ([]*fastly.Openstack, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOpenstack", arg0)
	ret0, _ := ret[0].([]*fastly.Openstack)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOpenstack indicates an expected call of ListOpenstack.
func (mr *MockFastlyClientMockRecorder) ListOpenstack(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOpenstack", reflect.TypeOf((*MockFastlyClient)(nil).ListOpenstack), arg0)
}

// ListPapertrails mocks base method.
func (m *MockFastlyClient) ListPapertrails(arg0 *fastly.ListPapertrailsInput) ([]*fastly.Papertrail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPapertrails", arg0)
	ret0, _ := ret[0].([]*fastly.Papertrail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPapertrails indicates an expected call of ListPapertrails.
func (mr *MockFastlyClientMockRecorder) ListPapertrails(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPapertrails", reflect.TypeOf((*MockFastlyClient)(nil).ListPapertrails), arg0)
}

// ListPools mocks base method.
func (m *MockFastlyClient) ListPools(arg0 *fastly.ListPoolsInput) ([]*fastly.Pool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPools", arg0)
	ret0, _ := ret[0].([]*fastly.Pool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPools indicates an expected call of ListPools.
func (mr *MockFastlyClientMockRecorder) ListPools(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPools", reflect.TypeOf((*MockFastlyClient)(nil).ListPools), arg0)
}

// ListPrivateKeys mocks base method.
func (m *MockFastlyClient) ListPrivateKeys(arg0 *fastly.ListPrivateKeysInput) ([]*fastly.PrivateKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPrivateKeys", arg0)
	ret0, _ := ret[0].([]*fastly.PrivateKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPrivateKeys indicates an expected call of ListPrivateKeys.
func (mr *MockFastlyClientMockRecorder) ListPrivateKeys(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPrivateKeys", reflect.TypeOf((*MockFastlyClient)(nil).ListPrivateKeys), arg0)
}

// ListPubsubs mocks base method.
func (m *MockFastlyClient) ListPubsubs(arg0 *fastly.ListPubsubsInput) ([]*fastly.Pubsub, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPubsubs", arg0)
	ret0, _ := ret[0].([]*fastly.Pubsub)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPubsubs indicates an expected call of ListPubsubs.
func (mr *MockFastlyClientMockRecorder) ListPubsubs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPubsubs", reflect.TypeOf((*MockFastlyClient)(nil).ListPubsubs), arg0)
}

// ListRequestSettings mocks base method.
func (m *MockFastlyClient) ListRequestSettings(arg0 *fastly.ListRequestSettingsInput) ([]*fastly.RequestSetting, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRequestSettings", arg0)
	ret0, _ := ret[0].([]*fastly.RequestSetting)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRequestSettings indicates an expected call of ListRequestSettings.
func (mr *MockFastlyClientMockRecorder) ListRequestSettings(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRequestSettings", reflect.TypeOf((*MockFastlyClient)(nil).ListRequestSettings), arg0)
}

// ListResponseObjects mocks base method.
func (m *MockFastlyClient) ListResponseObjects(arg0 *fastly.ListResponseObjectsInput) ([]*fastly.ResponseObject, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListResponseObjects", arg0)
	ret0, _ := ret[0].([]*fastly.ResponseObject)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListResponseObjects indicates an expected call of ListResponseObjects.
func (mr *MockFastlyClientMockRecorder) ListResponseObjects(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListResponseObjects", reflect.TypeOf((*MockFastlyClient)(nil).ListResponseObjects), arg0)
}

// ListS3s mocks base method.
func (m *MockFastlyClient) ListS3s(arg0 *fastly.ListS3sInput) ([]*fastly.S3, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListS3s", arg0)
	ret0, _ := ret[0].([]*fastly.S3)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListS3s indicates an expected call of ListS3s.
func (mr *MockFastlyClientMockRecorder) ListS3s(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListS3s", reflect.TypeOf((*MockFastlyClient)(nil).ListS3s), arg0)
}

// ListSFTPs mocks base method.
func (m *MockFastlyClient) ListSFTPs(arg0 *fastly.ListSFTPsInput) ([]*fastly.SFTP, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSFTPs", arg0)
	ret0, _ := ret[0].([]*fastly.SFTP)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSFTPs indicates an expected call of ListSFTPs.
func (mr *MockFastlyClientMockRecorder) ListSFTPs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSFTPs", reflect.TypeOf((*MockFastlyClient)(nil).ListSFTPs), arg0)
}

// ListScalyrs mocks base method.
func (m *MockFastlyClient) ListScalyrs(arg0 *fastly.ListScalyrsInput) ([]*fastly.Scalyr, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListScalyrs", arg0)
	ret0, _ := ret[0].([]*fastly.Scalyr)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListScalyrs indicates an expected call of ListScalyrs.
func (mr *MockFastlyClientMockRecorder) ListScalyrs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListScalyrs", reflect.TypeOf((*MockFastlyClient)(nil).ListScalyrs), arg0)
}

// ListSecretStores mocks base method.
func (m *MockFastlyClient) ListSecretStores(arg0 *fastly.ListSecretStoresInput) (*fastly.SecretStores, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSecretStores", arg0)
	ret0, _ := ret[0].(*fastly.SecretStores)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSecretStores indicates an expected call of ListSecretStores.
func (mr *MockFastlyClientMockRecorder) ListSecretStores(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSecretStores", reflect.TypeOf((*MockFastlyClient)(nil).ListSecretStores), arg0)
}

// ListSecrets mocks base method.
func (m *MockFastlyClient) ListSecrets(arg0 *fastly.ListSecretsInput) (*fastly.Secrets, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSecrets", arg0)
	ret0, _ := ret[0].(*fastly.Secrets)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSecrets indicates an expected call of ListSecrets.
func (mr *MockFastlyClientMockRecorder) ListSecrets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSecrets", reflect.TypeOf((*MockFastlyClient)(nil).ListSecrets), arg0)
}

// ListServers mocks base method.
func (m *MockFastlyClient) ListServers(arg0 *fastly.ListServersInput) ([]*fastly.Server, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServers", arg0)
	ret0, _ := ret[0].([]*fastly.Server)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListServers indicates an expected call of ListServers.
func (mr *MockFastlyClientMockRecorder) ListServers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServers", reflect.TypeOf((*MockFastlyClient)(nil).ListServers), arg0)
}

// ListServiceAuthorizations mocks base method.
func (m *MockFastlyClient) ListServiceAuthorizations(arg0 *fastly.ListServiceAuthorizationsInput) (*fastly.ServiceAuthorizations, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServiceAuthorizations", arg0)
	ret0, _ := ret[0].(*fastly.ServiceAuthorizations)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListServiceAuthorizations indicates an expected call of ListServiceAuthorizations.
func (mr *MockFastlyClientMockRecorder) ListServiceAuthorizations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServiceAuthorizations", reflect.TypeOf((*MockFastlyClient)(nil).ListServiceAuthorizations), arg0)
}

// ListServiceDomains mocks base method.
func (m *MockFastlyClient) ListServiceDomains(arg0 *fastly.ListServiceDomainInput) (fastly.ServiceDomainsList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServiceDomains", arg0)
	ret0, _ := ret[0].(fastly.ServiceDomainsList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListServiceDomains indicates an expected call of ListServiceDomains.
func (mr *MockFastlyClientMockRecorder) ListServiceDomains(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServiceDomains", reflect.TypeOf((*MockFastlyClient)(nil).ListServiceDomains), arg0)
}

// ListServices mocks base method.
func (m *MockFastlyClient) ListServices(arg0 *fastly.ListServicesInput) ([]*fastly.Service, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServices", arg0)
	ret0, _ := ret[0].([]*fastly.Service)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListServices indicates an expected call of ListServices.
func (mr *MockFastlyClientMockRecorder) ListServices(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServices", reflect.TypeOf((*MockFastlyClient)(nil).ListServices), arg0)
}

// ListSnippets mocks base method.
func (m *MockFastlyClient) ListSnippets(arg0 *fastly.ListSnippetsInput) ([]*fastly.Snippet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSnippets", arg0)
	ret0, _ := ret[0].([]*fastly.Snippet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSnippets indicates an expected call of ListSnippets.
func (mr *MockFastlyClientMockRecorder) ListSnippets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSnippets", reflect.TypeOf((*MockFastlyClient)(nil).ListSnippets), arg0)
}

// ListSplunks mocks base method.
func (m *MockFastlyClient) ListSplunks(arg0 *fastly.ListSplunksInput) ([]*fastly.Splunk, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSplunks", arg0)
	ret0, _ := ret[0].([]*fastly.Splunk)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSplunks indicates an expected call of ListSplunks.
func (mr *MockFastlyClientMockRecorder) ListSplunks(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSplunks", reflect.TypeOf((*MockFastlyClient)(nil).ListSplunks), arg0)
}

// ListSumologics mocks base method.
func (m *MockFastlyClient) ListSumologics(arg0 *fastly.ListSumologicsInput) ([]*fastly.Sumologic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSumologics", arg0)
	ret0, _ := ret[0].([]*fastly.Sumologic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSumologics indicates an expected call of ListSumologics.
func (mr *MockFastlyClientMockRecorder) ListSumologics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSumologics", reflect.TypeOf((*MockFastlyClient)(nil).ListSumologics), arg0)
}

// ListSyslogs mocks base method.
func (m *MockFastlyClient) ListSyslogs(arg0 *fastly.ListSyslogsInput) ([]*fastly.Syslog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSyslogs", arg0)
	ret0, _ := ret[0].([]*fastly.Syslog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSyslogs indicates an expected call of ListSyslogs.
func (mr *MockFastlyClientMockRecorder) ListSyslogs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSyslogs", reflect.TypeOf((*MockFastlyClient)(nil).ListSyslogs), arg0)
}

// ListTLSActivations mocks base method.
func (m *MockFastlyClient) ListTLSActivations(arg0 *fastly.ListTLSActivationsInput) ([]*fastly.TLSActivation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTLSActivations", arg0)
	ret0, _ := ret[0].([]*fastly.TLSActivation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTLSActivations indicates an expected call of ListTLSActivations.
func (mr *MockFastlyClientMockRecorder) ListTLSActivations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTLSActivations", reflect.TypeOf((*MockFastlyClient)(nil).ListTLSActivations), arg0)
}

// ListTLSDomains mocks base method.
func (m *MockFastlyClient) ListTLSDomains(arg0 *fastly.ListTLSDomainsInput) ([]*fastly.TLSDomain, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTLSDomains", arg0)
	ret0, _ := ret[0].([]*fastly.TLSDomain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTLSDomains indicates an expected call of ListTLSDomains.
func (mr *MockFastlyClientMockRecorder) ListTLSDomains(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTLSDomains", reflect.TypeOf((*MockFastlyClient)(nil).ListTLSDomains), arg0)
}

// ListTLSSubscriptions mocks base method.
func (m *MockFastlyClient) ListTLSSubscriptions(arg0 *fastly.ListTLSSubscriptionsInput) ([]*fastly.TLSSubscription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTLSSubscriptions", arg0)
	ret0, _ := ret[0].([]*fastly.TLSSubscription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTLSSubscriptions indicates an expected call of ListTLSSubscriptions.
func (mr *MockFastlyClientMockRecorder) ListTLSSubscriptions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTLSSubscriptions", reflect.TypeOf((*MockFastlyClient)(nil).ListTLSSubscriptions), arg0)
}

// ListTokens mocks base method.
func (m *MockFastlyClient) ListTokens() ([]*fastly.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTokens")
	ret0, _ := ret[0].([]*fastly.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTokens indicates an expected call of ListTokens.
func (mr *MockFastlyClientMockRecorder) ListTokens() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTokens", reflect.TypeOf((*MockFastlyClient)(nil).ListTokens))
}

// ListVCLs mocks base method.
func (m *MockFastlyClient) ListVCLs(arg0 *fastly.ListVCLsInput) ([]*fastly.VCL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListVCLs", arg0)
	ret0, _ := ret[0].([]*fastly.VCL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListVCLs indicates an expected call of ListVCLs.
func (mr *MockFastlyClientMockRecorder) ListVCLs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVCLs", reflect.TypeOf((*MockFastlyClient)(nil).ListVCLs), arg0)
}

// ListVersions mocks base method.
func (m *MockFastlyClient) ListVersions(arg0 *fastly.ListVersionsInput) ([]*fastly.Version, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListVersions", arg0)
	ret0, _ := ret[0].([]*fastly.Version)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListVersions indicates an expected call of ListVersions.
func (mr *MockFastlyClientMockRecorder) ListVersions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVersions", reflect.TypeOf((*MockFastlyClient)(nil).ListVersions), arg0)
}

// ListWAFActiveRules mocks base method.
func (m *MockFastlyClient) ListWAFActiveRules(arg0 *fastly.ListWAFActiveRulesInput) (*fastly.WAFActiveRuleResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListWAFActiveRules", arg0)
	ret0, _ := ret[0].(*fastly.WAFActiveRuleResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListWAFActiveRules indicates an expected call of ListWAFActiveRules.
func (mr *MockFastlyClientMockRecorder) ListWAFActiveRules(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListWAFActiveRules", reflect.TypeOf((*MockFastlyClient)(nil).ListWAFActiveRules), arg0)
}

// ListWAFRuleExclusions mocks base method.
func (m *MockFastlyClient) ListWAFRuleExclusions(arg0 *fastly.ListWAFRuleExclusionsInput) (*fastly.WAFRuleExclusionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListWAFRuleExclusions", arg0)
	ret0, _ := ret[0].(*fastly.WAFRuleExclusionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListWAFRuleExclusions indicates an expected call of ListWAFRuleExclusions.
func (mr *MockFastlyClientMockRecorder) ListWAFRuleExclusions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListWAFRuleExclusions", reflect.TypeOf((*MockFastlyClient)(nil).ListWAFRuleExclusions), arg0)
}

// ListWAFRules mocks base method.
func (m *MockFastlyClient) ListWAFRules(arg0 *fastly.ListWAFRulesInput) (*fastly.WAFRuleResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListWAFRules", arg0)
	ret0, _ := ret[0].(*fastly.WAFRuleResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListWAFRules indicates an expected call of ListWAFRules.
func (mr *MockFastlyClientMockRecorder) ListWAFRules(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListWAFRules", reflect.TypeOf((*MockFastlyClient)(nil).ListWAFRules), arg0)
}

// ListWAFVersions mocks base method.
func (m *MockFastlyClient) ListWAFVersions(arg0 *fastly.ListWAFVersionsInput) (*fastly.WAFVersionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListWAFVersions", arg0)
	ret0, _ := ret[0].(*fastly.WAFVersionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListWAFVersions indicates an expected call of ListWAFVersions.
func (mr *MockFastlyClientMockRecorder) ListWAFVersions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListWAFVersions", reflect.TypeOf((*MockFastlyClient)(nil).ListWAFVersions), arg0)
}

// ListWAFs mocks base method.
func (m *MockFastlyClient) ListWAFs(arg0 *fastly.ListWAFsInput) (*fastly.WAFResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListWAFs", arg0)
	ret0, _ := ret[0].(*fastly.WAFResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListWAFs indicates an expected call of ListWAFs.
func (mr *MockFastlyClientMockRecorder) ListWAFs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListWAFs", reflect.TypeOf((*MockFastlyClient)(nil).ListWAFs), arg0)
}

// NewListACLEntriesPaginator mocks base method.
func (m *MockFastlyClient) NewListACLEntriesPaginator(arg0 *fastly.ListACLEntriesInput) fastly.PaginatorACLEntries {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListACLEntriesPaginator", arg0)
	ret0, _ := ret[0].(fastly.PaginatorACLEntries)
	return ret0
}

// NewListACLEntriesPaginator indicates an expected call of NewListACLEntriesPaginator.
func (mr *MockFastlyClientMockRecorder) NewListACLEntriesPaginator(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListACLEntriesPaginator", reflect.TypeOf((*MockFastlyClient)(nil).NewListACLEntriesPaginator), arg0)
}

// NewListDictionaryItemsPaginator mocks base method.
func (m *MockFastlyClient) NewListDictionaryItemsPaginator(arg0 *fastly.ListDictionaryItemsInput) fastly.PaginatorDictionaryItems {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListDictionaryItemsPaginator", arg0)
	ret0, _ := ret[0].(fastly.PaginatorDictionaryItems)
	return ret0
}

// NewListDictionaryItemsPaginator indicates an expected call of NewListDictionaryItemsPaginator.
func (mr *MockFastlyClientMockRecorder) NewListDictionaryItemsPaginator(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListDictionaryItemsPaginator", reflect.TypeOf((*MockFastlyClient)(nil).NewListDictionaryItemsPaginator), arg0)
}

// NewListObjectStoreKeysPaginator mocks base method.
func (m *MockFastlyClient) NewListObjectStoreKeysPaginator(arg0 *fastly.ListObjectStoreKeysInput) *fastly.ListObjectStoreKeysPaginator {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListObjectStoreKeysPaginator", arg0)
	ret0, _ := ret[0].(*fastly.ListObjectStoreKeysPaginator)
	return ret0
}

// NewListObjectStoreKeysPaginator indicates an expected call of NewListObjectStoreKeysPaginator.
func (mr *MockFastlyClientMockRecorder) NewListObjectStoreKeysPaginator(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListObjectStoreKeysPaginator", reflect.TypeOf((*MockFastlyClient)(nil).NewListObjectStoreKeysPaginator), arg0)
}

// NewListObjectStoresPaginator mocks base method.
func (m *MockFastlyClient) NewListObjectStoresPaginator(arg0 *fastly.ListObjectStoresInput) *fastly.ListObjectStoresPaginator {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListObjectStoresPaginator", arg0)
	ret0, _ := ret[0].(*fastly.ListObjectStoresPaginator)
	return ret0
}

// NewListObjectStoresPaginator indicates an expected call of NewListObjectStoresPaginator.
func (mr *MockFastlyClientMockRecorder) NewListObjectStoresPaginator(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListObjectStoresPaginator", reflect.TypeOf((*MockFastlyClient)(nil).NewListObjectStoresPaginator), arg0)
}

// NewListServicesPaginator mocks base method.
func (m *MockFastlyClient) NewListServicesPaginator(arg0 *fastly.ListServicesInput) fastly.PaginatorServices {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListServicesPaginator", arg0)
	ret0, _ := ret[0].(fastly.PaginatorServices)
	return ret0
}

// NewListServicesPaginator indicates an expected call of NewListServicesPaginator.
func (mr *MockFastlyClientMockRecorder) NewListServicesPaginator(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListServicesPaginator", reflect.TypeOf((*MockFastlyClient)(nil).NewListServicesPaginator), arg0)
}
