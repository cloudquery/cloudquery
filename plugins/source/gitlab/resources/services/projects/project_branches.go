// Code generated by codegen; DO NOT EDIT.

package projects

import (
	"github.com/cloudquery/cloudquery/plugins/source/gitlab/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func ProjectBranches() *schema.Table {
	return &schema.Table{
		Name:     "gitlab_project_branches",
		Resolver: fetchProjectBranches,
		Columns: []schema.Column{
			{
				Name:     "base_url",
				Type:     schema.TypeString,
				Resolver: client.ResolveURL,
			},
			{
				Name:     "project_id",
				Type:     schema.TypeInt,
				Resolver: resolveProjectID,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "commit",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Commit"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "protected",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Protected"),
			},
			{
				Name:     "merged",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Merged"),
			},
			{
				Name:     "default",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Default"),
			},
			{
				Name:     "can_push",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("CanPush"),
			},
			{
				Name:     "developers_can_push",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("DevelopersCanPush"),
			},
			{
				Name:     "developers_can_merge",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("DevelopersCanMerge"),
			},
			{
				Name:     "web_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("WebURL"),
			},
		},
	}
}
