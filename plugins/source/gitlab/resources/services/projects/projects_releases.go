// Code generated by codegen; DO NOT EDIT.

package projects

import (
	"github.com/cloudquery/cloudquery/plugins/source/gitlab/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func ProjectsReleases() *schema.Table {
	return &schema.Table{
		Name:     "gitlab_projects_releases",
		Resolver: fetchProjectsReleases,
		Columns: []schema.Column{
			{
				Name:     "base_url",
				Type:     schema.TypeString,
				Resolver: client.ResolveURL,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "project_id",
				Type:     schema.TypeInt,
				Resolver: resolveProjectID,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "tag_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("TagName"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Description"),
			},
			{
				Name:     "description_html",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DescriptionHTML"),
			},
			{
				Name:     "created_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedAt"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "released_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("ReleasedAt"),
			},
			{
				Name:     "author",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Author"),
			},
			{
				Name:     "commit",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Commit"),
			},
			{
				Name:     "upcoming_release",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("UpcomingRelease"),
			},
			{
				Name:     "commit_path",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CommitPath"),
			},
			{
				Name:     "tag_path",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("TagPath"),
			},
			{
				Name:     "assets",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Assets"),
			},
		},
	}
}
