// Code generated by MockGen. DO NOT EDIT.
// Source: babacloudsdkgo_services_ecs.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	ecs "github.com/aliyun/alibaba-cloud-sdk-go/services/ecs"
	gomock "github.com/golang/mock/gomock"
)

// MockEcsClient is a mock of EcsClient interface.
type MockEcsClient struct {
	ctrl     *gomock.Controller
	recorder *MockEcsClientMockRecorder
}

// MockEcsClientMockRecorder is the mock recorder for MockEcsClient.
type MockEcsClientMockRecorder struct {
	mock *MockEcsClient
}

// NewMockEcsClient creates a new mock instance.
func NewMockEcsClient(ctrl *gomock.Controller) *MockEcsClient {
	mock := &MockEcsClient{ctrl: ctrl}
	mock.recorder = &MockEcsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEcsClient) EXPECT() *MockEcsClientMockRecorder {
	return m.recorder
}

// DescribeAccessPoints mocks base method.
func (m *MockEcsClient) DescribeAccessPoints(arg0 *ecs.DescribeAccessPointsRequest) (*ecs.DescribeAccessPointsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAccessPoints", arg0)
	ret0, _ := ret[0].(*ecs.DescribeAccessPointsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAccessPoints indicates an expected call of DescribeAccessPoints.
func (mr *MockEcsClientMockRecorder) DescribeAccessPoints(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAccessPoints", reflect.TypeOf((*MockEcsClient)(nil).DescribeAccessPoints), arg0)
}

// DescribeAccessPointsWithCallback mocks base method.
func (m *MockEcsClient) DescribeAccessPointsWithCallback(arg0 *ecs.DescribeAccessPointsRequest, arg1 func(*ecs.DescribeAccessPointsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAccessPointsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeAccessPointsWithCallback indicates an expected call of DescribeAccessPointsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeAccessPointsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAccessPointsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeAccessPointsWithCallback), arg0, arg1)
}

// DescribeAccessPointsWithChan mocks base method.
func (m *MockEcsClient) DescribeAccessPointsWithChan(arg0 *ecs.DescribeAccessPointsRequest) (<-chan *ecs.DescribeAccessPointsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAccessPointsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeAccessPointsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeAccessPointsWithChan indicates an expected call of DescribeAccessPointsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeAccessPointsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAccessPointsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeAccessPointsWithChan), arg0)
}

// DescribeAccountAttributes mocks base method.
func (m *MockEcsClient) DescribeAccountAttributes(arg0 *ecs.DescribeAccountAttributesRequest) (*ecs.DescribeAccountAttributesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAccountAttributes", arg0)
	ret0, _ := ret[0].(*ecs.DescribeAccountAttributesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAccountAttributes indicates an expected call of DescribeAccountAttributes.
func (mr *MockEcsClientMockRecorder) DescribeAccountAttributes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAccountAttributes", reflect.TypeOf((*MockEcsClient)(nil).DescribeAccountAttributes), arg0)
}

// DescribeAccountAttributesWithCallback mocks base method.
func (m *MockEcsClient) DescribeAccountAttributesWithCallback(arg0 *ecs.DescribeAccountAttributesRequest, arg1 func(*ecs.DescribeAccountAttributesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAccountAttributesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeAccountAttributesWithCallback indicates an expected call of DescribeAccountAttributesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeAccountAttributesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAccountAttributesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeAccountAttributesWithCallback), arg0, arg1)
}

// DescribeAccountAttributesWithChan mocks base method.
func (m *MockEcsClient) DescribeAccountAttributesWithChan(arg0 *ecs.DescribeAccountAttributesRequest) (<-chan *ecs.DescribeAccountAttributesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAccountAttributesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeAccountAttributesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeAccountAttributesWithChan indicates an expected call of DescribeAccountAttributesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeAccountAttributesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAccountAttributesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeAccountAttributesWithChan), arg0)
}

// DescribeActivations mocks base method.
func (m *MockEcsClient) DescribeActivations(arg0 *ecs.DescribeActivationsRequest) (*ecs.DescribeActivationsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeActivations", arg0)
	ret0, _ := ret[0].(*ecs.DescribeActivationsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeActivations indicates an expected call of DescribeActivations.
func (mr *MockEcsClientMockRecorder) DescribeActivations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeActivations", reflect.TypeOf((*MockEcsClient)(nil).DescribeActivations), arg0)
}

// DescribeActivationsWithCallback mocks base method.
func (m *MockEcsClient) DescribeActivationsWithCallback(arg0 *ecs.DescribeActivationsRequest, arg1 func(*ecs.DescribeActivationsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeActivationsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeActivationsWithCallback indicates an expected call of DescribeActivationsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeActivationsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeActivationsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeActivationsWithCallback), arg0, arg1)
}

// DescribeActivationsWithChan mocks base method.
func (m *MockEcsClient) DescribeActivationsWithChan(arg0 *ecs.DescribeActivationsRequest) (<-chan *ecs.DescribeActivationsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeActivationsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeActivationsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeActivationsWithChan indicates an expected call of DescribeActivationsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeActivationsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeActivationsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeActivationsWithChan), arg0)
}

// DescribeAutoProvisioningGroupHistory mocks base method.
func (m *MockEcsClient) DescribeAutoProvisioningGroupHistory(arg0 *ecs.DescribeAutoProvisioningGroupHistoryRequest) (*ecs.DescribeAutoProvisioningGroupHistoryResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAutoProvisioningGroupHistory", arg0)
	ret0, _ := ret[0].(*ecs.DescribeAutoProvisioningGroupHistoryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAutoProvisioningGroupHistory indicates an expected call of DescribeAutoProvisioningGroupHistory.
func (mr *MockEcsClientMockRecorder) DescribeAutoProvisioningGroupHistory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAutoProvisioningGroupHistory", reflect.TypeOf((*MockEcsClient)(nil).DescribeAutoProvisioningGroupHistory), arg0)
}

// DescribeAutoProvisioningGroupHistoryWithCallback mocks base method.
func (m *MockEcsClient) DescribeAutoProvisioningGroupHistoryWithCallback(arg0 *ecs.DescribeAutoProvisioningGroupHistoryRequest, arg1 func(*ecs.DescribeAutoProvisioningGroupHistoryResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAutoProvisioningGroupHistoryWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeAutoProvisioningGroupHistoryWithCallback indicates an expected call of DescribeAutoProvisioningGroupHistoryWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeAutoProvisioningGroupHistoryWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAutoProvisioningGroupHistoryWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeAutoProvisioningGroupHistoryWithCallback), arg0, arg1)
}

// DescribeAutoProvisioningGroupHistoryWithChan mocks base method.
func (m *MockEcsClient) DescribeAutoProvisioningGroupHistoryWithChan(arg0 *ecs.DescribeAutoProvisioningGroupHistoryRequest) (<-chan *ecs.DescribeAutoProvisioningGroupHistoryResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAutoProvisioningGroupHistoryWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeAutoProvisioningGroupHistoryResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeAutoProvisioningGroupHistoryWithChan indicates an expected call of DescribeAutoProvisioningGroupHistoryWithChan.
func (mr *MockEcsClientMockRecorder) DescribeAutoProvisioningGroupHistoryWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAutoProvisioningGroupHistoryWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeAutoProvisioningGroupHistoryWithChan), arg0)
}

// DescribeAutoProvisioningGroupInstances mocks base method.
func (m *MockEcsClient) DescribeAutoProvisioningGroupInstances(arg0 *ecs.DescribeAutoProvisioningGroupInstancesRequest) (*ecs.DescribeAutoProvisioningGroupInstancesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAutoProvisioningGroupInstances", arg0)
	ret0, _ := ret[0].(*ecs.DescribeAutoProvisioningGroupInstancesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAutoProvisioningGroupInstances indicates an expected call of DescribeAutoProvisioningGroupInstances.
func (mr *MockEcsClientMockRecorder) DescribeAutoProvisioningGroupInstances(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAutoProvisioningGroupInstances", reflect.TypeOf((*MockEcsClient)(nil).DescribeAutoProvisioningGroupInstances), arg0)
}

// DescribeAutoProvisioningGroupInstancesWithCallback mocks base method.
func (m *MockEcsClient) DescribeAutoProvisioningGroupInstancesWithCallback(arg0 *ecs.DescribeAutoProvisioningGroupInstancesRequest, arg1 func(*ecs.DescribeAutoProvisioningGroupInstancesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAutoProvisioningGroupInstancesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeAutoProvisioningGroupInstancesWithCallback indicates an expected call of DescribeAutoProvisioningGroupInstancesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeAutoProvisioningGroupInstancesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAutoProvisioningGroupInstancesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeAutoProvisioningGroupInstancesWithCallback), arg0, arg1)
}

// DescribeAutoProvisioningGroupInstancesWithChan mocks base method.
func (m *MockEcsClient) DescribeAutoProvisioningGroupInstancesWithChan(arg0 *ecs.DescribeAutoProvisioningGroupInstancesRequest) (<-chan *ecs.DescribeAutoProvisioningGroupInstancesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAutoProvisioningGroupInstancesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeAutoProvisioningGroupInstancesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeAutoProvisioningGroupInstancesWithChan indicates an expected call of DescribeAutoProvisioningGroupInstancesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeAutoProvisioningGroupInstancesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAutoProvisioningGroupInstancesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeAutoProvisioningGroupInstancesWithChan), arg0)
}

// DescribeAutoProvisioningGroups mocks base method.
func (m *MockEcsClient) DescribeAutoProvisioningGroups(arg0 *ecs.DescribeAutoProvisioningGroupsRequest) (*ecs.DescribeAutoProvisioningGroupsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAutoProvisioningGroups", arg0)
	ret0, _ := ret[0].(*ecs.DescribeAutoProvisioningGroupsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAutoProvisioningGroups indicates an expected call of DescribeAutoProvisioningGroups.
func (mr *MockEcsClientMockRecorder) DescribeAutoProvisioningGroups(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAutoProvisioningGroups", reflect.TypeOf((*MockEcsClient)(nil).DescribeAutoProvisioningGroups), arg0)
}

// DescribeAutoProvisioningGroupsWithCallback mocks base method.
func (m *MockEcsClient) DescribeAutoProvisioningGroupsWithCallback(arg0 *ecs.DescribeAutoProvisioningGroupsRequest, arg1 func(*ecs.DescribeAutoProvisioningGroupsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAutoProvisioningGroupsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeAutoProvisioningGroupsWithCallback indicates an expected call of DescribeAutoProvisioningGroupsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeAutoProvisioningGroupsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAutoProvisioningGroupsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeAutoProvisioningGroupsWithCallback), arg0, arg1)
}

// DescribeAutoProvisioningGroupsWithChan mocks base method.
func (m *MockEcsClient) DescribeAutoProvisioningGroupsWithChan(arg0 *ecs.DescribeAutoProvisioningGroupsRequest) (<-chan *ecs.DescribeAutoProvisioningGroupsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAutoProvisioningGroupsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeAutoProvisioningGroupsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeAutoProvisioningGroupsWithChan indicates an expected call of DescribeAutoProvisioningGroupsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeAutoProvisioningGroupsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAutoProvisioningGroupsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeAutoProvisioningGroupsWithChan), arg0)
}

// DescribeAutoSnapshotPolicyEx mocks base method.
func (m *MockEcsClient) DescribeAutoSnapshotPolicyEx(arg0 *ecs.DescribeAutoSnapshotPolicyExRequest) (*ecs.DescribeAutoSnapshotPolicyExResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAutoSnapshotPolicyEx", arg0)
	ret0, _ := ret[0].(*ecs.DescribeAutoSnapshotPolicyExResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAutoSnapshotPolicyEx indicates an expected call of DescribeAutoSnapshotPolicyEx.
func (mr *MockEcsClientMockRecorder) DescribeAutoSnapshotPolicyEx(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAutoSnapshotPolicyEx", reflect.TypeOf((*MockEcsClient)(nil).DescribeAutoSnapshotPolicyEx), arg0)
}

// DescribeAutoSnapshotPolicyExWithCallback mocks base method.
func (m *MockEcsClient) DescribeAutoSnapshotPolicyExWithCallback(arg0 *ecs.DescribeAutoSnapshotPolicyExRequest, arg1 func(*ecs.DescribeAutoSnapshotPolicyExResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAutoSnapshotPolicyExWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeAutoSnapshotPolicyExWithCallback indicates an expected call of DescribeAutoSnapshotPolicyExWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeAutoSnapshotPolicyExWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAutoSnapshotPolicyExWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeAutoSnapshotPolicyExWithCallback), arg0, arg1)
}

// DescribeAutoSnapshotPolicyExWithChan mocks base method.
func (m *MockEcsClient) DescribeAutoSnapshotPolicyExWithChan(arg0 *ecs.DescribeAutoSnapshotPolicyExRequest) (<-chan *ecs.DescribeAutoSnapshotPolicyExResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAutoSnapshotPolicyExWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeAutoSnapshotPolicyExResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeAutoSnapshotPolicyExWithChan indicates an expected call of DescribeAutoSnapshotPolicyExWithChan.
func (mr *MockEcsClientMockRecorder) DescribeAutoSnapshotPolicyExWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAutoSnapshotPolicyExWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeAutoSnapshotPolicyExWithChan), arg0)
}

// DescribeAvailableResource mocks base method.
func (m *MockEcsClient) DescribeAvailableResource(arg0 *ecs.DescribeAvailableResourceRequest) (*ecs.DescribeAvailableResourceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAvailableResource", arg0)
	ret0, _ := ret[0].(*ecs.DescribeAvailableResourceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAvailableResource indicates an expected call of DescribeAvailableResource.
func (mr *MockEcsClientMockRecorder) DescribeAvailableResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAvailableResource", reflect.TypeOf((*MockEcsClient)(nil).DescribeAvailableResource), arg0)
}

// DescribeAvailableResourceWithCallback mocks base method.
func (m *MockEcsClient) DescribeAvailableResourceWithCallback(arg0 *ecs.DescribeAvailableResourceRequest, arg1 func(*ecs.DescribeAvailableResourceResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAvailableResourceWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeAvailableResourceWithCallback indicates an expected call of DescribeAvailableResourceWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeAvailableResourceWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAvailableResourceWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeAvailableResourceWithCallback), arg0, arg1)
}

// DescribeAvailableResourceWithChan mocks base method.
func (m *MockEcsClient) DescribeAvailableResourceWithChan(arg0 *ecs.DescribeAvailableResourceRequest) (<-chan *ecs.DescribeAvailableResourceResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeAvailableResourceWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeAvailableResourceResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeAvailableResourceWithChan indicates an expected call of DescribeAvailableResourceWithChan.
func (mr *MockEcsClientMockRecorder) DescribeAvailableResourceWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAvailableResourceWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeAvailableResourceWithChan), arg0)
}

// DescribeBandwidthLimitation mocks base method.
func (m *MockEcsClient) DescribeBandwidthLimitation(arg0 *ecs.DescribeBandwidthLimitationRequest) (*ecs.DescribeBandwidthLimitationResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeBandwidthLimitation", arg0)
	ret0, _ := ret[0].(*ecs.DescribeBandwidthLimitationResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeBandwidthLimitation indicates an expected call of DescribeBandwidthLimitation.
func (mr *MockEcsClientMockRecorder) DescribeBandwidthLimitation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeBandwidthLimitation", reflect.TypeOf((*MockEcsClient)(nil).DescribeBandwidthLimitation), arg0)
}

// DescribeBandwidthLimitationWithCallback mocks base method.
func (m *MockEcsClient) DescribeBandwidthLimitationWithCallback(arg0 *ecs.DescribeBandwidthLimitationRequest, arg1 func(*ecs.DescribeBandwidthLimitationResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeBandwidthLimitationWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeBandwidthLimitationWithCallback indicates an expected call of DescribeBandwidthLimitationWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeBandwidthLimitationWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeBandwidthLimitationWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeBandwidthLimitationWithCallback), arg0, arg1)
}

// DescribeBandwidthLimitationWithChan mocks base method.
func (m *MockEcsClient) DescribeBandwidthLimitationWithChan(arg0 *ecs.DescribeBandwidthLimitationRequest) (<-chan *ecs.DescribeBandwidthLimitationResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeBandwidthLimitationWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeBandwidthLimitationResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeBandwidthLimitationWithChan indicates an expected call of DescribeBandwidthLimitationWithChan.
func (mr *MockEcsClientMockRecorder) DescribeBandwidthLimitationWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeBandwidthLimitationWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeBandwidthLimitationWithChan), arg0)
}

// DescribeBandwidthPackages mocks base method.
func (m *MockEcsClient) DescribeBandwidthPackages(arg0 *ecs.DescribeBandwidthPackagesRequest) (*ecs.DescribeBandwidthPackagesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeBandwidthPackages", arg0)
	ret0, _ := ret[0].(*ecs.DescribeBandwidthPackagesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeBandwidthPackages indicates an expected call of DescribeBandwidthPackages.
func (mr *MockEcsClientMockRecorder) DescribeBandwidthPackages(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeBandwidthPackages", reflect.TypeOf((*MockEcsClient)(nil).DescribeBandwidthPackages), arg0)
}

// DescribeBandwidthPackagesWithCallback mocks base method.
func (m *MockEcsClient) DescribeBandwidthPackagesWithCallback(arg0 *ecs.DescribeBandwidthPackagesRequest, arg1 func(*ecs.DescribeBandwidthPackagesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeBandwidthPackagesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeBandwidthPackagesWithCallback indicates an expected call of DescribeBandwidthPackagesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeBandwidthPackagesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeBandwidthPackagesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeBandwidthPackagesWithCallback), arg0, arg1)
}

// DescribeBandwidthPackagesWithChan mocks base method.
func (m *MockEcsClient) DescribeBandwidthPackagesWithChan(arg0 *ecs.DescribeBandwidthPackagesRequest) (<-chan *ecs.DescribeBandwidthPackagesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeBandwidthPackagesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeBandwidthPackagesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeBandwidthPackagesWithChan indicates an expected call of DescribeBandwidthPackagesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeBandwidthPackagesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeBandwidthPackagesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeBandwidthPackagesWithChan), arg0)
}

// DescribeCapacityReservationInstances mocks base method.
func (m *MockEcsClient) DescribeCapacityReservationInstances(arg0 *ecs.DescribeCapacityReservationInstancesRequest) (*ecs.DescribeCapacityReservationInstancesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCapacityReservationInstances", arg0)
	ret0, _ := ret[0].(*ecs.DescribeCapacityReservationInstancesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeCapacityReservationInstances indicates an expected call of DescribeCapacityReservationInstances.
func (mr *MockEcsClientMockRecorder) DescribeCapacityReservationInstances(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCapacityReservationInstances", reflect.TypeOf((*MockEcsClient)(nil).DescribeCapacityReservationInstances), arg0)
}

// DescribeCapacityReservationInstancesWithCallback mocks base method.
func (m *MockEcsClient) DescribeCapacityReservationInstancesWithCallback(arg0 *ecs.DescribeCapacityReservationInstancesRequest, arg1 func(*ecs.DescribeCapacityReservationInstancesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCapacityReservationInstancesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeCapacityReservationInstancesWithCallback indicates an expected call of DescribeCapacityReservationInstancesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeCapacityReservationInstancesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCapacityReservationInstancesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeCapacityReservationInstancesWithCallback), arg0, arg1)
}

// DescribeCapacityReservationInstancesWithChan mocks base method.
func (m *MockEcsClient) DescribeCapacityReservationInstancesWithChan(arg0 *ecs.DescribeCapacityReservationInstancesRequest) (<-chan *ecs.DescribeCapacityReservationInstancesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCapacityReservationInstancesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeCapacityReservationInstancesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeCapacityReservationInstancesWithChan indicates an expected call of DescribeCapacityReservationInstancesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeCapacityReservationInstancesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCapacityReservationInstancesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeCapacityReservationInstancesWithChan), arg0)
}

// DescribeCapacityReservations mocks base method.
func (m *MockEcsClient) DescribeCapacityReservations(arg0 *ecs.DescribeCapacityReservationsRequest) (*ecs.DescribeCapacityReservationsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCapacityReservations", arg0)
	ret0, _ := ret[0].(*ecs.DescribeCapacityReservationsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeCapacityReservations indicates an expected call of DescribeCapacityReservations.
func (mr *MockEcsClientMockRecorder) DescribeCapacityReservations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCapacityReservations", reflect.TypeOf((*MockEcsClient)(nil).DescribeCapacityReservations), arg0)
}

// DescribeCapacityReservationsWithCallback mocks base method.
func (m *MockEcsClient) DescribeCapacityReservationsWithCallback(arg0 *ecs.DescribeCapacityReservationsRequest, arg1 func(*ecs.DescribeCapacityReservationsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCapacityReservationsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeCapacityReservationsWithCallback indicates an expected call of DescribeCapacityReservationsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeCapacityReservationsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCapacityReservationsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeCapacityReservationsWithCallback), arg0, arg1)
}

// DescribeCapacityReservationsWithChan mocks base method.
func (m *MockEcsClient) DescribeCapacityReservationsWithChan(arg0 *ecs.DescribeCapacityReservationsRequest) (<-chan *ecs.DescribeCapacityReservationsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCapacityReservationsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeCapacityReservationsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeCapacityReservationsWithChan indicates an expected call of DescribeCapacityReservationsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeCapacityReservationsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCapacityReservationsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeCapacityReservationsWithChan), arg0)
}

// DescribeClassicLinkInstances mocks base method.
func (m *MockEcsClient) DescribeClassicLinkInstances(arg0 *ecs.DescribeClassicLinkInstancesRequest) (*ecs.DescribeClassicLinkInstancesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeClassicLinkInstances", arg0)
	ret0, _ := ret[0].(*ecs.DescribeClassicLinkInstancesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeClassicLinkInstances indicates an expected call of DescribeClassicLinkInstances.
func (mr *MockEcsClientMockRecorder) DescribeClassicLinkInstances(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeClassicLinkInstances", reflect.TypeOf((*MockEcsClient)(nil).DescribeClassicLinkInstances), arg0)
}

// DescribeClassicLinkInstancesWithCallback mocks base method.
func (m *MockEcsClient) DescribeClassicLinkInstancesWithCallback(arg0 *ecs.DescribeClassicLinkInstancesRequest, arg1 func(*ecs.DescribeClassicLinkInstancesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeClassicLinkInstancesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeClassicLinkInstancesWithCallback indicates an expected call of DescribeClassicLinkInstancesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeClassicLinkInstancesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeClassicLinkInstancesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeClassicLinkInstancesWithCallback), arg0, arg1)
}

// DescribeClassicLinkInstancesWithChan mocks base method.
func (m *MockEcsClient) DescribeClassicLinkInstancesWithChan(arg0 *ecs.DescribeClassicLinkInstancesRequest) (<-chan *ecs.DescribeClassicLinkInstancesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeClassicLinkInstancesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeClassicLinkInstancesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeClassicLinkInstancesWithChan indicates an expected call of DescribeClassicLinkInstancesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeClassicLinkInstancesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeClassicLinkInstancesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeClassicLinkInstancesWithChan), arg0)
}

// DescribeCloudAssistantStatus mocks base method.
func (m *MockEcsClient) DescribeCloudAssistantStatus(arg0 *ecs.DescribeCloudAssistantStatusRequest) (*ecs.DescribeCloudAssistantStatusResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCloudAssistantStatus", arg0)
	ret0, _ := ret[0].(*ecs.DescribeCloudAssistantStatusResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeCloudAssistantStatus indicates an expected call of DescribeCloudAssistantStatus.
func (mr *MockEcsClientMockRecorder) DescribeCloudAssistantStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCloudAssistantStatus", reflect.TypeOf((*MockEcsClient)(nil).DescribeCloudAssistantStatus), arg0)
}

// DescribeCloudAssistantStatusWithCallback mocks base method.
func (m *MockEcsClient) DescribeCloudAssistantStatusWithCallback(arg0 *ecs.DescribeCloudAssistantStatusRequest, arg1 func(*ecs.DescribeCloudAssistantStatusResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCloudAssistantStatusWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeCloudAssistantStatusWithCallback indicates an expected call of DescribeCloudAssistantStatusWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeCloudAssistantStatusWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCloudAssistantStatusWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeCloudAssistantStatusWithCallback), arg0, arg1)
}

// DescribeCloudAssistantStatusWithChan mocks base method.
func (m *MockEcsClient) DescribeCloudAssistantStatusWithChan(arg0 *ecs.DescribeCloudAssistantStatusRequest) (<-chan *ecs.DescribeCloudAssistantStatusResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCloudAssistantStatusWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeCloudAssistantStatusResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeCloudAssistantStatusWithChan indicates an expected call of DescribeCloudAssistantStatusWithChan.
func (mr *MockEcsClientMockRecorder) DescribeCloudAssistantStatusWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCloudAssistantStatusWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeCloudAssistantStatusWithChan), arg0)
}

// DescribeClusters mocks base method.
func (m *MockEcsClient) DescribeClusters(arg0 *ecs.DescribeClustersRequest) (*ecs.DescribeClustersResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeClusters", arg0)
	ret0, _ := ret[0].(*ecs.DescribeClustersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeClusters indicates an expected call of DescribeClusters.
func (mr *MockEcsClientMockRecorder) DescribeClusters(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeClusters", reflect.TypeOf((*MockEcsClient)(nil).DescribeClusters), arg0)
}

// DescribeClustersWithCallback mocks base method.
func (m *MockEcsClient) DescribeClustersWithCallback(arg0 *ecs.DescribeClustersRequest, arg1 func(*ecs.DescribeClustersResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeClustersWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeClustersWithCallback indicates an expected call of DescribeClustersWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeClustersWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeClustersWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeClustersWithCallback), arg0, arg1)
}

// DescribeClustersWithChan mocks base method.
func (m *MockEcsClient) DescribeClustersWithChan(arg0 *ecs.DescribeClustersRequest) (<-chan *ecs.DescribeClustersResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeClustersWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeClustersResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeClustersWithChan indicates an expected call of DescribeClustersWithChan.
func (mr *MockEcsClientMockRecorder) DescribeClustersWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeClustersWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeClustersWithChan), arg0)
}

// DescribeCommands mocks base method.
func (m *MockEcsClient) DescribeCommands(arg0 *ecs.DescribeCommandsRequest) (*ecs.DescribeCommandsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCommands", arg0)
	ret0, _ := ret[0].(*ecs.DescribeCommandsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeCommands indicates an expected call of DescribeCommands.
func (mr *MockEcsClientMockRecorder) DescribeCommands(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCommands", reflect.TypeOf((*MockEcsClient)(nil).DescribeCommands), arg0)
}

// DescribeCommandsWithCallback mocks base method.
func (m *MockEcsClient) DescribeCommandsWithCallback(arg0 *ecs.DescribeCommandsRequest, arg1 func(*ecs.DescribeCommandsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCommandsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeCommandsWithCallback indicates an expected call of DescribeCommandsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeCommandsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCommandsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeCommandsWithCallback), arg0, arg1)
}

// DescribeCommandsWithChan mocks base method.
func (m *MockEcsClient) DescribeCommandsWithChan(arg0 *ecs.DescribeCommandsRequest) (<-chan *ecs.DescribeCommandsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCommandsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeCommandsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeCommandsWithChan indicates an expected call of DescribeCommandsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeCommandsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCommandsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeCommandsWithChan), arg0)
}

// DescribeDedicatedHostAutoRenew mocks base method.
func (m *MockEcsClient) DescribeDedicatedHostAutoRenew(arg0 *ecs.DescribeDedicatedHostAutoRenewRequest) (*ecs.DescribeDedicatedHostAutoRenewResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDedicatedHostAutoRenew", arg0)
	ret0, _ := ret[0].(*ecs.DescribeDedicatedHostAutoRenewResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDedicatedHostAutoRenew indicates an expected call of DescribeDedicatedHostAutoRenew.
func (mr *MockEcsClientMockRecorder) DescribeDedicatedHostAutoRenew(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDedicatedHostAutoRenew", reflect.TypeOf((*MockEcsClient)(nil).DescribeDedicatedHostAutoRenew), arg0)
}

// DescribeDedicatedHostAutoRenewWithCallback mocks base method.
func (m *MockEcsClient) DescribeDedicatedHostAutoRenewWithCallback(arg0 *ecs.DescribeDedicatedHostAutoRenewRequest, arg1 func(*ecs.DescribeDedicatedHostAutoRenewResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDedicatedHostAutoRenewWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeDedicatedHostAutoRenewWithCallback indicates an expected call of DescribeDedicatedHostAutoRenewWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeDedicatedHostAutoRenewWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDedicatedHostAutoRenewWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeDedicatedHostAutoRenewWithCallback), arg0, arg1)
}

// DescribeDedicatedHostAutoRenewWithChan mocks base method.
func (m *MockEcsClient) DescribeDedicatedHostAutoRenewWithChan(arg0 *ecs.DescribeDedicatedHostAutoRenewRequest) (<-chan *ecs.DescribeDedicatedHostAutoRenewResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDedicatedHostAutoRenewWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeDedicatedHostAutoRenewResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeDedicatedHostAutoRenewWithChan indicates an expected call of DescribeDedicatedHostAutoRenewWithChan.
func (mr *MockEcsClientMockRecorder) DescribeDedicatedHostAutoRenewWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDedicatedHostAutoRenewWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeDedicatedHostAutoRenewWithChan), arg0)
}

// DescribeDedicatedHostClusters mocks base method.
func (m *MockEcsClient) DescribeDedicatedHostClusters(arg0 *ecs.DescribeDedicatedHostClustersRequest) (*ecs.DescribeDedicatedHostClustersResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDedicatedHostClusters", arg0)
	ret0, _ := ret[0].(*ecs.DescribeDedicatedHostClustersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDedicatedHostClusters indicates an expected call of DescribeDedicatedHostClusters.
func (mr *MockEcsClientMockRecorder) DescribeDedicatedHostClusters(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDedicatedHostClusters", reflect.TypeOf((*MockEcsClient)(nil).DescribeDedicatedHostClusters), arg0)
}

// DescribeDedicatedHostClustersWithCallback mocks base method.
func (m *MockEcsClient) DescribeDedicatedHostClustersWithCallback(arg0 *ecs.DescribeDedicatedHostClustersRequest, arg1 func(*ecs.DescribeDedicatedHostClustersResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDedicatedHostClustersWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeDedicatedHostClustersWithCallback indicates an expected call of DescribeDedicatedHostClustersWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeDedicatedHostClustersWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDedicatedHostClustersWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeDedicatedHostClustersWithCallback), arg0, arg1)
}

// DescribeDedicatedHostClustersWithChan mocks base method.
func (m *MockEcsClient) DescribeDedicatedHostClustersWithChan(arg0 *ecs.DescribeDedicatedHostClustersRequest) (<-chan *ecs.DescribeDedicatedHostClustersResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDedicatedHostClustersWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeDedicatedHostClustersResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeDedicatedHostClustersWithChan indicates an expected call of DescribeDedicatedHostClustersWithChan.
func (mr *MockEcsClientMockRecorder) DescribeDedicatedHostClustersWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDedicatedHostClustersWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeDedicatedHostClustersWithChan), arg0)
}

// DescribeDedicatedHostTypes mocks base method.
func (m *MockEcsClient) DescribeDedicatedHostTypes(arg0 *ecs.DescribeDedicatedHostTypesRequest) (*ecs.DescribeDedicatedHostTypesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDedicatedHostTypes", arg0)
	ret0, _ := ret[0].(*ecs.DescribeDedicatedHostTypesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDedicatedHostTypes indicates an expected call of DescribeDedicatedHostTypes.
func (mr *MockEcsClientMockRecorder) DescribeDedicatedHostTypes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDedicatedHostTypes", reflect.TypeOf((*MockEcsClient)(nil).DescribeDedicatedHostTypes), arg0)
}

// DescribeDedicatedHostTypesWithCallback mocks base method.
func (m *MockEcsClient) DescribeDedicatedHostTypesWithCallback(arg0 *ecs.DescribeDedicatedHostTypesRequest, arg1 func(*ecs.DescribeDedicatedHostTypesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDedicatedHostTypesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeDedicatedHostTypesWithCallback indicates an expected call of DescribeDedicatedHostTypesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeDedicatedHostTypesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDedicatedHostTypesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeDedicatedHostTypesWithCallback), arg0, arg1)
}

// DescribeDedicatedHostTypesWithChan mocks base method.
func (m *MockEcsClient) DescribeDedicatedHostTypesWithChan(arg0 *ecs.DescribeDedicatedHostTypesRequest) (<-chan *ecs.DescribeDedicatedHostTypesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDedicatedHostTypesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeDedicatedHostTypesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeDedicatedHostTypesWithChan indicates an expected call of DescribeDedicatedHostTypesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeDedicatedHostTypesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDedicatedHostTypesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeDedicatedHostTypesWithChan), arg0)
}

// DescribeDedicatedHosts mocks base method.
func (m *MockEcsClient) DescribeDedicatedHosts(arg0 *ecs.DescribeDedicatedHostsRequest) (*ecs.DescribeDedicatedHostsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDedicatedHosts", arg0)
	ret0, _ := ret[0].(*ecs.DescribeDedicatedHostsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDedicatedHosts indicates an expected call of DescribeDedicatedHosts.
func (mr *MockEcsClientMockRecorder) DescribeDedicatedHosts(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDedicatedHosts", reflect.TypeOf((*MockEcsClient)(nil).DescribeDedicatedHosts), arg0)
}

// DescribeDedicatedHostsWithCallback mocks base method.
func (m *MockEcsClient) DescribeDedicatedHostsWithCallback(arg0 *ecs.DescribeDedicatedHostsRequest, arg1 func(*ecs.DescribeDedicatedHostsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDedicatedHostsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeDedicatedHostsWithCallback indicates an expected call of DescribeDedicatedHostsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeDedicatedHostsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDedicatedHostsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeDedicatedHostsWithCallback), arg0, arg1)
}

// DescribeDedicatedHostsWithChan mocks base method.
func (m *MockEcsClient) DescribeDedicatedHostsWithChan(arg0 *ecs.DescribeDedicatedHostsRequest) (<-chan *ecs.DescribeDedicatedHostsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDedicatedHostsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeDedicatedHostsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeDedicatedHostsWithChan indicates an expected call of DescribeDedicatedHostsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeDedicatedHostsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDedicatedHostsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeDedicatedHostsWithChan), arg0)
}

// DescribeDemands mocks base method.
func (m *MockEcsClient) DescribeDemands(arg0 *ecs.DescribeDemandsRequest) (*ecs.DescribeDemandsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDemands", arg0)
	ret0, _ := ret[0].(*ecs.DescribeDemandsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDemands indicates an expected call of DescribeDemands.
func (mr *MockEcsClientMockRecorder) DescribeDemands(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDemands", reflect.TypeOf((*MockEcsClient)(nil).DescribeDemands), arg0)
}

// DescribeDemandsWithCallback mocks base method.
func (m *MockEcsClient) DescribeDemandsWithCallback(arg0 *ecs.DescribeDemandsRequest, arg1 func(*ecs.DescribeDemandsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDemandsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeDemandsWithCallback indicates an expected call of DescribeDemandsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeDemandsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDemandsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeDemandsWithCallback), arg0, arg1)
}

// DescribeDemandsWithChan mocks base method.
func (m *MockEcsClient) DescribeDemandsWithChan(arg0 *ecs.DescribeDemandsRequest) (<-chan *ecs.DescribeDemandsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDemandsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeDemandsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeDemandsWithChan indicates an expected call of DescribeDemandsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeDemandsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDemandsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeDemandsWithChan), arg0)
}

// DescribeDeploymentSetSupportedInstanceTypeFamily mocks base method.
func (m *MockEcsClient) DescribeDeploymentSetSupportedInstanceTypeFamily(arg0 *ecs.DescribeDeploymentSetSupportedInstanceTypeFamilyRequest) (*ecs.DescribeDeploymentSetSupportedInstanceTypeFamilyResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDeploymentSetSupportedInstanceTypeFamily", arg0)
	ret0, _ := ret[0].(*ecs.DescribeDeploymentSetSupportedInstanceTypeFamilyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDeploymentSetSupportedInstanceTypeFamily indicates an expected call of DescribeDeploymentSetSupportedInstanceTypeFamily.
func (mr *MockEcsClientMockRecorder) DescribeDeploymentSetSupportedInstanceTypeFamily(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDeploymentSetSupportedInstanceTypeFamily", reflect.TypeOf((*MockEcsClient)(nil).DescribeDeploymentSetSupportedInstanceTypeFamily), arg0)
}

// DescribeDeploymentSetSupportedInstanceTypeFamilyWithCallback mocks base method.
func (m *MockEcsClient) DescribeDeploymentSetSupportedInstanceTypeFamilyWithCallback(arg0 *ecs.DescribeDeploymentSetSupportedInstanceTypeFamilyRequest, arg1 func(*ecs.DescribeDeploymentSetSupportedInstanceTypeFamilyResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDeploymentSetSupportedInstanceTypeFamilyWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeDeploymentSetSupportedInstanceTypeFamilyWithCallback indicates an expected call of DescribeDeploymentSetSupportedInstanceTypeFamilyWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeDeploymentSetSupportedInstanceTypeFamilyWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDeploymentSetSupportedInstanceTypeFamilyWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeDeploymentSetSupportedInstanceTypeFamilyWithCallback), arg0, arg1)
}

// DescribeDeploymentSetSupportedInstanceTypeFamilyWithChan mocks base method.
func (m *MockEcsClient) DescribeDeploymentSetSupportedInstanceTypeFamilyWithChan(arg0 *ecs.DescribeDeploymentSetSupportedInstanceTypeFamilyRequest) (<-chan *ecs.DescribeDeploymentSetSupportedInstanceTypeFamilyResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDeploymentSetSupportedInstanceTypeFamilyWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeDeploymentSetSupportedInstanceTypeFamilyResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeDeploymentSetSupportedInstanceTypeFamilyWithChan indicates an expected call of DescribeDeploymentSetSupportedInstanceTypeFamilyWithChan.
func (mr *MockEcsClientMockRecorder) DescribeDeploymentSetSupportedInstanceTypeFamilyWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDeploymentSetSupportedInstanceTypeFamilyWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeDeploymentSetSupportedInstanceTypeFamilyWithChan), arg0)
}

// DescribeDeploymentSets mocks base method.
func (m *MockEcsClient) DescribeDeploymentSets(arg0 *ecs.DescribeDeploymentSetsRequest) (*ecs.DescribeDeploymentSetsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDeploymentSets", arg0)
	ret0, _ := ret[0].(*ecs.DescribeDeploymentSetsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDeploymentSets indicates an expected call of DescribeDeploymentSets.
func (mr *MockEcsClientMockRecorder) DescribeDeploymentSets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDeploymentSets", reflect.TypeOf((*MockEcsClient)(nil).DescribeDeploymentSets), arg0)
}

// DescribeDeploymentSetsWithCallback mocks base method.
func (m *MockEcsClient) DescribeDeploymentSetsWithCallback(arg0 *ecs.DescribeDeploymentSetsRequest, arg1 func(*ecs.DescribeDeploymentSetsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDeploymentSetsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeDeploymentSetsWithCallback indicates an expected call of DescribeDeploymentSetsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeDeploymentSetsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDeploymentSetsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeDeploymentSetsWithCallback), arg0, arg1)
}

// DescribeDeploymentSetsWithChan mocks base method.
func (m *MockEcsClient) DescribeDeploymentSetsWithChan(arg0 *ecs.DescribeDeploymentSetsRequest) (<-chan *ecs.DescribeDeploymentSetsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDeploymentSetsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeDeploymentSetsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeDeploymentSetsWithChan indicates an expected call of DescribeDeploymentSetsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeDeploymentSetsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDeploymentSetsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeDeploymentSetsWithChan), arg0)
}

// DescribeDiagnosticMetricSets mocks base method.
func (m *MockEcsClient) DescribeDiagnosticMetricSets(arg0 *ecs.DescribeDiagnosticMetricSetsRequest) (*ecs.DescribeDiagnosticMetricSetsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiagnosticMetricSets", arg0)
	ret0, _ := ret[0].(*ecs.DescribeDiagnosticMetricSetsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDiagnosticMetricSets indicates an expected call of DescribeDiagnosticMetricSets.
func (mr *MockEcsClientMockRecorder) DescribeDiagnosticMetricSets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiagnosticMetricSets", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiagnosticMetricSets), arg0)
}

// DescribeDiagnosticMetricSetsWithCallback mocks base method.
func (m *MockEcsClient) DescribeDiagnosticMetricSetsWithCallback(arg0 *ecs.DescribeDiagnosticMetricSetsRequest, arg1 func(*ecs.DescribeDiagnosticMetricSetsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiagnosticMetricSetsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeDiagnosticMetricSetsWithCallback indicates an expected call of DescribeDiagnosticMetricSetsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeDiagnosticMetricSetsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiagnosticMetricSetsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiagnosticMetricSetsWithCallback), arg0, arg1)
}

// DescribeDiagnosticMetricSetsWithChan mocks base method.
func (m *MockEcsClient) DescribeDiagnosticMetricSetsWithChan(arg0 *ecs.DescribeDiagnosticMetricSetsRequest) (<-chan *ecs.DescribeDiagnosticMetricSetsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiagnosticMetricSetsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeDiagnosticMetricSetsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeDiagnosticMetricSetsWithChan indicates an expected call of DescribeDiagnosticMetricSetsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeDiagnosticMetricSetsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiagnosticMetricSetsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiagnosticMetricSetsWithChan), arg0)
}

// DescribeDiagnosticMetrics mocks base method.
func (m *MockEcsClient) DescribeDiagnosticMetrics(arg0 *ecs.DescribeDiagnosticMetricsRequest) (*ecs.DescribeDiagnosticMetricsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiagnosticMetrics", arg0)
	ret0, _ := ret[0].(*ecs.DescribeDiagnosticMetricsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDiagnosticMetrics indicates an expected call of DescribeDiagnosticMetrics.
func (mr *MockEcsClientMockRecorder) DescribeDiagnosticMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiagnosticMetrics", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiagnosticMetrics), arg0)
}

// DescribeDiagnosticMetricsWithCallback mocks base method.
func (m *MockEcsClient) DescribeDiagnosticMetricsWithCallback(arg0 *ecs.DescribeDiagnosticMetricsRequest, arg1 func(*ecs.DescribeDiagnosticMetricsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiagnosticMetricsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeDiagnosticMetricsWithCallback indicates an expected call of DescribeDiagnosticMetricsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeDiagnosticMetricsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiagnosticMetricsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiagnosticMetricsWithCallback), arg0, arg1)
}

// DescribeDiagnosticMetricsWithChan mocks base method.
func (m *MockEcsClient) DescribeDiagnosticMetricsWithChan(arg0 *ecs.DescribeDiagnosticMetricsRequest) (<-chan *ecs.DescribeDiagnosticMetricsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiagnosticMetricsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeDiagnosticMetricsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeDiagnosticMetricsWithChan indicates an expected call of DescribeDiagnosticMetricsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeDiagnosticMetricsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiagnosticMetricsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiagnosticMetricsWithChan), arg0)
}

// DescribeDiagnosticReportAttributes mocks base method.
func (m *MockEcsClient) DescribeDiagnosticReportAttributes(arg0 *ecs.DescribeDiagnosticReportAttributesRequest) (*ecs.DescribeDiagnosticReportAttributesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiagnosticReportAttributes", arg0)
	ret0, _ := ret[0].(*ecs.DescribeDiagnosticReportAttributesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDiagnosticReportAttributes indicates an expected call of DescribeDiagnosticReportAttributes.
func (mr *MockEcsClientMockRecorder) DescribeDiagnosticReportAttributes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiagnosticReportAttributes", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiagnosticReportAttributes), arg0)
}

// DescribeDiagnosticReportAttributesWithCallback mocks base method.
func (m *MockEcsClient) DescribeDiagnosticReportAttributesWithCallback(arg0 *ecs.DescribeDiagnosticReportAttributesRequest, arg1 func(*ecs.DescribeDiagnosticReportAttributesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiagnosticReportAttributesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeDiagnosticReportAttributesWithCallback indicates an expected call of DescribeDiagnosticReportAttributesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeDiagnosticReportAttributesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiagnosticReportAttributesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiagnosticReportAttributesWithCallback), arg0, arg1)
}

// DescribeDiagnosticReportAttributesWithChan mocks base method.
func (m *MockEcsClient) DescribeDiagnosticReportAttributesWithChan(arg0 *ecs.DescribeDiagnosticReportAttributesRequest) (<-chan *ecs.DescribeDiagnosticReportAttributesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiagnosticReportAttributesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeDiagnosticReportAttributesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeDiagnosticReportAttributesWithChan indicates an expected call of DescribeDiagnosticReportAttributesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeDiagnosticReportAttributesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiagnosticReportAttributesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiagnosticReportAttributesWithChan), arg0)
}

// DescribeDiagnosticReports mocks base method.
func (m *MockEcsClient) DescribeDiagnosticReports(arg0 *ecs.DescribeDiagnosticReportsRequest) (*ecs.DescribeDiagnosticReportsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiagnosticReports", arg0)
	ret0, _ := ret[0].(*ecs.DescribeDiagnosticReportsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDiagnosticReports indicates an expected call of DescribeDiagnosticReports.
func (mr *MockEcsClientMockRecorder) DescribeDiagnosticReports(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiagnosticReports", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiagnosticReports), arg0)
}

// DescribeDiagnosticReportsWithCallback mocks base method.
func (m *MockEcsClient) DescribeDiagnosticReportsWithCallback(arg0 *ecs.DescribeDiagnosticReportsRequest, arg1 func(*ecs.DescribeDiagnosticReportsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiagnosticReportsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeDiagnosticReportsWithCallback indicates an expected call of DescribeDiagnosticReportsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeDiagnosticReportsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiagnosticReportsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiagnosticReportsWithCallback), arg0, arg1)
}

// DescribeDiagnosticReportsWithChan mocks base method.
func (m *MockEcsClient) DescribeDiagnosticReportsWithChan(arg0 *ecs.DescribeDiagnosticReportsRequest) (<-chan *ecs.DescribeDiagnosticReportsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiagnosticReportsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeDiagnosticReportsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeDiagnosticReportsWithChan indicates an expected call of DescribeDiagnosticReportsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeDiagnosticReportsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiagnosticReportsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiagnosticReportsWithChan), arg0)
}

// DescribeDiskMonitorData mocks base method.
func (m *MockEcsClient) DescribeDiskMonitorData(arg0 *ecs.DescribeDiskMonitorDataRequest) (*ecs.DescribeDiskMonitorDataResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiskMonitorData", arg0)
	ret0, _ := ret[0].(*ecs.DescribeDiskMonitorDataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDiskMonitorData indicates an expected call of DescribeDiskMonitorData.
func (mr *MockEcsClientMockRecorder) DescribeDiskMonitorData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiskMonitorData", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiskMonitorData), arg0)
}

// DescribeDiskMonitorDataWithCallback mocks base method.
func (m *MockEcsClient) DescribeDiskMonitorDataWithCallback(arg0 *ecs.DescribeDiskMonitorDataRequest, arg1 func(*ecs.DescribeDiskMonitorDataResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiskMonitorDataWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeDiskMonitorDataWithCallback indicates an expected call of DescribeDiskMonitorDataWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeDiskMonitorDataWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiskMonitorDataWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiskMonitorDataWithCallback), arg0, arg1)
}

// DescribeDiskMonitorDataWithChan mocks base method.
func (m *MockEcsClient) DescribeDiskMonitorDataWithChan(arg0 *ecs.DescribeDiskMonitorDataRequest) (<-chan *ecs.DescribeDiskMonitorDataResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDiskMonitorDataWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeDiskMonitorDataResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeDiskMonitorDataWithChan indicates an expected call of DescribeDiskMonitorDataWithChan.
func (mr *MockEcsClientMockRecorder) DescribeDiskMonitorDataWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDiskMonitorDataWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeDiskMonitorDataWithChan), arg0)
}

// DescribeDisks mocks base method.
func (m *MockEcsClient) DescribeDisks(arg0 *ecs.DescribeDisksRequest) (*ecs.DescribeDisksResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDisks", arg0)
	ret0, _ := ret[0].(*ecs.DescribeDisksResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDisks indicates an expected call of DescribeDisks.
func (mr *MockEcsClientMockRecorder) DescribeDisks(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDisks", reflect.TypeOf((*MockEcsClient)(nil).DescribeDisks), arg0)
}

// DescribeDisksFullStatus mocks base method.
func (m *MockEcsClient) DescribeDisksFullStatus(arg0 *ecs.DescribeDisksFullStatusRequest) (*ecs.DescribeDisksFullStatusResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDisksFullStatus", arg0)
	ret0, _ := ret[0].(*ecs.DescribeDisksFullStatusResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDisksFullStatus indicates an expected call of DescribeDisksFullStatus.
func (mr *MockEcsClientMockRecorder) DescribeDisksFullStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDisksFullStatus", reflect.TypeOf((*MockEcsClient)(nil).DescribeDisksFullStatus), arg0)
}

// DescribeDisksFullStatusWithCallback mocks base method.
func (m *MockEcsClient) DescribeDisksFullStatusWithCallback(arg0 *ecs.DescribeDisksFullStatusRequest, arg1 func(*ecs.DescribeDisksFullStatusResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDisksFullStatusWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeDisksFullStatusWithCallback indicates an expected call of DescribeDisksFullStatusWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeDisksFullStatusWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDisksFullStatusWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeDisksFullStatusWithCallback), arg0, arg1)
}

// DescribeDisksFullStatusWithChan mocks base method.
func (m *MockEcsClient) DescribeDisksFullStatusWithChan(arg0 *ecs.DescribeDisksFullStatusRequest) (<-chan *ecs.DescribeDisksFullStatusResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDisksFullStatusWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeDisksFullStatusResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeDisksFullStatusWithChan indicates an expected call of DescribeDisksFullStatusWithChan.
func (mr *MockEcsClientMockRecorder) DescribeDisksFullStatusWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDisksFullStatusWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeDisksFullStatusWithChan), arg0)
}

// DescribeDisksWithCallback mocks base method.
func (m *MockEcsClient) DescribeDisksWithCallback(arg0 *ecs.DescribeDisksRequest, arg1 func(*ecs.DescribeDisksResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDisksWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeDisksWithCallback indicates an expected call of DescribeDisksWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeDisksWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDisksWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeDisksWithCallback), arg0, arg1)
}

// DescribeDisksWithChan mocks base method.
func (m *MockEcsClient) DescribeDisksWithChan(arg0 *ecs.DescribeDisksRequest) (<-chan *ecs.DescribeDisksResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDisksWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeDisksResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeDisksWithChan indicates an expected call of DescribeDisksWithChan.
func (mr *MockEcsClientMockRecorder) DescribeDisksWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDisksWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeDisksWithChan), arg0)
}

// DescribeEipAddresses mocks base method.
func (m *MockEcsClient) DescribeEipAddresses(arg0 *ecs.DescribeEipAddressesRequest) (*ecs.DescribeEipAddressesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeEipAddresses", arg0)
	ret0, _ := ret[0].(*ecs.DescribeEipAddressesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeEipAddresses indicates an expected call of DescribeEipAddresses.
func (mr *MockEcsClientMockRecorder) DescribeEipAddresses(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeEipAddresses", reflect.TypeOf((*MockEcsClient)(nil).DescribeEipAddresses), arg0)
}

// DescribeEipAddressesWithCallback mocks base method.
func (m *MockEcsClient) DescribeEipAddressesWithCallback(arg0 *ecs.DescribeEipAddressesRequest, arg1 func(*ecs.DescribeEipAddressesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeEipAddressesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeEipAddressesWithCallback indicates an expected call of DescribeEipAddressesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeEipAddressesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeEipAddressesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeEipAddressesWithCallback), arg0, arg1)
}

// DescribeEipAddressesWithChan mocks base method.
func (m *MockEcsClient) DescribeEipAddressesWithChan(arg0 *ecs.DescribeEipAddressesRequest) (<-chan *ecs.DescribeEipAddressesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeEipAddressesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeEipAddressesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeEipAddressesWithChan indicates an expected call of DescribeEipAddressesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeEipAddressesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeEipAddressesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeEipAddressesWithChan), arg0)
}

// DescribeEipMonitorData mocks base method.
func (m *MockEcsClient) DescribeEipMonitorData(arg0 *ecs.DescribeEipMonitorDataRequest) (*ecs.DescribeEipMonitorDataResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeEipMonitorData", arg0)
	ret0, _ := ret[0].(*ecs.DescribeEipMonitorDataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeEipMonitorData indicates an expected call of DescribeEipMonitorData.
func (mr *MockEcsClientMockRecorder) DescribeEipMonitorData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeEipMonitorData", reflect.TypeOf((*MockEcsClient)(nil).DescribeEipMonitorData), arg0)
}

// DescribeEipMonitorDataWithCallback mocks base method.
func (m *MockEcsClient) DescribeEipMonitorDataWithCallback(arg0 *ecs.DescribeEipMonitorDataRequest, arg1 func(*ecs.DescribeEipMonitorDataResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeEipMonitorDataWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeEipMonitorDataWithCallback indicates an expected call of DescribeEipMonitorDataWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeEipMonitorDataWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeEipMonitorDataWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeEipMonitorDataWithCallback), arg0, arg1)
}

// DescribeEipMonitorDataWithChan mocks base method.
func (m *MockEcsClient) DescribeEipMonitorDataWithChan(arg0 *ecs.DescribeEipMonitorDataRequest) (<-chan *ecs.DescribeEipMonitorDataResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeEipMonitorDataWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeEipMonitorDataResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeEipMonitorDataWithChan indicates an expected call of DescribeEipMonitorDataWithChan.
func (mr *MockEcsClientMockRecorder) DescribeEipMonitorDataWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeEipMonitorDataWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeEipMonitorDataWithChan), arg0)
}

// DescribeElasticityAssuranceInstances mocks base method.
func (m *MockEcsClient) DescribeElasticityAssuranceInstances(arg0 *ecs.DescribeElasticityAssuranceInstancesRequest) (*ecs.DescribeElasticityAssuranceInstancesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeElasticityAssuranceInstances", arg0)
	ret0, _ := ret[0].(*ecs.DescribeElasticityAssuranceInstancesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeElasticityAssuranceInstances indicates an expected call of DescribeElasticityAssuranceInstances.
func (mr *MockEcsClientMockRecorder) DescribeElasticityAssuranceInstances(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticityAssuranceInstances", reflect.TypeOf((*MockEcsClient)(nil).DescribeElasticityAssuranceInstances), arg0)
}

// DescribeElasticityAssuranceInstancesWithCallback mocks base method.
func (m *MockEcsClient) DescribeElasticityAssuranceInstancesWithCallback(arg0 *ecs.DescribeElasticityAssuranceInstancesRequest, arg1 func(*ecs.DescribeElasticityAssuranceInstancesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeElasticityAssuranceInstancesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeElasticityAssuranceInstancesWithCallback indicates an expected call of DescribeElasticityAssuranceInstancesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeElasticityAssuranceInstancesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticityAssuranceInstancesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeElasticityAssuranceInstancesWithCallback), arg0, arg1)
}

// DescribeElasticityAssuranceInstancesWithChan mocks base method.
func (m *MockEcsClient) DescribeElasticityAssuranceInstancesWithChan(arg0 *ecs.DescribeElasticityAssuranceInstancesRequest) (<-chan *ecs.DescribeElasticityAssuranceInstancesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeElasticityAssuranceInstancesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeElasticityAssuranceInstancesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeElasticityAssuranceInstancesWithChan indicates an expected call of DescribeElasticityAssuranceInstancesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeElasticityAssuranceInstancesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticityAssuranceInstancesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeElasticityAssuranceInstancesWithChan), arg0)
}

// DescribeElasticityAssurances mocks base method.
func (m *MockEcsClient) DescribeElasticityAssurances(arg0 *ecs.DescribeElasticityAssurancesRequest) (*ecs.DescribeElasticityAssurancesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeElasticityAssurances", arg0)
	ret0, _ := ret[0].(*ecs.DescribeElasticityAssurancesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeElasticityAssurances indicates an expected call of DescribeElasticityAssurances.
func (mr *MockEcsClientMockRecorder) DescribeElasticityAssurances(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticityAssurances", reflect.TypeOf((*MockEcsClient)(nil).DescribeElasticityAssurances), arg0)
}

// DescribeElasticityAssurancesWithCallback mocks base method.
func (m *MockEcsClient) DescribeElasticityAssurancesWithCallback(arg0 *ecs.DescribeElasticityAssurancesRequest, arg1 func(*ecs.DescribeElasticityAssurancesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeElasticityAssurancesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeElasticityAssurancesWithCallback indicates an expected call of DescribeElasticityAssurancesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeElasticityAssurancesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticityAssurancesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeElasticityAssurancesWithCallback), arg0, arg1)
}

// DescribeElasticityAssurancesWithChan mocks base method.
func (m *MockEcsClient) DescribeElasticityAssurancesWithChan(arg0 *ecs.DescribeElasticityAssurancesRequest) (<-chan *ecs.DescribeElasticityAssurancesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeElasticityAssurancesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeElasticityAssurancesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeElasticityAssurancesWithChan indicates an expected call of DescribeElasticityAssurancesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeElasticityAssurancesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticityAssurancesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeElasticityAssurancesWithChan), arg0)
}

// DescribeEniMonitorData mocks base method.
func (m *MockEcsClient) DescribeEniMonitorData(arg0 *ecs.DescribeEniMonitorDataRequest) (*ecs.DescribeEniMonitorDataResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeEniMonitorData", arg0)
	ret0, _ := ret[0].(*ecs.DescribeEniMonitorDataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeEniMonitorData indicates an expected call of DescribeEniMonitorData.
func (mr *MockEcsClientMockRecorder) DescribeEniMonitorData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeEniMonitorData", reflect.TypeOf((*MockEcsClient)(nil).DescribeEniMonitorData), arg0)
}

// DescribeEniMonitorDataWithCallback mocks base method.
func (m *MockEcsClient) DescribeEniMonitorDataWithCallback(arg0 *ecs.DescribeEniMonitorDataRequest, arg1 func(*ecs.DescribeEniMonitorDataResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeEniMonitorDataWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeEniMonitorDataWithCallback indicates an expected call of DescribeEniMonitorDataWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeEniMonitorDataWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeEniMonitorDataWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeEniMonitorDataWithCallback), arg0, arg1)
}

// DescribeEniMonitorDataWithChan mocks base method.
func (m *MockEcsClient) DescribeEniMonitorDataWithChan(arg0 *ecs.DescribeEniMonitorDataRequest) (<-chan *ecs.DescribeEniMonitorDataResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeEniMonitorDataWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeEniMonitorDataResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeEniMonitorDataWithChan indicates an expected call of DescribeEniMonitorDataWithChan.
func (mr *MockEcsClientMockRecorder) DescribeEniMonitorDataWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeEniMonitorDataWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeEniMonitorDataWithChan), arg0)
}

// DescribeForwardTableEntries mocks base method.
func (m *MockEcsClient) DescribeForwardTableEntries(arg0 *ecs.DescribeForwardTableEntriesRequest) (*ecs.DescribeForwardTableEntriesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeForwardTableEntries", arg0)
	ret0, _ := ret[0].(*ecs.DescribeForwardTableEntriesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeForwardTableEntries indicates an expected call of DescribeForwardTableEntries.
func (mr *MockEcsClientMockRecorder) DescribeForwardTableEntries(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeForwardTableEntries", reflect.TypeOf((*MockEcsClient)(nil).DescribeForwardTableEntries), arg0)
}

// DescribeForwardTableEntriesWithCallback mocks base method.
func (m *MockEcsClient) DescribeForwardTableEntriesWithCallback(arg0 *ecs.DescribeForwardTableEntriesRequest, arg1 func(*ecs.DescribeForwardTableEntriesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeForwardTableEntriesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeForwardTableEntriesWithCallback indicates an expected call of DescribeForwardTableEntriesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeForwardTableEntriesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeForwardTableEntriesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeForwardTableEntriesWithCallback), arg0, arg1)
}

// DescribeForwardTableEntriesWithChan mocks base method.
func (m *MockEcsClient) DescribeForwardTableEntriesWithChan(arg0 *ecs.DescribeForwardTableEntriesRequest) (<-chan *ecs.DescribeForwardTableEntriesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeForwardTableEntriesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeForwardTableEntriesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeForwardTableEntriesWithChan indicates an expected call of DescribeForwardTableEntriesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeForwardTableEntriesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeForwardTableEntriesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeForwardTableEntriesWithChan), arg0)
}

// DescribeHaVips mocks base method.
func (m *MockEcsClient) DescribeHaVips(arg0 *ecs.DescribeHaVipsRequest) (*ecs.DescribeHaVipsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeHaVips", arg0)
	ret0, _ := ret[0].(*ecs.DescribeHaVipsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeHaVips indicates an expected call of DescribeHaVips.
func (mr *MockEcsClientMockRecorder) DescribeHaVips(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeHaVips", reflect.TypeOf((*MockEcsClient)(nil).DescribeHaVips), arg0)
}

// DescribeHaVipsWithCallback mocks base method.
func (m *MockEcsClient) DescribeHaVipsWithCallback(arg0 *ecs.DescribeHaVipsRequest, arg1 func(*ecs.DescribeHaVipsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeHaVipsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeHaVipsWithCallback indicates an expected call of DescribeHaVipsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeHaVipsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeHaVipsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeHaVipsWithCallback), arg0, arg1)
}

// DescribeHaVipsWithChan mocks base method.
func (m *MockEcsClient) DescribeHaVipsWithChan(arg0 *ecs.DescribeHaVipsRequest) (<-chan *ecs.DescribeHaVipsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeHaVipsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeHaVipsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeHaVipsWithChan indicates an expected call of DescribeHaVipsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeHaVipsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeHaVipsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeHaVipsWithChan), arg0)
}

// DescribeHpcClusters mocks base method.
func (m *MockEcsClient) DescribeHpcClusters(arg0 *ecs.DescribeHpcClustersRequest) (*ecs.DescribeHpcClustersResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeHpcClusters", arg0)
	ret0, _ := ret[0].(*ecs.DescribeHpcClustersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeHpcClusters indicates an expected call of DescribeHpcClusters.
func (mr *MockEcsClientMockRecorder) DescribeHpcClusters(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeHpcClusters", reflect.TypeOf((*MockEcsClient)(nil).DescribeHpcClusters), arg0)
}

// DescribeHpcClustersWithCallback mocks base method.
func (m *MockEcsClient) DescribeHpcClustersWithCallback(arg0 *ecs.DescribeHpcClustersRequest, arg1 func(*ecs.DescribeHpcClustersResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeHpcClustersWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeHpcClustersWithCallback indicates an expected call of DescribeHpcClustersWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeHpcClustersWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeHpcClustersWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeHpcClustersWithCallback), arg0, arg1)
}

// DescribeHpcClustersWithChan mocks base method.
func (m *MockEcsClient) DescribeHpcClustersWithChan(arg0 *ecs.DescribeHpcClustersRequest) (<-chan *ecs.DescribeHpcClustersResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeHpcClustersWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeHpcClustersResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeHpcClustersWithChan indicates an expected call of DescribeHpcClustersWithChan.
func (mr *MockEcsClientMockRecorder) DescribeHpcClustersWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeHpcClustersWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeHpcClustersWithChan), arg0)
}

// DescribeImageComponents mocks base method.
func (m *MockEcsClient) DescribeImageComponents(arg0 *ecs.DescribeImageComponentsRequest) (*ecs.DescribeImageComponentsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImageComponents", arg0)
	ret0, _ := ret[0].(*ecs.DescribeImageComponentsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeImageComponents indicates an expected call of DescribeImageComponents.
func (mr *MockEcsClientMockRecorder) DescribeImageComponents(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImageComponents", reflect.TypeOf((*MockEcsClient)(nil).DescribeImageComponents), arg0)
}

// DescribeImageComponentsWithCallback mocks base method.
func (m *MockEcsClient) DescribeImageComponentsWithCallback(arg0 *ecs.DescribeImageComponentsRequest, arg1 func(*ecs.DescribeImageComponentsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImageComponentsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeImageComponentsWithCallback indicates an expected call of DescribeImageComponentsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeImageComponentsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImageComponentsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeImageComponentsWithCallback), arg0, arg1)
}

// DescribeImageComponentsWithChan mocks base method.
func (m *MockEcsClient) DescribeImageComponentsWithChan(arg0 *ecs.DescribeImageComponentsRequest) (<-chan *ecs.DescribeImageComponentsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImageComponentsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeImageComponentsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeImageComponentsWithChan indicates an expected call of DescribeImageComponentsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeImageComponentsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImageComponentsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeImageComponentsWithChan), arg0)
}

// DescribeImageFromFamily mocks base method.
func (m *MockEcsClient) DescribeImageFromFamily(arg0 *ecs.DescribeImageFromFamilyRequest) (*ecs.DescribeImageFromFamilyResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImageFromFamily", arg0)
	ret0, _ := ret[0].(*ecs.DescribeImageFromFamilyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeImageFromFamily indicates an expected call of DescribeImageFromFamily.
func (mr *MockEcsClientMockRecorder) DescribeImageFromFamily(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImageFromFamily", reflect.TypeOf((*MockEcsClient)(nil).DescribeImageFromFamily), arg0)
}

// DescribeImageFromFamilyWithCallback mocks base method.
func (m *MockEcsClient) DescribeImageFromFamilyWithCallback(arg0 *ecs.DescribeImageFromFamilyRequest, arg1 func(*ecs.DescribeImageFromFamilyResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImageFromFamilyWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeImageFromFamilyWithCallback indicates an expected call of DescribeImageFromFamilyWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeImageFromFamilyWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImageFromFamilyWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeImageFromFamilyWithCallback), arg0, arg1)
}

// DescribeImageFromFamilyWithChan mocks base method.
func (m *MockEcsClient) DescribeImageFromFamilyWithChan(arg0 *ecs.DescribeImageFromFamilyRequest) (<-chan *ecs.DescribeImageFromFamilyResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImageFromFamilyWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeImageFromFamilyResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeImageFromFamilyWithChan indicates an expected call of DescribeImageFromFamilyWithChan.
func (mr *MockEcsClientMockRecorder) DescribeImageFromFamilyWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImageFromFamilyWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeImageFromFamilyWithChan), arg0)
}

// DescribeImagePipelineExecutions mocks base method.
func (m *MockEcsClient) DescribeImagePipelineExecutions(arg0 *ecs.DescribeImagePipelineExecutionsRequest) (*ecs.DescribeImagePipelineExecutionsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImagePipelineExecutions", arg0)
	ret0, _ := ret[0].(*ecs.DescribeImagePipelineExecutionsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeImagePipelineExecutions indicates an expected call of DescribeImagePipelineExecutions.
func (mr *MockEcsClientMockRecorder) DescribeImagePipelineExecutions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImagePipelineExecutions", reflect.TypeOf((*MockEcsClient)(nil).DescribeImagePipelineExecutions), arg0)
}

// DescribeImagePipelineExecutionsWithCallback mocks base method.
func (m *MockEcsClient) DescribeImagePipelineExecutionsWithCallback(arg0 *ecs.DescribeImagePipelineExecutionsRequest, arg1 func(*ecs.DescribeImagePipelineExecutionsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImagePipelineExecutionsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeImagePipelineExecutionsWithCallback indicates an expected call of DescribeImagePipelineExecutionsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeImagePipelineExecutionsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImagePipelineExecutionsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeImagePipelineExecutionsWithCallback), arg0, arg1)
}

// DescribeImagePipelineExecutionsWithChan mocks base method.
func (m *MockEcsClient) DescribeImagePipelineExecutionsWithChan(arg0 *ecs.DescribeImagePipelineExecutionsRequest) (<-chan *ecs.DescribeImagePipelineExecutionsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImagePipelineExecutionsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeImagePipelineExecutionsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeImagePipelineExecutionsWithChan indicates an expected call of DescribeImagePipelineExecutionsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeImagePipelineExecutionsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImagePipelineExecutionsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeImagePipelineExecutionsWithChan), arg0)
}

// DescribeImagePipelines mocks base method.
func (m *MockEcsClient) DescribeImagePipelines(arg0 *ecs.DescribeImagePipelinesRequest) (*ecs.DescribeImagePipelinesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImagePipelines", arg0)
	ret0, _ := ret[0].(*ecs.DescribeImagePipelinesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeImagePipelines indicates an expected call of DescribeImagePipelines.
func (mr *MockEcsClientMockRecorder) DescribeImagePipelines(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImagePipelines", reflect.TypeOf((*MockEcsClient)(nil).DescribeImagePipelines), arg0)
}

// DescribeImagePipelinesWithCallback mocks base method.
func (m *MockEcsClient) DescribeImagePipelinesWithCallback(arg0 *ecs.DescribeImagePipelinesRequest, arg1 func(*ecs.DescribeImagePipelinesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImagePipelinesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeImagePipelinesWithCallback indicates an expected call of DescribeImagePipelinesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeImagePipelinesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImagePipelinesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeImagePipelinesWithCallback), arg0, arg1)
}

// DescribeImagePipelinesWithChan mocks base method.
func (m *MockEcsClient) DescribeImagePipelinesWithChan(arg0 *ecs.DescribeImagePipelinesRequest) (<-chan *ecs.DescribeImagePipelinesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImagePipelinesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeImagePipelinesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeImagePipelinesWithChan indicates an expected call of DescribeImagePipelinesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeImagePipelinesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImagePipelinesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeImagePipelinesWithChan), arg0)
}

// DescribeImageSharePermission mocks base method.
func (m *MockEcsClient) DescribeImageSharePermission(arg0 *ecs.DescribeImageSharePermissionRequest) (*ecs.DescribeImageSharePermissionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImageSharePermission", arg0)
	ret0, _ := ret[0].(*ecs.DescribeImageSharePermissionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeImageSharePermission indicates an expected call of DescribeImageSharePermission.
func (mr *MockEcsClientMockRecorder) DescribeImageSharePermission(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImageSharePermission", reflect.TypeOf((*MockEcsClient)(nil).DescribeImageSharePermission), arg0)
}

// DescribeImageSharePermissionWithCallback mocks base method.
func (m *MockEcsClient) DescribeImageSharePermissionWithCallback(arg0 *ecs.DescribeImageSharePermissionRequest, arg1 func(*ecs.DescribeImageSharePermissionResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImageSharePermissionWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeImageSharePermissionWithCallback indicates an expected call of DescribeImageSharePermissionWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeImageSharePermissionWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImageSharePermissionWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeImageSharePermissionWithCallback), arg0, arg1)
}

// DescribeImageSharePermissionWithChan mocks base method.
func (m *MockEcsClient) DescribeImageSharePermissionWithChan(arg0 *ecs.DescribeImageSharePermissionRequest) (<-chan *ecs.DescribeImageSharePermissionResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImageSharePermissionWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeImageSharePermissionResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeImageSharePermissionWithChan indicates an expected call of DescribeImageSharePermissionWithChan.
func (mr *MockEcsClientMockRecorder) DescribeImageSharePermissionWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImageSharePermissionWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeImageSharePermissionWithChan), arg0)
}

// DescribeImageSupportInstanceTypes mocks base method.
func (m *MockEcsClient) DescribeImageSupportInstanceTypes(arg0 *ecs.DescribeImageSupportInstanceTypesRequest) (*ecs.DescribeImageSupportInstanceTypesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImageSupportInstanceTypes", arg0)
	ret0, _ := ret[0].(*ecs.DescribeImageSupportInstanceTypesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeImageSupportInstanceTypes indicates an expected call of DescribeImageSupportInstanceTypes.
func (mr *MockEcsClientMockRecorder) DescribeImageSupportInstanceTypes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImageSupportInstanceTypes", reflect.TypeOf((*MockEcsClient)(nil).DescribeImageSupportInstanceTypes), arg0)
}

// DescribeImageSupportInstanceTypesWithCallback mocks base method.
func (m *MockEcsClient) DescribeImageSupportInstanceTypesWithCallback(arg0 *ecs.DescribeImageSupportInstanceTypesRequest, arg1 func(*ecs.DescribeImageSupportInstanceTypesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImageSupportInstanceTypesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeImageSupportInstanceTypesWithCallback indicates an expected call of DescribeImageSupportInstanceTypesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeImageSupportInstanceTypesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImageSupportInstanceTypesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeImageSupportInstanceTypesWithCallback), arg0, arg1)
}

// DescribeImageSupportInstanceTypesWithChan mocks base method.
func (m *MockEcsClient) DescribeImageSupportInstanceTypesWithChan(arg0 *ecs.DescribeImageSupportInstanceTypesRequest) (<-chan *ecs.DescribeImageSupportInstanceTypesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImageSupportInstanceTypesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeImageSupportInstanceTypesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeImageSupportInstanceTypesWithChan indicates an expected call of DescribeImageSupportInstanceTypesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeImageSupportInstanceTypesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImageSupportInstanceTypesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeImageSupportInstanceTypesWithChan), arg0)
}

// DescribeImages mocks base method.
func (m *MockEcsClient) DescribeImages(arg0 *ecs.DescribeImagesRequest) (*ecs.DescribeImagesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImages", arg0)
	ret0, _ := ret[0].(*ecs.DescribeImagesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeImages indicates an expected call of DescribeImages.
func (mr *MockEcsClientMockRecorder) DescribeImages(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImages", reflect.TypeOf((*MockEcsClient)(nil).DescribeImages), arg0)
}

// DescribeImagesWithCallback mocks base method.
func (m *MockEcsClient) DescribeImagesWithCallback(arg0 *ecs.DescribeImagesRequest, arg1 func(*ecs.DescribeImagesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImagesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeImagesWithCallback indicates an expected call of DescribeImagesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeImagesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImagesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeImagesWithCallback), arg0, arg1)
}

// DescribeImagesWithChan mocks base method.
func (m *MockEcsClient) DescribeImagesWithChan(arg0 *ecs.DescribeImagesRequest) (<-chan *ecs.DescribeImagesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImagesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeImagesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeImagesWithChan indicates an expected call of DescribeImagesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeImagesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImagesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeImagesWithChan), arg0)
}

// DescribeInstanceAttachmentAttributes mocks base method.
func (m *MockEcsClient) DescribeInstanceAttachmentAttributes(arg0 *ecs.DescribeInstanceAttachmentAttributesRequest) (*ecs.DescribeInstanceAttachmentAttributesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceAttachmentAttributes", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstanceAttachmentAttributesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceAttachmentAttributes indicates an expected call of DescribeInstanceAttachmentAttributes.
func (mr *MockEcsClientMockRecorder) DescribeInstanceAttachmentAttributes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceAttachmentAttributes", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceAttachmentAttributes), arg0)
}

// DescribeInstanceAttachmentAttributesWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstanceAttachmentAttributesWithCallback(arg0 *ecs.DescribeInstanceAttachmentAttributesRequest, arg1 func(*ecs.DescribeInstanceAttachmentAttributesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceAttachmentAttributesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstanceAttachmentAttributesWithCallback indicates an expected call of DescribeInstanceAttachmentAttributesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstanceAttachmentAttributesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceAttachmentAttributesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceAttachmentAttributesWithCallback), arg0, arg1)
}

// DescribeInstanceAttachmentAttributesWithChan mocks base method.
func (m *MockEcsClient) DescribeInstanceAttachmentAttributesWithChan(arg0 *ecs.DescribeInstanceAttachmentAttributesRequest) (<-chan *ecs.DescribeInstanceAttachmentAttributesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceAttachmentAttributesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstanceAttachmentAttributesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstanceAttachmentAttributesWithChan indicates an expected call of DescribeInstanceAttachmentAttributesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstanceAttachmentAttributesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceAttachmentAttributesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceAttachmentAttributesWithChan), arg0)
}

// DescribeInstanceAttribute mocks base method.
func (m *MockEcsClient) DescribeInstanceAttribute(arg0 *ecs.DescribeInstanceAttributeRequest) (*ecs.DescribeInstanceAttributeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceAttribute", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstanceAttributeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceAttribute indicates an expected call of DescribeInstanceAttribute.
func (mr *MockEcsClientMockRecorder) DescribeInstanceAttribute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceAttribute", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceAttribute), arg0)
}

// DescribeInstanceAttributeWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstanceAttributeWithCallback(arg0 *ecs.DescribeInstanceAttributeRequest, arg1 func(*ecs.DescribeInstanceAttributeResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceAttributeWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstanceAttributeWithCallback indicates an expected call of DescribeInstanceAttributeWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstanceAttributeWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceAttributeWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceAttributeWithCallback), arg0, arg1)
}

// DescribeInstanceAttributeWithChan mocks base method.
func (m *MockEcsClient) DescribeInstanceAttributeWithChan(arg0 *ecs.DescribeInstanceAttributeRequest) (<-chan *ecs.DescribeInstanceAttributeResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceAttributeWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstanceAttributeResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstanceAttributeWithChan indicates an expected call of DescribeInstanceAttributeWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstanceAttributeWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceAttributeWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceAttributeWithChan), arg0)
}

// DescribeInstanceAutoRenewAttribute mocks base method.
func (m *MockEcsClient) DescribeInstanceAutoRenewAttribute(arg0 *ecs.DescribeInstanceAutoRenewAttributeRequest) (*ecs.DescribeInstanceAutoRenewAttributeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceAutoRenewAttribute", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstanceAutoRenewAttributeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceAutoRenewAttribute indicates an expected call of DescribeInstanceAutoRenewAttribute.
func (mr *MockEcsClientMockRecorder) DescribeInstanceAutoRenewAttribute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceAutoRenewAttribute", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceAutoRenewAttribute), arg0)
}

// DescribeInstanceAutoRenewAttributeWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstanceAutoRenewAttributeWithCallback(arg0 *ecs.DescribeInstanceAutoRenewAttributeRequest, arg1 func(*ecs.DescribeInstanceAutoRenewAttributeResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceAutoRenewAttributeWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstanceAutoRenewAttributeWithCallback indicates an expected call of DescribeInstanceAutoRenewAttributeWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstanceAutoRenewAttributeWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceAutoRenewAttributeWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceAutoRenewAttributeWithCallback), arg0, arg1)
}

// DescribeInstanceAutoRenewAttributeWithChan mocks base method.
func (m *MockEcsClient) DescribeInstanceAutoRenewAttributeWithChan(arg0 *ecs.DescribeInstanceAutoRenewAttributeRequest) (<-chan *ecs.DescribeInstanceAutoRenewAttributeResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceAutoRenewAttributeWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstanceAutoRenewAttributeResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstanceAutoRenewAttributeWithChan indicates an expected call of DescribeInstanceAutoRenewAttributeWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstanceAutoRenewAttributeWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceAutoRenewAttributeWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceAutoRenewAttributeWithChan), arg0)
}

// DescribeInstanceHistoryEvents mocks base method.
func (m *MockEcsClient) DescribeInstanceHistoryEvents(arg0 *ecs.DescribeInstanceHistoryEventsRequest) (*ecs.DescribeInstanceHistoryEventsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceHistoryEvents", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstanceHistoryEventsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceHistoryEvents indicates an expected call of DescribeInstanceHistoryEvents.
func (mr *MockEcsClientMockRecorder) DescribeInstanceHistoryEvents(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceHistoryEvents", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceHistoryEvents), arg0)
}

// DescribeInstanceHistoryEventsWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstanceHistoryEventsWithCallback(arg0 *ecs.DescribeInstanceHistoryEventsRequest, arg1 func(*ecs.DescribeInstanceHistoryEventsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceHistoryEventsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstanceHistoryEventsWithCallback indicates an expected call of DescribeInstanceHistoryEventsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstanceHistoryEventsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceHistoryEventsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceHistoryEventsWithCallback), arg0, arg1)
}

// DescribeInstanceHistoryEventsWithChan mocks base method.
func (m *MockEcsClient) DescribeInstanceHistoryEventsWithChan(arg0 *ecs.DescribeInstanceHistoryEventsRequest) (<-chan *ecs.DescribeInstanceHistoryEventsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceHistoryEventsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstanceHistoryEventsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstanceHistoryEventsWithChan indicates an expected call of DescribeInstanceHistoryEventsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstanceHistoryEventsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceHistoryEventsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceHistoryEventsWithChan), arg0)
}

// DescribeInstanceMaintenanceAttributes mocks base method.
func (m *MockEcsClient) DescribeInstanceMaintenanceAttributes(arg0 *ecs.DescribeInstanceMaintenanceAttributesRequest) (*ecs.DescribeInstanceMaintenanceAttributesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceMaintenanceAttributes", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstanceMaintenanceAttributesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceMaintenanceAttributes indicates an expected call of DescribeInstanceMaintenanceAttributes.
func (mr *MockEcsClientMockRecorder) DescribeInstanceMaintenanceAttributes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceMaintenanceAttributes", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceMaintenanceAttributes), arg0)
}

// DescribeInstanceMaintenanceAttributesWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstanceMaintenanceAttributesWithCallback(arg0 *ecs.DescribeInstanceMaintenanceAttributesRequest, arg1 func(*ecs.DescribeInstanceMaintenanceAttributesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceMaintenanceAttributesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstanceMaintenanceAttributesWithCallback indicates an expected call of DescribeInstanceMaintenanceAttributesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstanceMaintenanceAttributesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceMaintenanceAttributesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceMaintenanceAttributesWithCallback), arg0, arg1)
}

// DescribeInstanceMaintenanceAttributesWithChan mocks base method.
func (m *MockEcsClient) DescribeInstanceMaintenanceAttributesWithChan(arg0 *ecs.DescribeInstanceMaintenanceAttributesRequest) (<-chan *ecs.DescribeInstanceMaintenanceAttributesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceMaintenanceAttributesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstanceMaintenanceAttributesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstanceMaintenanceAttributesWithChan indicates an expected call of DescribeInstanceMaintenanceAttributesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstanceMaintenanceAttributesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceMaintenanceAttributesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceMaintenanceAttributesWithChan), arg0)
}

// DescribeInstanceModificationPrice mocks base method.
func (m *MockEcsClient) DescribeInstanceModificationPrice(arg0 *ecs.DescribeInstanceModificationPriceRequest) (*ecs.DescribeInstanceModificationPriceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceModificationPrice", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstanceModificationPriceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceModificationPrice indicates an expected call of DescribeInstanceModificationPrice.
func (mr *MockEcsClientMockRecorder) DescribeInstanceModificationPrice(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceModificationPrice", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceModificationPrice), arg0)
}

// DescribeInstanceModificationPriceWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstanceModificationPriceWithCallback(arg0 *ecs.DescribeInstanceModificationPriceRequest, arg1 func(*ecs.DescribeInstanceModificationPriceResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceModificationPriceWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstanceModificationPriceWithCallback indicates an expected call of DescribeInstanceModificationPriceWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstanceModificationPriceWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceModificationPriceWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceModificationPriceWithCallback), arg0, arg1)
}

// DescribeInstanceModificationPriceWithChan mocks base method.
func (m *MockEcsClient) DescribeInstanceModificationPriceWithChan(arg0 *ecs.DescribeInstanceModificationPriceRequest) (<-chan *ecs.DescribeInstanceModificationPriceResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceModificationPriceWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstanceModificationPriceResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstanceModificationPriceWithChan indicates an expected call of DescribeInstanceModificationPriceWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstanceModificationPriceWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceModificationPriceWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceModificationPriceWithChan), arg0)
}

// DescribeInstanceMonitorData mocks base method.
func (m *MockEcsClient) DescribeInstanceMonitorData(arg0 *ecs.DescribeInstanceMonitorDataRequest) (*ecs.DescribeInstanceMonitorDataResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceMonitorData", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstanceMonitorDataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceMonitorData indicates an expected call of DescribeInstanceMonitorData.
func (mr *MockEcsClientMockRecorder) DescribeInstanceMonitorData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceMonitorData", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceMonitorData), arg0)
}

// DescribeInstanceMonitorDataWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstanceMonitorDataWithCallback(arg0 *ecs.DescribeInstanceMonitorDataRequest, arg1 func(*ecs.DescribeInstanceMonitorDataResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceMonitorDataWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstanceMonitorDataWithCallback indicates an expected call of DescribeInstanceMonitorDataWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstanceMonitorDataWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceMonitorDataWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceMonitorDataWithCallback), arg0, arg1)
}

// DescribeInstanceMonitorDataWithChan mocks base method.
func (m *MockEcsClient) DescribeInstanceMonitorDataWithChan(arg0 *ecs.DescribeInstanceMonitorDataRequest) (<-chan *ecs.DescribeInstanceMonitorDataResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceMonitorDataWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstanceMonitorDataResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstanceMonitorDataWithChan indicates an expected call of DescribeInstanceMonitorDataWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstanceMonitorDataWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceMonitorDataWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceMonitorDataWithChan), arg0)
}

// DescribeInstanceRamRole mocks base method.
func (m *MockEcsClient) DescribeInstanceRamRole(arg0 *ecs.DescribeInstanceRamRoleRequest) (*ecs.DescribeInstanceRamRoleResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceRamRole", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstanceRamRoleResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceRamRole indicates an expected call of DescribeInstanceRamRole.
func (mr *MockEcsClientMockRecorder) DescribeInstanceRamRole(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceRamRole", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceRamRole), arg0)
}

// DescribeInstanceRamRoleWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstanceRamRoleWithCallback(arg0 *ecs.DescribeInstanceRamRoleRequest, arg1 func(*ecs.DescribeInstanceRamRoleResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceRamRoleWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstanceRamRoleWithCallback indicates an expected call of DescribeInstanceRamRoleWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstanceRamRoleWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceRamRoleWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceRamRoleWithCallback), arg0, arg1)
}

// DescribeInstanceRamRoleWithChan mocks base method.
func (m *MockEcsClient) DescribeInstanceRamRoleWithChan(arg0 *ecs.DescribeInstanceRamRoleRequest) (<-chan *ecs.DescribeInstanceRamRoleResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceRamRoleWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstanceRamRoleResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstanceRamRoleWithChan indicates an expected call of DescribeInstanceRamRoleWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstanceRamRoleWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceRamRoleWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceRamRoleWithChan), arg0)
}

// DescribeInstanceStatus mocks base method.
func (m *MockEcsClient) DescribeInstanceStatus(arg0 *ecs.DescribeInstanceStatusRequest) (*ecs.DescribeInstanceStatusResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceStatus", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstanceStatusResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceStatus indicates an expected call of DescribeInstanceStatus.
func (mr *MockEcsClientMockRecorder) DescribeInstanceStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceStatus", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceStatus), arg0)
}

// DescribeInstanceStatusWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstanceStatusWithCallback(arg0 *ecs.DescribeInstanceStatusRequest, arg1 func(*ecs.DescribeInstanceStatusResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceStatusWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstanceStatusWithCallback indicates an expected call of DescribeInstanceStatusWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstanceStatusWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceStatusWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceStatusWithCallback), arg0, arg1)
}

// DescribeInstanceStatusWithChan mocks base method.
func (m *MockEcsClient) DescribeInstanceStatusWithChan(arg0 *ecs.DescribeInstanceStatusRequest) (<-chan *ecs.DescribeInstanceStatusResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceStatusWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstanceStatusResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstanceStatusWithChan indicates an expected call of DescribeInstanceStatusWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstanceStatusWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceStatusWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceStatusWithChan), arg0)
}

// DescribeInstanceTopology mocks base method.
func (m *MockEcsClient) DescribeInstanceTopology(arg0 *ecs.DescribeInstanceTopologyRequest) (*ecs.DescribeInstanceTopologyResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceTopology", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstanceTopologyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceTopology indicates an expected call of DescribeInstanceTopology.
func (mr *MockEcsClientMockRecorder) DescribeInstanceTopology(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceTopology", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceTopology), arg0)
}

// DescribeInstanceTopologyWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstanceTopologyWithCallback(arg0 *ecs.DescribeInstanceTopologyRequest, arg1 func(*ecs.DescribeInstanceTopologyResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceTopologyWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstanceTopologyWithCallback indicates an expected call of DescribeInstanceTopologyWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstanceTopologyWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceTopologyWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceTopologyWithCallback), arg0, arg1)
}

// DescribeInstanceTopologyWithChan mocks base method.
func (m *MockEcsClient) DescribeInstanceTopologyWithChan(arg0 *ecs.DescribeInstanceTopologyRequest) (<-chan *ecs.DescribeInstanceTopologyResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceTopologyWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstanceTopologyResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstanceTopologyWithChan indicates an expected call of DescribeInstanceTopologyWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstanceTopologyWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceTopologyWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceTopologyWithChan), arg0)
}

// DescribeInstanceTypeFamilies mocks base method.
func (m *MockEcsClient) DescribeInstanceTypeFamilies(arg0 *ecs.DescribeInstanceTypeFamiliesRequest) (*ecs.DescribeInstanceTypeFamiliesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceTypeFamilies", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstanceTypeFamiliesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceTypeFamilies indicates an expected call of DescribeInstanceTypeFamilies.
func (mr *MockEcsClientMockRecorder) DescribeInstanceTypeFamilies(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceTypeFamilies", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceTypeFamilies), arg0)
}

// DescribeInstanceTypeFamiliesWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstanceTypeFamiliesWithCallback(arg0 *ecs.DescribeInstanceTypeFamiliesRequest, arg1 func(*ecs.DescribeInstanceTypeFamiliesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceTypeFamiliesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstanceTypeFamiliesWithCallback indicates an expected call of DescribeInstanceTypeFamiliesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstanceTypeFamiliesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceTypeFamiliesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceTypeFamiliesWithCallback), arg0, arg1)
}

// DescribeInstanceTypeFamiliesWithChan mocks base method.
func (m *MockEcsClient) DescribeInstanceTypeFamiliesWithChan(arg0 *ecs.DescribeInstanceTypeFamiliesRequest) (<-chan *ecs.DescribeInstanceTypeFamiliesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceTypeFamiliesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstanceTypeFamiliesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstanceTypeFamiliesWithChan indicates an expected call of DescribeInstanceTypeFamiliesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstanceTypeFamiliesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceTypeFamiliesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceTypeFamiliesWithChan), arg0)
}

// DescribeInstanceTypes mocks base method.
func (m *MockEcsClient) DescribeInstanceTypes(arg0 *ecs.DescribeInstanceTypesRequest) (*ecs.DescribeInstanceTypesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceTypes", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstanceTypesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceTypes indicates an expected call of DescribeInstanceTypes.
func (mr *MockEcsClientMockRecorder) DescribeInstanceTypes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceTypes", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceTypes), arg0)
}

// DescribeInstanceTypesWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstanceTypesWithCallback(arg0 *ecs.DescribeInstanceTypesRequest, arg1 func(*ecs.DescribeInstanceTypesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceTypesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstanceTypesWithCallback indicates an expected call of DescribeInstanceTypesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstanceTypesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceTypesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceTypesWithCallback), arg0, arg1)
}

// DescribeInstanceTypesWithChan mocks base method.
func (m *MockEcsClient) DescribeInstanceTypesWithChan(arg0 *ecs.DescribeInstanceTypesRequest) (<-chan *ecs.DescribeInstanceTypesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceTypesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstanceTypesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstanceTypesWithChan indicates an expected call of DescribeInstanceTypesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstanceTypesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceTypesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceTypesWithChan), arg0)
}

// DescribeInstanceVncPasswd mocks base method.
func (m *MockEcsClient) DescribeInstanceVncPasswd(arg0 *ecs.DescribeInstanceVncPasswdRequest) (*ecs.DescribeInstanceVncPasswdResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceVncPasswd", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstanceVncPasswdResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceVncPasswd indicates an expected call of DescribeInstanceVncPasswd.
func (mr *MockEcsClientMockRecorder) DescribeInstanceVncPasswd(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceVncPasswd", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceVncPasswd), arg0)
}

// DescribeInstanceVncPasswdWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstanceVncPasswdWithCallback(arg0 *ecs.DescribeInstanceVncPasswdRequest, arg1 func(*ecs.DescribeInstanceVncPasswdResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceVncPasswdWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstanceVncPasswdWithCallback indicates an expected call of DescribeInstanceVncPasswdWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstanceVncPasswdWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceVncPasswdWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceVncPasswdWithCallback), arg0, arg1)
}

// DescribeInstanceVncPasswdWithChan mocks base method.
func (m *MockEcsClient) DescribeInstanceVncPasswdWithChan(arg0 *ecs.DescribeInstanceVncPasswdRequest) (<-chan *ecs.DescribeInstanceVncPasswdResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceVncPasswdWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstanceVncPasswdResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstanceVncPasswdWithChan indicates an expected call of DescribeInstanceVncPasswdWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstanceVncPasswdWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceVncPasswdWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceVncPasswdWithChan), arg0)
}

// DescribeInstanceVncUrl mocks base method.
func (m *MockEcsClient) DescribeInstanceVncUrl(arg0 *ecs.DescribeInstanceVncUrlRequest) (*ecs.DescribeInstanceVncUrlResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceVncUrl", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstanceVncUrlResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceVncUrl indicates an expected call of DescribeInstanceVncUrl.
func (mr *MockEcsClientMockRecorder) DescribeInstanceVncUrl(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceVncUrl", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceVncUrl), arg0)
}

// DescribeInstanceVncUrlWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstanceVncUrlWithCallback(arg0 *ecs.DescribeInstanceVncUrlRequest, arg1 func(*ecs.DescribeInstanceVncUrlResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceVncUrlWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstanceVncUrlWithCallback indicates an expected call of DescribeInstanceVncUrlWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstanceVncUrlWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceVncUrlWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceVncUrlWithCallback), arg0, arg1)
}

// DescribeInstanceVncUrlWithChan mocks base method.
func (m *MockEcsClient) DescribeInstanceVncUrlWithChan(arg0 *ecs.DescribeInstanceVncUrlRequest) (<-chan *ecs.DescribeInstanceVncUrlResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceVncUrlWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstanceVncUrlResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstanceVncUrlWithChan indicates an expected call of DescribeInstanceVncUrlWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstanceVncUrlWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceVncUrlWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstanceVncUrlWithChan), arg0)
}

// DescribeInstances mocks base method.
func (m *MockEcsClient) DescribeInstances(arg0 *ecs.DescribeInstancesRequest) (*ecs.DescribeInstancesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstances", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstancesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstances indicates an expected call of DescribeInstances.
func (mr *MockEcsClientMockRecorder) DescribeInstances(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstances", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstances), arg0)
}

// DescribeInstancesFullStatus mocks base method.
func (m *MockEcsClient) DescribeInstancesFullStatus(arg0 *ecs.DescribeInstancesFullStatusRequest) (*ecs.DescribeInstancesFullStatusResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstancesFullStatus", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInstancesFullStatusResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstancesFullStatus indicates an expected call of DescribeInstancesFullStatus.
func (mr *MockEcsClientMockRecorder) DescribeInstancesFullStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstancesFullStatus", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstancesFullStatus), arg0)
}

// DescribeInstancesFullStatusWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstancesFullStatusWithCallback(arg0 *ecs.DescribeInstancesFullStatusRequest, arg1 func(*ecs.DescribeInstancesFullStatusResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstancesFullStatusWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstancesFullStatusWithCallback indicates an expected call of DescribeInstancesFullStatusWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstancesFullStatusWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstancesFullStatusWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstancesFullStatusWithCallback), arg0, arg1)
}

// DescribeInstancesFullStatusWithChan mocks base method.
func (m *MockEcsClient) DescribeInstancesFullStatusWithChan(arg0 *ecs.DescribeInstancesFullStatusRequest) (<-chan *ecs.DescribeInstancesFullStatusResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstancesFullStatusWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstancesFullStatusResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstancesFullStatusWithChan indicates an expected call of DescribeInstancesFullStatusWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstancesFullStatusWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstancesFullStatusWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstancesFullStatusWithChan), arg0)
}

// DescribeInstancesWithCallback mocks base method.
func (m *MockEcsClient) DescribeInstancesWithCallback(arg0 *ecs.DescribeInstancesRequest, arg1 func(*ecs.DescribeInstancesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstancesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInstancesWithCallback indicates an expected call of DescribeInstancesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInstancesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstancesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstancesWithCallback), arg0, arg1)
}

// DescribeInstancesWithChan mocks base method.
func (m *MockEcsClient) DescribeInstancesWithChan(arg0 *ecs.DescribeInstancesRequest) (<-chan *ecs.DescribeInstancesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstancesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInstancesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInstancesWithChan indicates an expected call of DescribeInstancesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInstancesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstancesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInstancesWithChan), arg0)
}

// DescribeInvocationResults mocks base method.
func (m *MockEcsClient) DescribeInvocationResults(arg0 *ecs.DescribeInvocationResultsRequest) (*ecs.DescribeInvocationResultsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInvocationResults", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInvocationResultsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInvocationResults indicates an expected call of DescribeInvocationResults.
func (mr *MockEcsClientMockRecorder) DescribeInvocationResults(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInvocationResults", reflect.TypeOf((*MockEcsClient)(nil).DescribeInvocationResults), arg0)
}

// DescribeInvocationResultsWithCallback mocks base method.
func (m *MockEcsClient) DescribeInvocationResultsWithCallback(arg0 *ecs.DescribeInvocationResultsRequest, arg1 func(*ecs.DescribeInvocationResultsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInvocationResultsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInvocationResultsWithCallback indicates an expected call of DescribeInvocationResultsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInvocationResultsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInvocationResultsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInvocationResultsWithCallback), arg0, arg1)
}

// DescribeInvocationResultsWithChan mocks base method.
func (m *MockEcsClient) DescribeInvocationResultsWithChan(arg0 *ecs.DescribeInvocationResultsRequest) (<-chan *ecs.DescribeInvocationResultsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInvocationResultsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInvocationResultsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInvocationResultsWithChan indicates an expected call of DescribeInvocationResultsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInvocationResultsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInvocationResultsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInvocationResultsWithChan), arg0)
}

// DescribeInvocations mocks base method.
func (m *MockEcsClient) DescribeInvocations(arg0 *ecs.DescribeInvocationsRequest) (*ecs.DescribeInvocationsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInvocations", arg0)
	ret0, _ := ret[0].(*ecs.DescribeInvocationsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInvocations indicates an expected call of DescribeInvocations.
func (mr *MockEcsClientMockRecorder) DescribeInvocations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInvocations", reflect.TypeOf((*MockEcsClient)(nil).DescribeInvocations), arg0)
}

// DescribeInvocationsWithCallback mocks base method.
func (m *MockEcsClient) DescribeInvocationsWithCallback(arg0 *ecs.DescribeInvocationsRequest, arg1 func(*ecs.DescribeInvocationsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInvocationsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeInvocationsWithCallback indicates an expected call of DescribeInvocationsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeInvocationsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInvocationsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeInvocationsWithCallback), arg0, arg1)
}

// DescribeInvocationsWithChan mocks base method.
func (m *MockEcsClient) DescribeInvocationsWithChan(arg0 *ecs.DescribeInvocationsRequest) (<-chan *ecs.DescribeInvocationsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInvocationsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeInvocationsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeInvocationsWithChan indicates an expected call of DescribeInvocationsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeInvocationsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInvocationsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeInvocationsWithChan), arg0)
}

// DescribeKeyPairs mocks base method.
func (m *MockEcsClient) DescribeKeyPairs(arg0 *ecs.DescribeKeyPairsRequest) (*ecs.DescribeKeyPairsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeKeyPairs", arg0)
	ret0, _ := ret[0].(*ecs.DescribeKeyPairsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeKeyPairs indicates an expected call of DescribeKeyPairs.
func (mr *MockEcsClientMockRecorder) DescribeKeyPairs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeKeyPairs", reflect.TypeOf((*MockEcsClient)(nil).DescribeKeyPairs), arg0)
}

// DescribeKeyPairsWithCallback mocks base method.
func (m *MockEcsClient) DescribeKeyPairsWithCallback(arg0 *ecs.DescribeKeyPairsRequest, arg1 func(*ecs.DescribeKeyPairsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeKeyPairsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeKeyPairsWithCallback indicates an expected call of DescribeKeyPairsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeKeyPairsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeKeyPairsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeKeyPairsWithCallback), arg0, arg1)
}

// DescribeKeyPairsWithChan mocks base method.
func (m *MockEcsClient) DescribeKeyPairsWithChan(arg0 *ecs.DescribeKeyPairsRequest) (<-chan *ecs.DescribeKeyPairsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeKeyPairsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeKeyPairsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeKeyPairsWithChan indicates an expected call of DescribeKeyPairsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeKeyPairsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeKeyPairsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeKeyPairsWithChan), arg0)
}

// DescribeLaunchTemplateVersions mocks base method.
func (m *MockEcsClient) DescribeLaunchTemplateVersions(arg0 *ecs.DescribeLaunchTemplateVersionsRequest) (*ecs.DescribeLaunchTemplateVersionsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeLaunchTemplateVersions", arg0)
	ret0, _ := ret[0].(*ecs.DescribeLaunchTemplateVersionsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeLaunchTemplateVersions indicates an expected call of DescribeLaunchTemplateVersions.
func (mr *MockEcsClientMockRecorder) DescribeLaunchTemplateVersions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeLaunchTemplateVersions", reflect.TypeOf((*MockEcsClient)(nil).DescribeLaunchTemplateVersions), arg0)
}

// DescribeLaunchTemplateVersionsWithCallback mocks base method.
func (m *MockEcsClient) DescribeLaunchTemplateVersionsWithCallback(arg0 *ecs.DescribeLaunchTemplateVersionsRequest, arg1 func(*ecs.DescribeLaunchTemplateVersionsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeLaunchTemplateVersionsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeLaunchTemplateVersionsWithCallback indicates an expected call of DescribeLaunchTemplateVersionsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeLaunchTemplateVersionsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeLaunchTemplateVersionsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeLaunchTemplateVersionsWithCallback), arg0, arg1)
}

// DescribeLaunchTemplateVersionsWithChan mocks base method.
func (m *MockEcsClient) DescribeLaunchTemplateVersionsWithChan(arg0 *ecs.DescribeLaunchTemplateVersionsRequest) (<-chan *ecs.DescribeLaunchTemplateVersionsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeLaunchTemplateVersionsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeLaunchTemplateVersionsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeLaunchTemplateVersionsWithChan indicates an expected call of DescribeLaunchTemplateVersionsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeLaunchTemplateVersionsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeLaunchTemplateVersionsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeLaunchTemplateVersionsWithChan), arg0)
}

// DescribeLaunchTemplates mocks base method.
func (m *MockEcsClient) DescribeLaunchTemplates(arg0 *ecs.DescribeLaunchTemplatesRequest) (*ecs.DescribeLaunchTemplatesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeLaunchTemplates", arg0)
	ret0, _ := ret[0].(*ecs.DescribeLaunchTemplatesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeLaunchTemplates indicates an expected call of DescribeLaunchTemplates.
func (mr *MockEcsClientMockRecorder) DescribeLaunchTemplates(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeLaunchTemplates", reflect.TypeOf((*MockEcsClient)(nil).DescribeLaunchTemplates), arg0)
}

// DescribeLaunchTemplatesWithCallback mocks base method.
func (m *MockEcsClient) DescribeLaunchTemplatesWithCallback(arg0 *ecs.DescribeLaunchTemplatesRequest, arg1 func(*ecs.DescribeLaunchTemplatesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeLaunchTemplatesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeLaunchTemplatesWithCallback indicates an expected call of DescribeLaunchTemplatesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeLaunchTemplatesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeLaunchTemplatesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeLaunchTemplatesWithCallback), arg0, arg1)
}

// DescribeLaunchTemplatesWithChan mocks base method.
func (m *MockEcsClient) DescribeLaunchTemplatesWithChan(arg0 *ecs.DescribeLaunchTemplatesRequest) (<-chan *ecs.DescribeLaunchTemplatesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeLaunchTemplatesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeLaunchTemplatesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeLaunchTemplatesWithChan indicates an expected call of DescribeLaunchTemplatesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeLaunchTemplatesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeLaunchTemplatesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeLaunchTemplatesWithChan), arg0)
}

// DescribeLimitation mocks base method.
func (m *MockEcsClient) DescribeLimitation(arg0 *ecs.DescribeLimitationRequest) (*ecs.DescribeLimitationResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeLimitation", arg0)
	ret0, _ := ret[0].(*ecs.DescribeLimitationResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeLimitation indicates an expected call of DescribeLimitation.
func (mr *MockEcsClientMockRecorder) DescribeLimitation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeLimitation", reflect.TypeOf((*MockEcsClient)(nil).DescribeLimitation), arg0)
}

// DescribeLimitationWithCallback mocks base method.
func (m *MockEcsClient) DescribeLimitationWithCallback(arg0 *ecs.DescribeLimitationRequest, arg1 func(*ecs.DescribeLimitationResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeLimitationWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeLimitationWithCallback indicates an expected call of DescribeLimitationWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeLimitationWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeLimitationWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeLimitationWithCallback), arg0, arg1)
}

// DescribeLimitationWithChan mocks base method.
func (m *MockEcsClient) DescribeLimitationWithChan(arg0 *ecs.DescribeLimitationRequest) (<-chan *ecs.DescribeLimitationResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeLimitationWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeLimitationResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeLimitationWithChan indicates an expected call of DescribeLimitationWithChan.
func (mr *MockEcsClientMockRecorder) DescribeLimitationWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeLimitationWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeLimitationWithChan), arg0)
}

// DescribeManagedInstances mocks base method.
func (m *MockEcsClient) DescribeManagedInstances(arg0 *ecs.DescribeManagedInstancesRequest) (*ecs.DescribeManagedInstancesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeManagedInstances", arg0)
	ret0, _ := ret[0].(*ecs.DescribeManagedInstancesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeManagedInstances indicates an expected call of DescribeManagedInstances.
func (mr *MockEcsClientMockRecorder) DescribeManagedInstances(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeManagedInstances", reflect.TypeOf((*MockEcsClient)(nil).DescribeManagedInstances), arg0)
}

// DescribeManagedInstancesWithCallback mocks base method.
func (m *MockEcsClient) DescribeManagedInstancesWithCallback(arg0 *ecs.DescribeManagedInstancesRequest, arg1 func(*ecs.DescribeManagedInstancesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeManagedInstancesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeManagedInstancesWithCallback indicates an expected call of DescribeManagedInstancesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeManagedInstancesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeManagedInstancesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeManagedInstancesWithCallback), arg0, arg1)
}

// DescribeManagedInstancesWithChan mocks base method.
func (m *MockEcsClient) DescribeManagedInstancesWithChan(arg0 *ecs.DescribeManagedInstancesRequest) (<-chan *ecs.DescribeManagedInstancesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeManagedInstancesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeManagedInstancesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeManagedInstancesWithChan indicates an expected call of DescribeManagedInstancesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeManagedInstancesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeManagedInstancesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeManagedInstancesWithChan), arg0)
}

// DescribeNatGateways mocks base method.
func (m *MockEcsClient) DescribeNatGateways(arg0 *ecs.DescribeNatGatewaysRequest) (*ecs.DescribeNatGatewaysResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNatGateways", arg0)
	ret0, _ := ret[0].(*ecs.DescribeNatGatewaysResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeNatGateways indicates an expected call of DescribeNatGateways.
func (mr *MockEcsClientMockRecorder) DescribeNatGateways(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNatGateways", reflect.TypeOf((*MockEcsClient)(nil).DescribeNatGateways), arg0)
}

// DescribeNatGatewaysWithCallback mocks base method.
func (m *MockEcsClient) DescribeNatGatewaysWithCallback(arg0 *ecs.DescribeNatGatewaysRequest, arg1 func(*ecs.DescribeNatGatewaysResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNatGatewaysWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeNatGatewaysWithCallback indicates an expected call of DescribeNatGatewaysWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeNatGatewaysWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNatGatewaysWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeNatGatewaysWithCallback), arg0, arg1)
}

// DescribeNatGatewaysWithChan mocks base method.
func (m *MockEcsClient) DescribeNatGatewaysWithChan(arg0 *ecs.DescribeNatGatewaysRequest) (<-chan *ecs.DescribeNatGatewaysResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNatGatewaysWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeNatGatewaysResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeNatGatewaysWithChan indicates an expected call of DescribeNatGatewaysWithChan.
func (mr *MockEcsClientMockRecorder) DescribeNatGatewaysWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNatGatewaysWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeNatGatewaysWithChan), arg0)
}

// DescribeNetworkInterfaceAttribute mocks base method.
func (m *MockEcsClient) DescribeNetworkInterfaceAttribute(arg0 *ecs.DescribeNetworkInterfaceAttributeRequest) (*ecs.DescribeNetworkInterfaceAttributeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNetworkInterfaceAttribute", arg0)
	ret0, _ := ret[0].(*ecs.DescribeNetworkInterfaceAttributeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeNetworkInterfaceAttribute indicates an expected call of DescribeNetworkInterfaceAttribute.
func (mr *MockEcsClientMockRecorder) DescribeNetworkInterfaceAttribute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNetworkInterfaceAttribute", reflect.TypeOf((*MockEcsClient)(nil).DescribeNetworkInterfaceAttribute), arg0)
}

// DescribeNetworkInterfaceAttributeWithCallback mocks base method.
func (m *MockEcsClient) DescribeNetworkInterfaceAttributeWithCallback(arg0 *ecs.DescribeNetworkInterfaceAttributeRequest, arg1 func(*ecs.DescribeNetworkInterfaceAttributeResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNetworkInterfaceAttributeWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeNetworkInterfaceAttributeWithCallback indicates an expected call of DescribeNetworkInterfaceAttributeWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeNetworkInterfaceAttributeWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNetworkInterfaceAttributeWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeNetworkInterfaceAttributeWithCallback), arg0, arg1)
}

// DescribeNetworkInterfaceAttributeWithChan mocks base method.
func (m *MockEcsClient) DescribeNetworkInterfaceAttributeWithChan(arg0 *ecs.DescribeNetworkInterfaceAttributeRequest) (<-chan *ecs.DescribeNetworkInterfaceAttributeResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNetworkInterfaceAttributeWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeNetworkInterfaceAttributeResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeNetworkInterfaceAttributeWithChan indicates an expected call of DescribeNetworkInterfaceAttributeWithChan.
func (mr *MockEcsClientMockRecorder) DescribeNetworkInterfaceAttributeWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNetworkInterfaceAttributeWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeNetworkInterfaceAttributeWithChan), arg0)
}

// DescribeNetworkInterfacePermissions mocks base method.
func (m *MockEcsClient) DescribeNetworkInterfacePermissions(arg0 *ecs.DescribeNetworkInterfacePermissionsRequest) (*ecs.DescribeNetworkInterfacePermissionsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNetworkInterfacePermissions", arg0)
	ret0, _ := ret[0].(*ecs.DescribeNetworkInterfacePermissionsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeNetworkInterfacePermissions indicates an expected call of DescribeNetworkInterfacePermissions.
func (mr *MockEcsClientMockRecorder) DescribeNetworkInterfacePermissions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNetworkInterfacePermissions", reflect.TypeOf((*MockEcsClient)(nil).DescribeNetworkInterfacePermissions), arg0)
}

// DescribeNetworkInterfacePermissionsWithCallback mocks base method.
func (m *MockEcsClient) DescribeNetworkInterfacePermissionsWithCallback(arg0 *ecs.DescribeNetworkInterfacePermissionsRequest, arg1 func(*ecs.DescribeNetworkInterfacePermissionsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNetworkInterfacePermissionsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeNetworkInterfacePermissionsWithCallback indicates an expected call of DescribeNetworkInterfacePermissionsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeNetworkInterfacePermissionsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNetworkInterfacePermissionsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeNetworkInterfacePermissionsWithCallback), arg0, arg1)
}

// DescribeNetworkInterfacePermissionsWithChan mocks base method.
func (m *MockEcsClient) DescribeNetworkInterfacePermissionsWithChan(arg0 *ecs.DescribeNetworkInterfacePermissionsRequest) (<-chan *ecs.DescribeNetworkInterfacePermissionsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNetworkInterfacePermissionsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeNetworkInterfacePermissionsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeNetworkInterfacePermissionsWithChan indicates an expected call of DescribeNetworkInterfacePermissionsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeNetworkInterfacePermissionsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNetworkInterfacePermissionsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeNetworkInterfacePermissionsWithChan), arg0)
}

// DescribeNetworkInterfaces mocks base method.
func (m *MockEcsClient) DescribeNetworkInterfaces(arg0 *ecs.DescribeNetworkInterfacesRequest) (*ecs.DescribeNetworkInterfacesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNetworkInterfaces", arg0)
	ret0, _ := ret[0].(*ecs.DescribeNetworkInterfacesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeNetworkInterfaces indicates an expected call of DescribeNetworkInterfaces.
func (mr *MockEcsClientMockRecorder) DescribeNetworkInterfaces(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNetworkInterfaces", reflect.TypeOf((*MockEcsClient)(nil).DescribeNetworkInterfaces), arg0)
}

// DescribeNetworkInterfacesWithCallback mocks base method.
func (m *MockEcsClient) DescribeNetworkInterfacesWithCallback(arg0 *ecs.DescribeNetworkInterfacesRequest, arg1 func(*ecs.DescribeNetworkInterfacesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNetworkInterfacesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeNetworkInterfacesWithCallback indicates an expected call of DescribeNetworkInterfacesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeNetworkInterfacesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNetworkInterfacesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeNetworkInterfacesWithCallback), arg0, arg1)
}

// DescribeNetworkInterfacesWithChan mocks base method.
func (m *MockEcsClient) DescribeNetworkInterfacesWithChan(arg0 *ecs.DescribeNetworkInterfacesRequest) (<-chan *ecs.DescribeNetworkInterfacesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNetworkInterfacesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeNetworkInterfacesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeNetworkInterfacesWithChan indicates an expected call of DescribeNetworkInterfacesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeNetworkInterfacesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNetworkInterfacesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeNetworkInterfacesWithChan), arg0)
}

// DescribeNewProjectEipMonitorData mocks base method.
func (m *MockEcsClient) DescribeNewProjectEipMonitorData(arg0 *ecs.DescribeNewProjectEipMonitorDataRequest) (*ecs.DescribeNewProjectEipMonitorDataResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNewProjectEipMonitorData", arg0)
	ret0, _ := ret[0].(*ecs.DescribeNewProjectEipMonitorDataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeNewProjectEipMonitorData indicates an expected call of DescribeNewProjectEipMonitorData.
func (mr *MockEcsClientMockRecorder) DescribeNewProjectEipMonitorData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNewProjectEipMonitorData", reflect.TypeOf((*MockEcsClient)(nil).DescribeNewProjectEipMonitorData), arg0)
}

// DescribeNewProjectEipMonitorDataWithCallback mocks base method.
func (m *MockEcsClient) DescribeNewProjectEipMonitorDataWithCallback(arg0 *ecs.DescribeNewProjectEipMonitorDataRequest, arg1 func(*ecs.DescribeNewProjectEipMonitorDataResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNewProjectEipMonitorDataWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeNewProjectEipMonitorDataWithCallback indicates an expected call of DescribeNewProjectEipMonitorDataWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeNewProjectEipMonitorDataWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNewProjectEipMonitorDataWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeNewProjectEipMonitorDataWithCallback), arg0, arg1)
}

// DescribeNewProjectEipMonitorDataWithChan mocks base method.
func (m *MockEcsClient) DescribeNewProjectEipMonitorDataWithChan(arg0 *ecs.DescribeNewProjectEipMonitorDataRequest) (<-chan *ecs.DescribeNewProjectEipMonitorDataResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNewProjectEipMonitorDataWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeNewProjectEipMonitorDataResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeNewProjectEipMonitorDataWithChan indicates an expected call of DescribeNewProjectEipMonitorDataWithChan.
func (mr *MockEcsClientMockRecorder) DescribeNewProjectEipMonitorDataWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNewProjectEipMonitorDataWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeNewProjectEipMonitorDataWithChan), arg0)
}

// DescribePhysicalConnections mocks base method.
func (m *MockEcsClient) DescribePhysicalConnections(arg0 *ecs.DescribePhysicalConnectionsRequest) (*ecs.DescribePhysicalConnectionsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePhysicalConnections", arg0)
	ret0, _ := ret[0].(*ecs.DescribePhysicalConnectionsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribePhysicalConnections indicates an expected call of DescribePhysicalConnections.
func (mr *MockEcsClientMockRecorder) DescribePhysicalConnections(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePhysicalConnections", reflect.TypeOf((*MockEcsClient)(nil).DescribePhysicalConnections), arg0)
}

// DescribePhysicalConnectionsWithCallback mocks base method.
func (m *MockEcsClient) DescribePhysicalConnectionsWithCallback(arg0 *ecs.DescribePhysicalConnectionsRequest, arg1 func(*ecs.DescribePhysicalConnectionsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePhysicalConnectionsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribePhysicalConnectionsWithCallback indicates an expected call of DescribePhysicalConnectionsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribePhysicalConnectionsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePhysicalConnectionsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribePhysicalConnectionsWithCallback), arg0, arg1)
}

// DescribePhysicalConnectionsWithChan mocks base method.
func (m *MockEcsClient) DescribePhysicalConnectionsWithChan(arg0 *ecs.DescribePhysicalConnectionsRequest) (<-chan *ecs.DescribePhysicalConnectionsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePhysicalConnectionsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribePhysicalConnectionsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribePhysicalConnectionsWithChan indicates an expected call of DescribePhysicalConnectionsWithChan.
func (mr *MockEcsClientMockRecorder) DescribePhysicalConnectionsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePhysicalConnectionsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribePhysicalConnectionsWithChan), arg0)
}

// DescribePrefixListAssociations mocks base method.
func (m *MockEcsClient) DescribePrefixListAssociations(arg0 *ecs.DescribePrefixListAssociationsRequest) (*ecs.DescribePrefixListAssociationsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePrefixListAssociations", arg0)
	ret0, _ := ret[0].(*ecs.DescribePrefixListAssociationsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribePrefixListAssociations indicates an expected call of DescribePrefixListAssociations.
func (mr *MockEcsClientMockRecorder) DescribePrefixListAssociations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePrefixListAssociations", reflect.TypeOf((*MockEcsClient)(nil).DescribePrefixListAssociations), arg0)
}

// DescribePrefixListAssociationsWithCallback mocks base method.
func (m *MockEcsClient) DescribePrefixListAssociationsWithCallback(arg0 *ecs.DescribePrefixListAssociationsRequest, arg1 func(*ecs.DescribePrefixListAssociationsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePrefixListAssociationsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribePrefixListAssociationsWithCallback indicates an expected call of DescribePrefixListAssociationsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribePrefixListAssociationsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePrefixListAssociationsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribePrefixListAssociationsWithCallback), arg0, arg1)
}

// DescribePrefixListAssociationsWithChan mocks base method.
func (m *MockEcsClient) DescribePrefixListAssociationsWithChan(arg0 *ecs.DescribePrefixListAssociationsRequest) (<-chan *ecs.DescribePrefixListAssociationsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePrefixListAssociationsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribePrefixListAssociationsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribePrefixListAssociationsWithChan indicates an expected call of DescribePrefixListAssociationsWithChan.
func (mr *MockEcsClientMockRecorder) DescribePrefixListAssociationsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePrefixListAssociationsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribePrefixListAssociationsWithChan), arg0)
}

// DescribePrefixListAttributes mocks base method.
func (m *MockEcsClient) DescribePrefixListAttributes(arg0 *ecs.DescribePrefixListAttributesRequest) (*ecs.DescribePrefixListAttributesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePrefixListAttributes", arg0)
	ret0, _ := ret[0].(*ecs.DescribePrefixListAttributesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribePrefixListAttributes indicates an expected call of DescribePrefixListAttributes.
func (mr *MockEcsClientMockRecorder) DescribePrefixListAttributes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePrefixListAttributes", reflect.TypeOf((*MockEcsClient)(nil).DescribePrefixListAttributes), arg0)
}

// DescribePrefixListAttributesWithCallback mocks base method.
func (m *MockEcsClient) DescribePrefixListAttributesWithCallback(arg0 *ecs.DescribePrefixListAttributesRequest, arg1 func(*ecs.DescribePrefixListAttributesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePrefixListAttributesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribePrefixListAttributesWithCallback indicates an expected call of DescribePrefixListAttributesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribePrefixListAttributesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePrefixListAttributesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribePrefixListAttributesWithCallback), arg0, arg1)
}

// DescribePrefixListAttributesWithChan mocks base method.
func (m *MockEcsClient) DescribePrefixListAttributesWithChan(arg0 *ecs.DescribePrefixListAttributesRequest) (<-chan *ecs.DescribePrefixListAttributesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePrefixListAttributesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribePrefixListAttributesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribePrefixListAttributesWithChan indicates an expected call of DescribePrefixListAttributesWithChan.
func (mr *MockEcsClientMockRecorder) DescribePrefixListAttributesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePrefixListAttributesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribePrefixListAttributesWithChan), arg0)
}

// DescribePrefixLists mocks base method.
func (m *MockEcsClient) DescribePrefixLists(arg0 *ecs.DescribePrefixListsRequest) (*ecs.DescribePrefixListsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePrefixLists", arg0)
	ret0, _ := ret[0].(*ecs.DescribePrefixListsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribePrefixLists indicates an expected call of DescribePrefixLists.
func (mr *MockEcsClientMockRecorder) DescribePrefixLists(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePrefixLists", reflect.TypeOf((*MockEcsClient)(nil).DescribePrefixLists), arg0)
}

// DescribePrefixListsWithCallback mocks base method.
func (m *MockEcsClient) DescribePrefixListsWithCallback(arg0 *ecs.DescribePrefixListsRequest, arg1 func(*ecs.DescribePrefixListsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePrefixListsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribePrefixListsWithCallback indicates an expected call of DescribePrefixListsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribePrefixListsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePrefixListsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribePrefixListsWithCallback), arg0, arg1)
}

// DescribePrefixListsWithChan mocks base method.
func (m *MockEcsClient) DescribePrefixListsWithChan(arg0 *ecs.DescribePrefixListsRequest) (<-chan *ecs.DescribePrefixListsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePrefixListsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribePrefixListsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribePrefixListsWithChan indicates an expected call of DescribePrefixListsWithChan.
func (mr *MockEcsClientMockRecorder) DescribePrefixListsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePrefixListsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribePrefixListsWithChan), arg0)
}

// DescribePrice mocks base method.
func (m *MockEcsClient) DescribePrice(arg0 *ecs.DescribePriceRequest) (*ecs.DescribePriceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePrice", arg0)
	ret0, _ := ret[0].(*ecs.DescribePriceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribePrice indicates an expected call of DescribePrice.
func (mr *MockEcsClientMockRecorder) DescribePrice(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePrice", reflect.TypeOf((*MockEcsClient)(nil).DescribePrice), arg0)
}

// DescribePriceWithCallback mocks base method.
func (m *MockEcsClient) DescribePriceWithCallback(arg0 *ecs.DescribePriceRequest, arg1 func(*ecs.DescribePriceResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePriceWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribePriceWithCallback indicates an expected call of DescribePriceWithCallback.
func (mr *MockEcsClientMockRecorder) DescribePriceWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePriceWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribePriceWithCallback), arg0, arg1)
}

// DescribePriceWithChan mocks base method.
func (m *MockEcsClient) DescribePriceWithChan(arg0 *ecs.DescribePriceRequest) (<-chan *ecs.DescribePriceResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribePriceWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribePriceResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribePriceWithChan indicates an expected call of DescribePriceWithChan.
func (mr *MockEcsClientMockRecorder) DescribePriceWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribePriceWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribePriceWithChan), arg0)
}

// DescribeRecommendInstanceType mocks base method.
func (m *MockEcsClient) DescribeRecommendInstanceType(arg0 *ecs.DescribeRecommendInstanceTypeRequest) (*ecs.DescribeRecommendInstanceTypeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRecommendInstanceType", arg0)
	ret0, _ := ret[0].(*ecs.DescribeRecommendInstanceTypeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeRecommendInstanceType indicates an expected call of DescribeRecommendInstanceType.
func (mr *MockEcsClientMockRecorder) DescribeRecommendInstanceType(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRecommendInstanceType", reflect.TypeOf((*MockEcsClient)(nil).DescribeRecommendInstanceType), arg0)
}

// DescribeRecommendInstanceTypeWithCallback mocks base method.
func (m *MockEcsClient) DescribeRecommendInstanceTypeWithCallback(arg0 *ecs.DescribeRecommendInstanceTypeRequest, arg1 func(*ecs.DescribeRecommendInstanceTypeResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRecommendInstanceTypeWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeRecommendInstanceTypeWithCallback indicates an expected call of DescribeRecommendInstanceTypeWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeRecommendInstanceTypeWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRecommendInstanceTypeWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeRecommendInstanceTypeWithCallback), arg0, arg1)
}

// DescribeRecommendInstanceTypeWithChan mocks base method.
func (m *MockEcsClient) DescribeRecommendInstanceTypeWithChan(arg0 *ecs.DescribeRecommendInstanceTypeRequest) (<-chan *ecs.DescribeRecommendInstanceTypeResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRecommendInstanceTypeWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeRecommendInstanceTypeResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeRecommendInstanceTypeWithChan indicates an expected call of DescribeRecommendInstanceTypeWithChan.
func (mr *MockEcsClientMockRecorder) DescribeRecommendInstanceTypeWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRecommendInstanceTypeWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeRecommendInstanceTypeWithChan), arg0)
}

// DescribeRegions mocks base method.
func (m *MockEcsClient) DescribeRegions(arg0 *ecs.DescribeRegionsRequest) (*ecs.DescribeRegionsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRegions", arg0)
	ret0, _ := ret[0].(*ecs.DescribeRegionsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeRegions indicates an expected call of DescribeRegions.
func (mr *MockEcsClientMockRecorder) DescribeRegions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRegions", reflect.TypeOf((*MockEcsClient)(nil).DescribeRegions), arg0)
}

// DescribeRegionsWithCallback mocks base method.
func (m *MockEcsClient) DescribeRegionsWithCallback(arg0 *ecs.DescribeRegionsRequest, arg1 func(*ecs.DescribeRegionsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRegionsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeRegionsWithCallback indicates an expected call of DescribeRegionsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeRegionsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRegionsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeRegionsWithCallback), arg0, arg1)
}

// DescribeRegionsWithChan mocks base method.
func (m *MockEcsClient) DescribeRegionsWithChan(arg0 *ecs.DescribeRegionsRequest) (<-chan *ecs.DescribeRegionsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRegionsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeRegionsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeRegionsWithChan indicates an expected call of DescribeRegionsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeRegionsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRegionsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeRegionsWithChan), arg0)
}

// DescribeRenewalPrice mocks base method.
func (m *MockEcsClient) DescribeRenewalPrice(arg0 *ecs.DescribeRenewalPriceRequest) (*ecs.DescribeRenewalPriceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRenewalPrice", arg0)
	ret0, _ := ret[0].(*ecs.DescribeRenewalPriceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeRenewalPrice indicates an expected call of DescribeRenewalPrice.
func (mr *MockEcsClientMockRecorder) DescribeRenewalPrice(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRenewalPrice", reflect.TypeOf((*MockEcsClient)(nil).DescribeRenewalPrice), arg0)
}

// DescribeRenewalPriceWithCallback mocks base method.
func (m *MockEcsClient) DescribeRenewalPriceWithCallback(arg0 *ecs.DescribeRenewalPriceRequest, arg1 func(*ecs.DescribeRenewalPriceResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRenewalPriceWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeRenewalPriceWithCallback indicates an expected call of DescribeRenewalPriceWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeRenewalPriceWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRenewalPriceWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeRenewalPriceWithCallback), arg0, arg1)
}

// DescribeRenewalPriceWithChan mocks base method.
func (m *MockEcsClient) DescribeRenewalPriceWithChan(arg0 *ecs.DescribeRenewalPriceRequest) (<-chan *ecs.DescribeRenewalPriceResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRenewalPriceWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeRenewalPriceResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeRenewalPriceWithChan indicates an expected call of DescribeRenewalPriceWithChan.
func (mr *MockEcsClientMockRecorder) DescribeRenewalPriceWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRenewalPriceWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeRenewalPriceWithChan), arg0)
}

// DescribeReservedInstanceAutoRenewAttribute mocks base method.
func (m *MockEcsClient) DescribeReservedInstanceAutoRenewAttribute(arg0 *ecs.DescribeReservedInstanceAutoRenewAttributeRequest) (*ecs.DescribeReservedInstanceAutoRenewAttributeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeReservedInstanceAutoRenewAttribute", arg0)
	ret0, _ := ret[0].(*ecs.DescribeReservedInstanceAutoRenewAttributeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeReservedInstanceAutoRenewAttribute indicates an expected call of DescribeReservedInstanceAutoRenewAttribute.
func (mr *MockEcsClientMockRecorder) DescribeReservedInstanceAutoRenewAttribute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedInstanceAutoRenewAttribute", reflect.TypeOf((*MockEcsClient)(nil).DescribeReservedInstanceAutoRenewAttribute), arg0)
}

// DescribeReservedInstanceAutoRenewAttributeWithCallback mocks base method.
func (m *MockEcsClient) DescribeReservedInstanceAutoRenewAttributeWithCallback(arg0 *ecs.DescribeReservedInstanceAutoRenewAttributeRequest, arg1 func(*ecs.DescribeReservedInstanceAutoRenewAttributeResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeReservedInstanceAutoRenewAttributeWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeReservedInstanceAutoRenewAttributeWithCallback indicates an expected call of DescribeReservedInstanceAutoRenewAttributeWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeReservedInstanceAutoRenewAttributeWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedInstanceAutoRenewAttributeWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeReservedInstanceAutoRenewAttributeWithCallback), arg0, arg1)
}

// DescribeReservedInstanceAutoRenewAttributeWithChan mocks base method.
func (m *MockEcsClient) DescribeReservedInstanceAutoRenewAttributeWithChan(arg0 *ecs.DescribeReservedInstanceAutoRenewAttributeRequest) (<-chan *ecs.DescribeReservedInstanceAutoRenewAttributeResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeReservedInstanceAutoRenewAttributeWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeReservedInstanceAutoRenewAttributeResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeReservedInstanceAutoRenewAttributeWithChan indicates an expected call of DescribeReservedInstanceAutoRenewAttributeWithChan.
func (mr *MockEcsClientMockRecorder) DescribeReservedInstanceAutoRenewAttributeWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedInstanceAutoRenewAttributeWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeReservedInstanceAutoRenewAttributeWithChan), arg0)
}

// DescribeReservedInstances mocks base method.
func (m *MockEcsClient) DescribeReservedInstances(arg0 *ecs.DescribeReservedInstancesRequest) (*ecs.DescribeReservedInstancesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeReservedInstances", arg0)
	ret0, _ := ret[0].(*ecs.DescribeReservedInstancesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeReservedInstances indicates an expected call of DescribeReservedInstances.
func (mr *MockEcsClientMockRecorder) DescribeReservedInstances(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedInstances", reflect.TypeOf((*MockEcsClient)(nil).DescribeReservedInstances), arg0)
}

// DescribeReservedInstancesWithCallback mocks base method.
func (m *MockEcsClient) DescribeReservedInstancesWithCallback(arg0 *ecs.DescribeReservedInstancesRequest, arg1 func(*ecs.DescribeReservedInstancesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeReservedInstancesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeReservedInstancesWithCallback indicates an expected call of DescribeReservedInstancesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeReservedInstancesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedInstancesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeReservedInstancesWithCallback), arg0, arg1)
}

// DescribeReservedInstancesWithChan mocks base method.
func (m *MockEcsClient) DescribeReservedInstancesWithChan(arg0 *ecs.DescribeReservedInstancesRequest) (<-chan *ecs.DescribeReservedInstancesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeReservedInstancesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeReservedInstancesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeReservedInstancesWithChan indicates an expected call of DescribeReservedInstancesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeReservedInstancesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedInstancesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeReservedInstancesWithChan), arg0)
}

// DescribeResourceByTags mocks base method.
func (m *MockEcsClient) DescribeResourceByTags(arg0 *ecs.DescribeResourceByTagsRequest) (*ecs.DescribeResourceByTagsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeResourceByTags", arg0)
	ret0, _ := ret[0].(*ecs.DescribeResourceByTagsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeResourceByTags indicates an expected call of DescribeResourceByTags.
func (mr *MockEcsClientMockRecorder) DescribeResourceByTags(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeResourceByTags", reflect.TypeOf((*MockEcsClient)(nil).DescribeResourceByTags), arg0)
}

// DescribeResourceByTagsWithCallback mocks base method.
func (m *MockEcsClient) DescribeResourceByTagsWithCallback(arg0 *ecs.DescribeResourceByTagsRequest, arg1 func(*ecs.DescribeResourceByTagsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeResourceByTagsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeResourceByTagsWithCallback indicates an expected call of DescribeResourceByTagsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeResourceByTagsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeResourceByTagsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeResourceByTagsWithCallback), arg0, arg1)
}

// DescribeResourceByTagsWithChan mocks base method.
func (m *MockEcsClient) DescribeResourceByTagsWithChan(arg0 *ecs.DescribeResourceByTagsRequest) (<-chan *ecs.DescribeResourceByTagsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeResourceByTagsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeResourceByTagsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeResourceByTagsWithChan indicates an expected call of DescribeResourceByTagsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeResourceByTagsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeResourceByTagsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeResourceByTagsWithChan), arg0)
}

// DescribeResourcesModification mocks base method.
func (m *MockEcsClient) DescribeResourcesModification(arg0 *ecs.DescribeResourcesModificationRequest) (*ecs.DescribeResourcesModificationResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeResourcesModification", arg0)
	ret0, _ := ret[0].(*ecs.DescribeResourcesModificationResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeResourcesModification indicates an expected call of DescribeResourcesModification.
func (mr *MockEcsClientMockRecorder) DescribeResourcesModification(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeResourcesModification", reflect.TypeOf((*MockEcsClient)(nil).DescribeResourcesModification), arg0)
}

// DescribeResourcesModificationWithCallback mocks base method.
func (m *MockEcsClient) DescribeResourcesModificationWithCallback(arg0 *ecs.DescribeResourcesModificationRequest, arg1 func(*ecs.DescribeResourcesModificationResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeResourcesModificationWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeResourcesModificationWithCallback indicates an expected call of DescribeResourcesModificationWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeResourcesModificationWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeResourcesModificationWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeResourcesModificationWithCallback), arg0, arg1)
}

// DescribeResourcesModificationWithChan mocks base method.
func (m *MockEcsClient) DescribeResourcesModificationWithChan(arg0 *ecs.DescribeResourcesModificationRequest) (<-chan *ecs.DescribeResourcesModificationResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeResourcesModificationWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeResourcesModificationResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeResourcesModificationWithChan indicates an expected call of DescribeResourcesModificationWithChan.
func (mr *MockEcsClientMockRecorder) DescribeResourcesModificationWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeResourcesModificationWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeResourcesModificationWithChan), arg0)
}

// DescribeRouteTables mocks base method.
func (m *MockEcsClient) DescribeRouteTables(arg0 *ecs.DescribeRouteTablesRequest) (*ecs.DescribeRouteTablesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRouteTables", arg0)
	ret0, _ := ret[0].(*ecs.DescribeRouteTablesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeRouteTables indicates an expected call of DescribeRouteTables.
func (mr *MockEcsClientMockRecorder) DescribeRouteTables(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRouteTables", reflect.TypeOf((*MockEcsClient)(nil).DescribeRouteTables), arg0)
}

// DescribeRouteTablesWithCallback mocks base method.
func (m *MockEcsClient) DescribeRouteTablesWithCallback(arg0 *ecs.DescribeRouteTablesRequest, arg1 func(*ecs.DescribeRouteTablesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRouteTablesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeRouteTablesWithCallback indicates an expected call of DescribeRouteTablesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeRouteTablesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRouteTablesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeRouteTablesWithCallback), arg0, arg1)
}

// DescribeRouteTablesWithChan mocks base method.
func (m *MockEcsClient) DescribeRouteTablesWithChan(arg0 *ecs.DescribeRouteTablesRequest) (<-chan *ecs.DescribeRouteTablesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRouteTablesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeRouteTablesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeRouteTablesWithChan indicates an expected call of DescribeRouteTablesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeRouteTablesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRouteTablesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeRouteTablesWithChan), arg0)
}

// DescribeRouterInterfaces mocks base method.
func (m *MockEcsClient) DescribeRouterInterfaces(arg0 *ecs.DescribeRouterInterfacesRequest) (*ecs.DescribeRouterInterfacesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRouterInterfaces", arg0)
	ret0, _ := ret[0].(*ecs.DescribeRouterInterfacesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeRouterInterfaces indicates an expected call of DescribeRouterInterfaces.
func (mr *MockEcsClientMockRecorder) DescribeRouterInterfaces(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRouterInterfaces", reflect.TypeOf((*MockEcsClient)(nil).DescribeRouterInterfaces), arg0)
}

// DescribeRouterInterfacesWithCallback mocks base method.
func (m *MockEcsClient) DescribeRouterInterfacesWithCallback(arg0 *ecs.DescribeRouterInterfacesRequest, arg1 func(*ecs.DescribeRouterInterfacesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRouterInterfacesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeRouterInterfacesWithCallback indicates an expected call of DescribeRouterInterfacesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeRouterInterfacesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRouterInterfacesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeRouterInterfacesWithCallback), arg0, arg1)
}

// DescribeRouterInterfacesWithChan mocks base method.
func (m *MockEcsClient) DescribeRouterInterfacesWithChan(arg0 *ecs.DescribeRouterInterfacesRequest) (<-chan *ecs.DescribeRouterInterfacesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRouterInterfacesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeRouterInterfacesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeRouterInterfacesWithChan indicates an expected call of DescribeRouterInterfacesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeRouterInterfacesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRouterInterfacesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeRouterInterfacesWithChan), arg0)
}

// DescribeSecurityGroupAttribute mocks base method.
func (m *MockEcsClient) DescribeSecurityGroupAttribute(arg0 *ecs.DescribeSecurityGroupAttributeRequest) (*ecs.DescribeSecurityGroupAttributeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSecurityGroupAttribute", arg0)
	ret0, _ := ret[0].(*ecs.DescribeSecurityGroupAttributeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSecurityGroupAttribute indicates an expected call of DescribeSecurityGroupAttribute.
func (mr *MockEcsClientMockRecorder) DescribeSecurityGroupAttribute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSecurityGroupAttribute", reflect.TypeOf((*MockEcsClient)(nil).DescribeSecurityGroupAttribute), arg0)
}

// DescribeSecurityGroupAttributeWithCallback mocks base method.
func (m *MockEcsClient) DescribeSecurityGroupAttributeWithCallback(arg0 *ecs.DescribeSecurityGroupAttributeRequest, arg1 func(*ecs.DescribeSecurityGroupAttributeResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSecurityGroupAttributeWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeSecurityGroupAttributeWithCallback indicates an expected call of DescribeSecurityGroupAttributeWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeSecurityGroupAttributeWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSecurityGroupAttributeWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeSecurityGroupAttributeWithCallback), arg0, arg1)
}

// DescribeSecurityGroupAttributeWithChan mocks base method.
func (m *MockEcsClient) DescribeSecurityGroupAttributeWithChan(arg0 *ecs.DescribeSecurityGroupAttributeRequest) (<-chan *ecs.DescribeSecurityGroupAttributeResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSecurityGroupAttributeWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeSecurityGroupAttributeResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeSecurityGroupAttributeWithChan indicates an expected call of DescribeSecurityGroupAttributeWithChan.
func (mr *MockEcsClientMockRecorder) DescribeSecurityGroupAttributeWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSecurityGroupAttributeWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeSecurityGroupAttributeWithChan), arg0)
}

// DescribeSecurityGroupReferences mocks base method.
func (m *MockEcsClient) DescribeSecurityGroupReferences(arg0 *ecs.DescribeSecurityGroupReferencesRequest) (*ecs.DescribeSecurityGroupReferencesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSecurityGroupReferences", arg0)
	ret0, _ := ret[0].(*ecs.DescribeSecurityGroupReferencesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSecurityGroupReferences indicates an expected call of DescribeSecurityGroupReferences.
func (mr *MockEcsClientMockRecorder) DescribeSecurityGroupReferences(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSecurityGroupReferences", reflect.TypeOf((*MockEcsClient)(nil).DescribeSecurityGroupReferences), arg0)
}

// DescribeSecurityGroupReferencesWithCallback mocks base method.
func (m *MockEcsClient) DescribeSecurityGroupReferencesWithCallback(arg0 *ecs.DescribeSecurityGroupReferencesRequest, arg1 func(*ecs.DescribeSecurityGroupReferencesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSecurityGroupReferencesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeSecurityGroupReferencesWithCallback indicates an expected call of DescribeSecurityGroupReferencesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeSecurityGroupReferencesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSecurityGroupReferencesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeSecurityGroupReferencesWithCallback), arg0, arg1)
}

// DescribeSecurityGroupReferencesWithChan mocks base method.
func (m *MockEcsClient) DescribeSecurityGroupReferencesWithChan(arg0 *ecs.DescribeSecurityGroupReferencesRequest) (<-chan *ecs.DescribeSecurityGroupReferencesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSecurityGroupReferencesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeSecurityGroupReferencesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeSecurityGroupReferencesWithChan indicates an expected call of DescribeSecurityGroupReferencesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeSecurityGroupReferencesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSecurityGroupReferencesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeSecurityGroupReferencesWithChan), arg0)
}

// DescribeSecurityGroups mocks base method.
func (m *MockEcsClient) DescribeSecurityGroups(arg0 *ecs.DescribeSecurityGroupsRequest) (*ecs.DescribeSecurityGroupsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSecurityGroups", arg0)
	ret0, _ := ret[0].(*ecs.DescribeSecurityGroupsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSecurityGroups indicates an expected call of DescribeSecurityGroups.
func (mr *MockEcsClientMockRecorder) DescribeSecurityGroups(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSecurityGroups", reflect.TypeOf((*MockEcsClient)(nil).DescribeSecurityGroups), arg0)
}

// DescribeSecurityGroupsWithCallback mocks base method.
func (m *MockEcsClient) DescribeSecurityGroupsWithCallback(arg0 *ecs.DescribeSecurityGroupsRequest, arg1 func(*ecs.DescribeSecurityGroupsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSecurityGroupsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeSecurityGroupsWithCallback indicates an expected call of DescribeSecurityGroupsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeSecurityGroupsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSecurityGroupsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeSecurityGroupsWithCallback), arg0, arg1)
}

// DescribeSecurityGroupsWithChan mocks base method.
func (m *MockEcsClient) DescribeSecurityGroupsWithChan(arg0 *ecs.DescribeSecurityGroupsRequest) (<-chan *ecs.DescribeSecurityGroupsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSecurityGroupsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeSecurityGroupsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeSecurityGroupsWithChan indicates an expected call of DescribeSecurityGroupsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeSecurityGroupsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSecurityGroupsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeSecurityGroupsWithChan), arg0)
}

// DescribeSendFileResults mocks base method.
func (m *MockEcsClient) DescribeSendFileResults(arg0 *ecs.DescribeSendFileResultsRequest) (*ecs.DescribeSendFileResultsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSendFileResults", arg0)
	ret0, _ := ret[0].(*ecs.DescribeSendFileResultsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSendFileResults indicates an expected call of DescribeSendFileResults.
func (mr *MockEcsClientMockRecorder) DescribeSendFileResults(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSendFileResults", reflect.TypeOf((*MockEcsClient)(nil).DescribeSendFileResults), arg0)
}

// DescribeSendFileResultsWithCallback mocks base method.
func (m *MockEcsClient) DescribeSendFileResultsWithCallback(arg0 *ecs.DescribeSendFileResultsRequest, arg1 func(*ecs.DescribeSendFileResultsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSendFileResultsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeSendFileResultsWithCallback indicates an expected call of DescribeSendFileResultsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeSendFileResultsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSendFileResultsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeSendFileResultsWithCallback), arg0, arg1)
}

// DescribeSendFileResultsWithChan mocks base method.
func (m *MockEcsClient) DescribeSendFileResultsWithChan(arg0 *ecs.DescribeSendFileResultsRequest) (<-chan *ecs.DescribeSendFileResultsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSendFileResultsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeSendFileResultsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeSendFileResultsWithChan indicates an expected call of DescribeSendFileResultsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeSendFileResultsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSendFileResultsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeSendFileResultsWithChan), arg0)
}

// DescribeSnapshotGroups mocks base method.
func (m *MockEcsClient) DescribeSnapshotGroups(arg0 *ecs.DescribeSnapshotGroupsRequest) (*ecs.DescribeSnapshotGroupsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotGroups", arg0)
	ret0, _ := ret[0].(*ecs.DescribeSnapshotGroupsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSnapshotGroups indicates an expected call of DescribeSnapshotGroups.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotGroups(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotGroups", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotGroups), arg0)
}

// DescribeSnapshotGroupsWithCallback mocks base method.
func (m *MockEcsClient) DescribeSnapshotGroupsWithCallback(arg0 *ecs.DescribeSnapshotGroupsRequest, arg1 func(*ecs.DescribeSnapshotGroupsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotGroupsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeSnapshotGroupsWithCallback indicates an expected call of DescribeSnapshotGroupsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotGroupsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotGroupsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotGroupsWithCallback), arg0, arg1)
}

// DescribeSnapshotGroupsWithChan mocks base method.
func (m *MockEcsClient) DescribeSnapshotGroupsWithChan(arg0 *ecs.DescribeSnapshotGroupsRequest) (<-chan *ecs.DescribeSnapshotGroupsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotGroupsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeSnapshotGroupsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeSnapshotGroupsWithChan indicates an expected call of DescribeSnapshotGroupsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotGroupsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotGroupsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotGroupsWithChan), arg0)
}

// DescribeSnapshotLinks mocks base method.
func (m *MockEcsClient) DescribeSnapshotLinks(arg0 *ecs.DescribeSnapshotLinksRequest) (*ecs.DescribeSnapshotLinksResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotLinks", arg0)
	ret0, _ := ret[0].(*ecs.DescribeSnapshotLinksResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSnapshotLinks indicates an expected call of DescribeSnapshotLinks.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotLinks(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotLinks", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotLinks), arg0)
}

// DescribeSnapshotLinksWithCallback mocks base method.
func (m *MockEcsClient) DescribeSnapshotLinksWithCallback(arg0 *ecs.DescribeSnapshotLinksRequest, arg1 func(*ecs.DescribeSnapshotLinksResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotLinksWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeSnapshotLinksWithCallback indicates an expected call of DescribeSnapshotLinksWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotLinksWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotLinksWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotLinksWithCallback), arg0, arg1)
}

// DescribeSnapshotLinksWithChan mocks base method.
func (m *MockEcsClient) DescribeSnapshotLinksWithChan(arg0 *ecs.DescribeSnapshotLinksRequest) (<-chan *ecs.DescribeSnapshotLinksResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotLinksWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeSnapshotLinksResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeSnapshotLinksWithChan indicates an expected call of DescribeSnapshotLinksWithChan.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotLinksWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotLinksWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotLinksWithChan), arg0)
}

// DescribeSnapshotMonitorData mocks base method.
func (m *MockEcsClient) DescribeSnapshotMonitorData(arg0 *ecs.DescribeSnapshotMonitorDataRequest) (*ecs.DescribeSnapshotMonitorDataResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotMonitorData", arg0)
	ret0, _ := ret[0].(*ecs.DescribeSnapshotMonitorDataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSnapshotMonitorData indicates an expected call of DescribeSnapshotMonitorData.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotMonitorData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotMonitorData", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotMonitorData), arg0)
}

// DescribeSnapshotMonitorDataWithCallback mocks base method.
func (m *MockEcsClient) DescribeSnapshotMonitorDataWithCallback(arg0 *ecs.DescribeSnapshotMonitorDataRequest, arg1 func(*ecs.DescribeSnapshotMonitorDataResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotMonitorDataWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeSnapshotMonitorDataWithCallback indicates an expected call of DescribeSnapshotMonitorDataWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotMonitorDataWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotMonitorDataWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotMonitorDataWithCallback), arg0, arg1)
}

// DescribeSnapshotMonitorDataWithChan mocks base method.
func (m *MockEcsClient) DescribeSnapshotMonitorDataWithChan(arg0 *ecs.DescribeSnapshotMonitorDataRequest) (<-chan *ecs.DescribeSnapshotMonitorDataResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotMonitorDataWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeSnapshotMonitorDataResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeSnapshotMonitorDataWithChan indicates an expected call of DescribeSnapshotMonitorDataWithChan.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotMonitorDataWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotMonitorDataWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotMonitorDataWithChan), arg0)
}

// DescribeSnapshotPackage mocks base method.
func (m *MockEcsClient) DescribeSnapshotPackage(arg0 *ecs.DescribeSnapshotPackageRequest) (*ecs.DescribeSnapshotPackageResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotPackage", arg0)
	ret0, _ := ret[0].(*ecs.DescribeSnapshotPackageResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSnapshotPackage indicates an expected call of DescribeSnapshotPackage.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotPackage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotPackage", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotPackage), arg0)
}

// DescribeSnapshotPackageWithCallback mocks base method.
func (m *MockEcsClient) DescribeSnapshotPackageWithCallback(arg0 *ecs.DescribeSnapshotPackageRequest, arg1 func(*ecs.DescribeSnapshotPackageResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotPackageWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeSnapshotPackageWithCallback indicates an expected call of DescribeSnapshotPackageWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotPackageWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotPackageWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotPackageWithCallback), arg0, arg1)
}

// DescribeSnapshotPackageWithChan mocks base method.
func (m *MockEcsClient) DescribeSnapshotPackageWithChan(arg0 *ecs.DescribeSnapshotPackageRequest) (<-chan *ecs.DescribeSnapshotPackageResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotPackageWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeSnapshotPackageResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeSnapshotPackageWithChan indicates an expected call of DescribeSnapshotPackageWithChan.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotPackageWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotPackageWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotPackageWithChan), arg0)
}

// DescribeSnapshots mocks base method.
func (m *MockEcsClient) DescribeSnapshots(arg0 *ecs.DescribeSnapshotsRequest) (*ecs.DescribeSnapshotsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshots", arg0)
	ret0, _ := ret[0].(*ecs.DescribeSnapshotsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSnapshots indicates an expected call of DescribeSnapshots.
func (mr *MockEcsClientMockRecorder) DescribeSnapshots(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshots", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshots), arg0)
}

// DescribeSnapshotsUsage mocks base method.
func (m *MockEcsClient) DescribeSnapshotsUsage(arg0 *ecs.DescribeSnapshotsUsageRequest) (*ecs.DescribeSnapshotsUsageResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotsUsage", arg0)
	ret0, _ := ret[0].(*ecs.DescribeSnapshotsUsageResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSnapshotsUsage indicates an expected call of DescribeSnapshotsUsage.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotsUsage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotsUsage", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotsUsage), arg0)
}

// DescribeSnapshotsUsageWithCallback mocks base method.
func (m *MockEcsClient) DescribeSnapshotsUsageWithCallback(arg0 *ecs.DescribeSnapshotsUsageRequest, arg1 func(*ecs.DescribeSnapshotsUsageResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotsUsageWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeSnapshotsUsageWithCallback indicates an expected call of DescribeSnapshotsUsageWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotsUsageWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotsUsageWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotsUsageWithCallback), arg0, arg1)
}

// DescribeSnapshotsUsageWithChan mocks base method.
func (m *MockEcsClient) DescribeSnapshotsUsageWithChan(arg0 *ecs.DescribeSnapshotsUsageRequest) (<-chan *ecs.DescribeSnapshotsUsageResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotsUsageWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeSnapshotsUsageResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeSnapshotsUsageWithChan indicates an expected call of DescribeSnapshotsUsageWithChan.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotsUsageWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotsUsageWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotsUsageWithChan), arg0)
}

// DescribeSnapshotsWithCallback mocks base method.
func (m *MockEcsClient) DescribeSnapshotsWithCallback(arg0 *ecs.DescribeSnapshotsRequest, arg1 func(*ecs.DescribeSnapshotsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeSnapshotsWithCallback indicates an expected call of DescribeSnapshotsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotsWithCallback), arg0, arg1)
}

// DescribeSnapshotsWithChan mocks base method.
func (m *MockEcsClient) DescribeSnapshotsWithChan(arg0 *ecs.DescribeSnapshotsRequest) (<-chan *ecs.DescribeSnapshotsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSnapshotsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeSnapshotsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeSnapshotsWithChan indicates an expected call of DescribeSnapshotsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeSnapshotsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSnapshotsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeSnapshotsWithChan), arg0)
}

// DescribeSpotAdvice mocks base method.
func (m *MockEcsClient) DescribeSpotAdvice(arg0 *ecs.DescribeSpotAdviceRequest) (*ecs.DescribeSpotAdviceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSpotAdvice", arg0)
	ret0, _ := ret[0].(*ecs.DescribeSpotAdviceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSpotAdvice indicates an expected call of DescribeSpotAdvice.
func (mr *MockEcsClientMockRecorder) DescribeSpotAdvice(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSpotAdvice", reflect.TypeOf((*MockEcsClient)(nil).DescribeSpotAdvice), arg0)
}

// DescribeSpotAdviceWithCallback mocks base method.
func (m *MockEcsClient) DescribeSpotAdviceWithCallback(arg0 *ecs.DescribeSpotAdviceRequest, arg1 func(*ecs.DescribeSpotAdviceResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSpotAdviceWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeSpotAdviceWithCallback indicates an expected call of DescribeSpotAdviceWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeSpotAdviceWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSpotAdviceWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeSpotAdviceWithCallback), arg0, arg1)
}

// DescribeSpotAdviceWithChan mocks base method.
func (m *MockEcsClient) DescribeSpotAdviceWithChan(arg0 *ecs.DescribeSpotAdviceRequest) (<-chan *ecs.DescribeSpotAdviceResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSpotAdviceWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeSpotAdviceResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeSpotAdviceWithChan indicates an expected call of DescribeSpotAdviceWithChan.
func (mr *MockEcsClientMockRecorder) DescribeSpotAdviceWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSpotAdviceWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeSpotAdviceWithChan), arg0)
}

// DescribeSpotPriceHistory mocks base method.
func (m *MockEcsClient) DescribeSpotPriceHistory(arg0 *ecs.DescribeSpotPriceHistoryRequest) (*ecs.DescribeSpotPriceHistoryResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSpotPriceHistory", arg0)
	ret0, _ := ret[0].(*ecs.DescribeSpotPriceHistoryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSpotPriceHistory indicates an expected call of DescribeSpotPriceHistory.
func (mr *MockEcsClientMockRecorder) DescribeSpotPriceHistory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSpotPriceHistory", reflect.TypeOf((*MockEcsClient)(nil).DescribeSpotPriceHistory), arg0)
}

// DescribeSpotPriceHistoryWithCallback mocks base method.
func (m *MockEcsClient) DescribeSpotPriceHistoryWithCallback(arg0 *ecs.DescribeSpotPriceHistoryRequest, arg1 func(*ecs.DescribeSpotPriceHistoryResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSpotPriceHistoryWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeSpotPriceHistoryWithCallback indicates an expected call of DescribeSpotPriceHistoryWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeSpotPriceHistoryWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSpotPriceHistoryWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeSpotPriceHistoryWithCallback), arg0, arg1)
}

// DescribeSpotPriceHistoryWithChan mocks base method.
func (m *MockEcsClient) DescribeSpotPriceHistoryWithChan(arg0 *ecs.DescribeSpotPriceHistoryRequest) (<-chan *ecs.DescribeSpotPriceHistoryResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSpotPriceHistoryWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeSpotPriceHistoryResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeSpotPriceHistoryWithChan indicates an expected call of DescribeSpotPriceHistoryWithChan.
func (mr *MockEcsClientMockRecorder) DescribeSpotPriceHistoryWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSpotPriceHistoryWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeSpotPriceHistoryWithChan), arg0)
}

// DescribeStorageCapacityUnits mocks base method.
func (m *MockEcsClient) DescribeStorageCapacityUnits(arg0 *ecs.DescribeStorageCapacityUnitsRequest) (*ecs.DescribeStorageCapacityUnitsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeStorageCapacityUnits", arg0)
	ret0, _ := ret[0].(*ecs.DescribeStorageCapacityUnitsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeStorageCapacityUnits indicates an expected call of DescribeStorageCapacityUnits.
func (mr *MockEcsClientMockRecorder) DescribeStorageCapacityUnits(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeStorageCapacityUnits", reflect.TypeOf((*MockEcsClient)(nil).DescribeStorageCapacityUnits), arg0)
}

// DescribeStorageCapacityUnitsWithCallback mocks base method.
func (m *MockEcsClient) DescribeStorageCapacityUnitsWithCallback(arg0 *ecs.DescribeStorageCapacityUnitsRequest, arg1 func(*ecs.DescribeStorageCapacityUnitsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeStorageCapacityUnitsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeStorageCapacityUnitsWithCallback indicates an expected call of DescribeStorageCapacityUnitsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeStorageCapacityUnitsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeStorageCapacityUnitsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeStorageCapacityUnitsWithCallback), arg0, arg1)
}

// DescribeStorageCapacityUnitsWithChan mocks base method.
func (m *MockEcsClient) DescribeStorageCapacityUnitsWithChan(arg0 *ecs.DescribeStorageCapacityUnitsRequest) (<-chan *ecs.DescribeStorageCapacityUnitsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeStorageCapacityUnitsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeStorageCapacityUnitsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeStorageCapacityUnitsWithChan indicates an expected call of DescribeStorageCapacityUnitsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeStorageCapacityUnitsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeStorageCapacityUnitsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeStorageCapacityUnitsWithChan), arg0)
}

// DescribeStorageSetDetails mocks base method.
func (m *MockEcsClient) DescribeStorageSetDetails(arg0 *ecs.DescribeStorageSetDetailsRequest) (*ecs.DescribeStorageSetDetailsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeStorageSetDetails", arg0)
	ret0, _ := ret[0].(*ecs.DescribeStorageSetDetailsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeStorageSetDetails indicates an expected call of DescribeStorageSetDetails.
func (mr *MockEcsClientMockRecorder) DescribeStorageSetDetails(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeStorageSetDetails", reflect.TypeOf((*MockEcsClient)(nil).DescribeStorageSetDetails), arg0)
}

// DescribeStorageSetDetailsWithCallback mocks base method.
func (m *MockEcsClient) DescribeStorageSetDetailsWithCallback(arg0 *ecs.DescribeStorageSetDetailsRequest, arg1 func(*ecs.DescribeStorageSetDetailsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeStorageSetDetailsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeStorageSetDetailsWithCallback indicates an expected call of DescribeStorageSetDetailsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeStorageSetDetailsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeStorageSetDetailsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeStorageSetDetailsWithCallback), arg0, arg1)
}

// DescribeStorageSetDetailsWithChan mocks base method.
func (m *MockEcsClient) DescribeStorageSetDetailsWithChan(arg0 *ecs.DescribeStorageSetDetailsRequest) (<-chan *ecs.DescribeStorageSetDetailsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeStorageSetDetailsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeStorageSetDetailsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeStorageSetDetailsWithChan indicates an expected call of DescribeStorageSetDetailsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeStorageSetDetailsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeStorageSetDetailsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeStorageSetDetailsWithChan), arg0)
}

// DescribeStorageSets mocks base method.
func (m *MockEcsClient) DescribeStorageSets(arg0 *ecs.DescribeStorageSetsRequest) (*ecs.DescribeStorageSetsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeStorageSets", arg0)
	ret0, _ := ret[0].(*ecs.DescribeStorageSetsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeStorageSets indicates an expected call of DescribeStorageSets.
func (mr *MockEcsClientMockRecorder) DescribeStorageSets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeStorageSets", reflect.TypeOf((*MockEcsClient)(nil).DescribeStorageSets), arg0)
}

// DescribeStorageSetsWithCallback mocks base method.
func (m *MockEcsClient) DescribeStorageSetsWithCallback(arg0 *ecs.DescribeStorageSetsRequest, arg1 func(*ecs.DescribeStorageSetsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeStorageSetsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeStorageSetsWithCallback indicates an expected call of DescribeStorageSetsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeStorageSetsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeStorageSetsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeStorageSetsWithCallback), arg0, arg1)
}

// DescribeStorageSetsWithChan mocks base method.
func (m *MockEcsClient) DescribeStorageSetsWithChan(arg0 *ecs.DescribeStorageSetsRequest) (<-chan *ecs.DescribeStorageSetsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeStorageSetsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeStorageSetsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeStorageSetsWithChan indicates an expected call of DescribeStorageSetsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeStorageSetsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeStorageSetsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeStorageSetsWithChan), arg0)
}

// DescribeTags mocks base method.
func (m *MockEcsClient) DescribeTags(arg0 *ecs.DescribeTagsRequest) (*ecs.DescribeTagsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeTags", arg0)
	ret0, _ := ret[0].(*ecs.DescribeTagsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeTags indicates an expected call of DescribeTags.
func (mr *MockEcsClientMockRecorder) DescribeTags(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTags", reflect.TypeOf((*MockEcsClient)(nil).DescribeTags), arg0)
}

// DescribeTagsWithCallback mocks base method.
func (m *MockEcsClient) DescribeTagsWithCallback(arg0 *ecs.DescribeTagsRequest, arg1 func(*ecs.DescribeTagsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeTagsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeTagsWithCallback indicates an expected call of DescribeTagsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeTagsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTagsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeTagsWithCallback), arg0, arg1)
}

// DescribeTagsWithChan mocks base method.
func (m *MockEcsClient) DescribeTagsWithChan(arg0 *ecs.DescribeTagsRequest) (<-chan *ecs.DescribeTagsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeTagsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeTagsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeTagsWithChan indicates an expected call of DescribeTagsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeTagsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTagsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeTagsWithChan), arg0)
}

// DescribeTaskAttribute mocks base method.
func (m *MockEcsClient) DescribeTaskAttribute(arg0 *ecs.DescribeTaskAttributeRequest) (*ecs.DescribeTaskAttributeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeTaskAttribute", arg0)
	ret0, _ := ret[0].(*ecs.DescribeTaskAttributeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeTaskAttribute indicates an expected call of DescribeTaskAttribute.
func (mr *MockEcsClientMockRecorder) DescribeTaskAttribute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTaskAttribute", reflect.TypeOf((*MockEcsClient)(nil).DescribeTaskAttribute), arg0)
}

// DescribeTaskAttributeWithCallback mocks base method.
func (m *MockEcsClient) DescribeTaskAttributeWithCallback(arg0 *ecs.DescribeTaskAttributeRequest, arg1 func(*ecs.DescribeTaskAttributeResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeTaskAttributeWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeTaskAttributeWithCallback indicates an expected call of DescribeTaskAttributeWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeTaskAttributeWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTaskAttributeWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeTaskAttributeWithCallback), arg0, arg1)
}

// DescribeTaskAttributeWithChan mocks base method.
func (m *MockEcsClient) DescribeTaskAttributeWithChan(arg0 *ecs.DescribeTaskAttributeRequest) (<-chan *ecs.DescribeTaskAttributeResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeTaskAttributeWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeTaskAttributeResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeTaskAttributeWithChan indicates an expected call of DescribeTaskAttributeWithChan.
func (mr *MockEcsClientMockRecorder) DescribeTaskAttributeWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTaskAttributeWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeTaskAttributeWithChan), arg0)
}

// DescribeTasks mocks base method.
func (m *MockEcsClient) DescribeTasks(arg0 *ecs.DescribeTasksRequest) (*ecs.DescribeTasksResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeTasks", arg0)
	ret0, _ := ret[0].(*ecs.DescribeTasksResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeTasks indicates an expected call of DescribeTasks.
func (mr *MockEcsClientMockRecorder) DescribeTasks(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTasks", reflect.TypeOf((*MockEcsClient)(nil).DescribeTasks), arg0)
}

// DescribeTasksWithCallback mocks base method.
func (m *MockEcsClient) DescribeTasksWithCallback(arg0 *ecs.DescribeTasksRequest, arg1 func(*ecs.DescribeTasksResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeTasksWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeTasksWithCallback indicates an expected call of DescribeTasksWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeTasksWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTasksWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeTasksWithCallback), arg0, arg1)
}

// DescribeTasksWithChan mocks base method.
func (m *MockEcsClient) DescribeTasksWithChan(arg0 *ecs.DescribeTasksRequest) (<-chan *ecs.DescribeTasksResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeTasksWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeTasksResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeTasksWithChan indicates an expected call of DescribeTasksWithChan.
func (mr *MockEcsClientMockRecorder) DescribeTasksWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTasksWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeTasksWithChan), arg0)
}

// DescribeUserBusinessBehavior mocks base method.
func (m *MockEcsClient) DescribeUserBusinessBehavior(arg0 *ecs.DescribeUserBusinessBehaviorRequest) (*ecs.DescribeUserBusinessBehaviorResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeUserBusinessBehavior", arg0)
	ret0, _ := ret[0].(*ecs.DescribeUserBusinessBehaviorResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeUserBusinessBehavior indicates an expected call of DescribeUserBusinessBehavior.
func (mr *MockEcsClientMockRecorder) DescribeUserBusinessBehavior(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeUserBusinessBehavior", reflect.TypeOf((*MockEcsClient)(nil).DescribeUserBusinessBehavior), arg0)
}

// DescribeUserBusinessBehaviorWithCallback mocks base method.
func (m *MockEcsClient) DescribeUserBusinessBehaviorWithCallback(arg0 *ecs.DescribeUserBusinessBehaviorRequest, arg1 func(*ecs.DescribeUserBusinessBehaviorResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeUserBusinessBehaviorWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeUserBusinessBehaviorWithCallback indicates an expected call of DescribeUserBusinessBehaviorWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeUserBusinessBehaviorWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeUserBusinessBehaviorWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeUserBusinessBehaviorWithCallback), arg0, arg1)
}

// DescribeUserBusinessBehaviorWithChan mocks base method.
func (m *MockEcsClient) DescribeUserBusinessBehaviorWithChan(arg0 *ecs.DescribeUserBusinessBehaviorRequest) (<-chan *ecs.DescribeUserBusinessBehaviorResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeUserBusinessBehaviorWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeUserBusinessBehaviorResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeUserBusinessBehaviorWithChan indicates an expected call of DescribeUserBusinessBehaviorWithChan.
func (mr *MockEcsClientMockRecorder) DescribeUserBusinessBehaviorWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeUserBusinessBehaviorWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeUserBusinessBehaviorWithChan), arg0)
}

// DescribeUserData mocks base method.
func (m *MockEcsClient) DescribeUserData(arg0 *ecs.DescribeUserDataRequest) (*ecs.DescribeUserDataResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeUserData", arg0)
	ret0, _ := ret[0].(*ecs.DescribeUserDataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeUserData indicates an expected call of DescribeUserData.
func (mr *MockEcsClientMockRecorder) DescribeUserData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeUserData", reflect.TypeOf((*MockEcsClient)(nil).DescribeUserData), arg0)
}

// DescribeUserDataWithCallback mocks base method.
func (m *MockEcsClient) DescribeUserDataWithCallback(arg0 *ecs.DescribeUserDataRequest, arg1 func(*ecs.DescribeUserDataResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeUserDataWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeUserDataWithCallback indicates an expected call of DescribeUserDataWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeUserDataWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeUserDataWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeUserDataWithCallback), arg0, arg1)
}

// DescribeUserDataWithChan mocks base method.
func (m *MockEcsClient) DescribeUserDataWithChan(arg0 *ecs.DescribeUserDataRequest) (<-chan *ecs.DescribeUserDataResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeUserDataWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeUserDataResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeUserDataWithChan indicates an expected call of DescribeUserDataWithChan.
func (mr *MockEcsClientMockRecorder) DescribeUserDataWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeUserDataWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeUserDataWithChan), arg0)
}

// DescribeVRouters mocks base method.
func (m *MockEcsClient) DescribeVRouters(arg0 *ecs.DescribeVRoutersRequest) (*ecs.DescribeVRoutersResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVRouters", arg0)
	ret0, _ := ret[0].(*ecs.DescribeVRoutersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeVRouters indicates an expected call of DescribeVRouters.
func (mr *MockEcsClientMockRecorder) DescribeVRouters(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVRouters", reflect.TypeOf((*MockEcsClient)(nil).DescribeVRouters), arg0)
}

// DescribeVRoutersWithCallback mocks base method.
func (m *MockEcsClient) DescribeVRoutersWithCallback(arg0 *ecs.DescribeVRoutersRequest, arg1 func(*ecs.DescribeVRoutersResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVRoutersWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeVRoutersWithCallback indicates an expected call of DescribeVRoutersWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeVRoutersWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVRoutersWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeVRoutersWithCallback), arg0, arg1)
}

// DescribeVRoutersWithChan mocks base method.
func (m *MockEcsClient) DescribeVRoutersWithChan(arg0 *ecs.DescribeVRoutersRequest) (<-chan *ecs.DescribeVRoutersResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVRoutersWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeVRoutersResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeVRoutersWithChan indicates an expected call of DescribeVRoutersWithChan.
func (mr *MockEcsClientMockRecorder) DescribeVRoutersWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVRoutersWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeVRoutersWithChan), arg0)
}

// DescribeVSwitches mocks base method.
func (m *MockEcsClient) DescribeVSwitches(arg0 *ecs.DescribeVSwitchesRequest) (*ecs.DescribeVSwitchesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVSwitches", arg0)
	ret0, _ := ret[0].(*ecs.DescribeVSwitchesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeVSwitches indicates an expected call of DescribeVSwitches.
func (mr *MockEcsClientMockRecorder) DescribeVSwitches(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVSwitches", reflect.TypeOf((*MockEcsClient)(nil).DescribeVSwitches), arg0)
}

// DescribeVSwitchesWithCallback mocks base method.
func (m *MockEcsClient) DescribeVSwitchesWithCallback(arg0 *ecs.DescribeVSwitchesRequest, arg1 func(*ecs.DescribeVSwitchesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVSwitchesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeVSwitchesWithCallback indicates an expected call of DescribeVSwitchesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeVSwitchesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVSwitchesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeVSwitchesWithCallback), arg0, arg1)
}

// DescribeVSwitchesWithChan mocks base method.
func (m *MockEcsClient) DescribeVSwitchesWithChan(arg0 *ecs.DescribeVSwitchesRequest) (<-chan *ecs.DescribeVSwitchesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVSwitchesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeVSwitchesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeVSwitchesWithChan indicates an expected call of DescribeVSwitchesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeVSwitchesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVSwitchesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeVSwitchesWithChan), arg0)
}

// DescribeVirtualBorderRouters mocks base method.
func (m *MockEcsClient) DescribeVirtualBorderRouters(arg0 *ecs.DescribeVirtualBorderRoutersRequest) (*ecs.DescribeVirtualBorderRoutersResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVirtualBorderRouters", arg0)
	ret0, _ := ret[0].(*ecs.DescribeVirtualBorderRoutersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeVirtualBorderRouters indicates an expected call of DescribeVirtualBorderRouters.
func (mr *MockEcsClientMockRecorder) DescribeVirtualBorderRouters(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVirtualBorderRouters", reflect.TypeOf((*MockEcsClient)(nil).DescribeVirtualBorderRouters), arg0)
}

// DescribeVirtualBorderRoutersForPhysicalConnection mocks base method.
func (m *MockEcsClient) DescribeVirtualBorderRoutersForPhysicalConnection(arg0 *ecs.DescribeVirtualBorderRoutersForPhysicalConnectionRequest) (*ecs.DescribeVirtualBorderRoutersForPhysicalConnectionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVirtualBorderRoutersForPhysicalConnection", arg0)
	ret0, _ := ret[0].(*ecs.DescribeVirtualBorderRoutersForPhysicalConnectionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeVirtualBorderRoutersForPhysicalConnection indicates an expected call of DescribeVirtualBorderRoutersForPhysicalConnection.
func (mr *MockEcsClientMockRecorder) DescribeVirtualBorderRoutersForPhysicalConnection(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVirtualBorderRoutersForPhysicalConnection", reflect.TypeOf((*MockEcsClient)(nil).DescribeVirtualBorderRoutersForPhysicalConnection), arg0)
}

// DescribeVirtualBorderRoutersForPhysicalConnectionWithCallback mocks base method.
func (m *MockEcsClient) DescribeVirtualBorderRoutersForPhysicalConnectionWithCallback(arg0 *ecs.DescribeVirtualBorderRoutersForPhysicalConnectionRequest, arg1 func(*ecs.DescribeVirtualBorderRoutersForPhysicalConnectionResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVirtualBorderRoutersForPhysicalConnectionWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeVirtualBorderRoutersForPhysicalConnectionWithCallback indicates an expected call of DescribeVirtualBorderRoutersForPhysicalConnectionWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeVirtualBorderRoutersForPhysicalConnectionWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVirtualBorderRoutersForPhysicalConnectionWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeVirtualBorderRoutersForPhysicalConnectionWithCallback), arg0, arg1)
}

// DescribeVirtualBorderRoutersForPhysicalConnectionWithChan mocks base method.
func (m *MockEcsClient) DescribeVirtualBorderRoutersForPhysicalConnectionWithChan(arg0 *ecs.DescribeVirtualBorderRoutersForPhysicalConnectionRequest) (<-chan *ecs.DescribeVirtualBorderRoutersForPhysicalConnectionResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVirtualBorderRoutersForPhysicalConnectionWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeVirtualBorderRoutersForPhysicalConnectionResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeVirtualBorderRoutersForPhysicalConnectionWithChan indicates an expected call of DescribeVirtualBorderRoutersForPhysicalConnectionWithChan.
func (mr *MockEcsClientMockRecorder) DescribeVirtualBorderRoutersForPhysicalConnectionWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVirtualBorderRoutersForPhysicalConnectionWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeVirtualBorderRoutersForPhysicalConnectionWithChan), arg0)
}

// DescribeVirtualBorderRoutersWithCallback mocks base method.
func (m *MockEcsClient) DescribeVirtualBorderRoutersWithCallback(arg0 *ecs.DescribeVirtualBorderRoutersRequest, arg1 func(*ecs.DescribeVirtualBorderRoutersResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVirtualBorderRoutersWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeVirtualBorderRoutersWithCallback indicates an expected call of DescribeVirtualBorderRoutersWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeVirtualBorderRoutersWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVirtualBorderRoutersWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeVirtualBorderRoutersWithCallback), arg0, arg1)
}

// DescribeVirtualBorderRoutersWithChan mocks base method.
func (m *MockEcsClient) DescribeVirtualBorderRoutersWithChan(arg0 *ecs.DescribeVirtualBorderRoutersRequest) (<-chan *ecs.DescribeVirtualBorderRoutersResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVirtualBorderRoutersWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeVirtualBorderRoutersResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeVirtualBorderRoutersWithChan indicates an expected call of DescribeVirtualBorderRoutersWithChan.
func (mr *MockEcsClientMockRecorder) DescribeVirtualBorderRoutersWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVirtualBorderRoutersWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeVirtualBorderRoutersWithChan), arg0)
}

// DescribeVpcs mocks base method.
func (m *MockEcsClient) DescribeVpcs(arg0 *ecs.DescribeVpcsRequest) (*ecs.DescribeVpcsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVpcs", arg0)
	ret0, _ := ret[0].(*ecs.DescribeVpcsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeVpcs indicates an expected call of DescribeVpcs.
func (mr *MockEcsClientMockRecorder) DescribeVpcs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVpcs", reflect.TypeOf((*MockEcsClient)(nil).DescribeVpcs), arg0)
}

// DescribeVpcsWithCallback mocks base method.
func (m *MockEcsClient) DescribeVpcsWithCallback(arg0 *ecs.DescribeVpcsRequest, arg1 func(*ecs.DescribeVpcsResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVpcsWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeVpcsWithCallback indicates an expected call of DescribeVpcsWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeVpcsWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVpcsWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeVpcsWithCallback), arg0, arg1)
}

// DescribeVpcsWithChan mocks base method.
func (m *MockEcsClient) DescribeVpcsWithChan(arg0 *ecs.DescribeVpcsRequest) (<-chan *ecs.DescribeVpcsResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVpcsWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeVpcsResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeVpcsWithChan indicates an expected call of DescribeVpcsWithChan.
func (mr *MockEcsClientMockRecorder) DescribeVpcsWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVpcsWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeVpcsWithChan), arg0)
}

// DescribeZones mocks base method.
func (m *MockEcsClient) DescribeZones(arg0 *ecs.DescribeZonesRequest) (*ecs.DescribeZonesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeZones", arg0)
	ret0, _ := ret[0].(*ecs.DescribeZonesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeZones indicates an expected call of DescribeZones.
func (mr *MockEcsClientMockRecorder) DescribeZones(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeZones", reflect.TypeOf((*MockEcsClient)(nil).DescribeZones), arg0)
}

// DescribeZonesWithCallback mocks base method.
func (m *MockEcsClient) DescribeZonesWithCallback(arg0 *ecs.DescribeZonesRequest, arg1 func(*ecs.DescribeZonesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeZonesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// DescribeZonesWithCallback indicates an expected call of DescribeZonesWithCallback.
func (mr *MockEcsClientMockRecorder) DescribeZonesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeZonesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).DescribeZonesWithCallback), arg0, arg1)
}

// DescribeZonesWithChan mocks base method.
func (m *MockEcsClient) DescribeZonesWithChan(arg0 *ecs.DescribeZonesRequest) (<-chan *ecs.DescribeZonesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeZonesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.DescribeZonesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// DescribeZonesWithChan indicates an expected call of DescribeZonesWithChan.
func (mr *MockEcsClientMockRecorder) DescribeZonesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeZonesWithChan", reflect.TypeOf((*MockEcsClient)(nil).DescribeZonesWithChan), arg0)
}

// GetCloseTrace mocks base method.
func (m *MockEcsClient) GetCloseTrace() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCloseTrace")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetCloseTrace indicates an expected call of GetCloseTrace.
func (mr *MockEcsClientMockRecorder) GetCloseTrace() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCloseTrace", reflect.TypeOf((*MockEcsClient)(nil).GetCloseTrace))
}

// GetEndpointRules mocks base method.
func (m *MockEcsClient) GetEndpointRules(arg0, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEndpointRules", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEndpointRules indicates an expected call of GetEndpointRules.
func (mr *MockEcsClientMockRecorder) GetEndpointRules(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEndpointRules", reflect.TypeOf((*MockEcsClient)(nil).GetEndpointRules), arg0, arg1)
}

// GetHTTPSInsecure mocks base method.
func (m *MockEcsClient) GetHTTPSInsecure() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHTTPSInsecure")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetHTTPSInsecure indicates an expected call of GetHTTPSInsecure.
func (mr *MockEcsClientMockRecorder) GetHTTPSInsecure() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHTTPSInsecure", reflect.TypeOf((*MockEcsClient)(nil).GetHTTPSInsecure))
}

// GetHttpProxy mocks base method.
func (m *MockEcsClient) GetHttpProxy() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHttpProxy")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetHttpProxy indicates an expected call of GetHttpProxy.
func (mr *MockEcsClientMockRecorder) GetHttpProxy() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHttpProxy", reflect.TypeOf((*MockEcsClient)(nil).GetHttpProxy))
}

// GetHttpsProxy mocks base method.
func (m *MockEcsClient) GetHttpsProxy() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHttpsProxy")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetHttpsProxy indicates an expected call of GetHttpsProxy.
func (mr *MockEcsClientMockRecorder) GetHttpsProxy() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHttpsProxy", reflect.TypeOf((*MockEcsClient)(nil).GetHttpsProxy))
}

// GetInstanceConsoleOutput mocks base method.
func (m *MockEcsClient) GetInstanceConsoleOutput(arg0 *ecs.GetInstanceConsoleOutputRequest) (*ecs.GetInstanceConsoleOutputResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstanceConsoleOutput", arg0)
	ret0, _ := ret[0].(*ecs.GetInstanceConsoleOutputResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInstanceConsoleOutput indicates an expected call of GetInstanceConsoleOutput.
func (mr *MockEcsClientMockRecorder) GetInstanceConsoleOutput(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstanceConsoleOutput", reflect.TypeOf((*MockEcsClient)(nil).GetInstanceConsoleOutput), arg0)
}

// GetInstanceConsoleOutputWithCallback mocks base method.
func (m *MockEcsClient) GetInstanceConsoleOutputWithCallback(arg0 *ecs.GetInstanceConsoleOutputRequest, arg1 func(*ecs.GetInstanceConsoleOutputResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstanceConsoleOutputWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// GetInstanceConsoleOutputWithCallback indicates an expected call of GetInstanceConsoleOutputWithCallback.
func (mr *MockEcsClientMockRecorder) GetInstanceConsoleOutputWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstanceConsoleOutputWithCallback", reflect.TypeOf((*MockEcsClient)(nil).GetInstanceConsoleOutputWithCallback), arg0, arg1)
}

// GetInstanceConsoleOutputWithChan mocks base method.
func (m *MockEcsClient) GetInstanceConsoleOutputWithChan(arg0 *ecs.GetInstanceConsoleOutputRequest) (<-chan *ecs.GetInstanceConsoleOutputResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstanceConsoleOutputWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.GetInstanceConsoleOutputResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// GetInstanceConsoleOutputWithChan indicates an expected call of GetInstanceConsoleOutputWithChan.
func (mr *MockEcsClientMockRecorder) GetInstanceConsoleOutputWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstanceConsoleOutputWithChan", reflect.TypeOf((*MockEcsClient)(nil).GetInstanceConsoleOutputWithChan), arg0)
}

// GetInstanceScreenshot mocks base method.
func (m *MockEcsClient) GetInstanceScreenshot(arg0 *ecs.GetInstanceScreenshotRequest) (*ecs.GetInstanceScreenshotResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstanceScreenshot", arg0)
	ret0, _ := ret[0].(*ecs.GetInstanceScreenshotResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInstanceScreenshot indicates an expected call of GetInstanceScreenshot.
func (mr *MockEcsClientMockRecorder) GetInstanceScreenshot(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstanceScreenshot", reflect.TypeOf((*MockEcsClient)(nil).GetInstanceScreenshot), arg0)
}

// GetInstanceScreenshotWithCallback mocks base method.
func (m *MockEcsClient) GetInstanceScreenshotWithCallback(arg0 *ecs.GetInstanceScreenshotRequest, arg1 func(*ecs.GetInstanceScreenshotResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstanceScreenshotWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// GetInstanceScreenshotWithCallback indicates an expected call of GetInstanceScreenshotWithCallback.
func (mr *MockEcsClientMockRecorder) GetInstanceScreenshotWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstanceScreenshotWithCallback", reflect.TypeOf((*MockEcsClient)(nil).GetInstanceScreenshotWithCallback), arg0, arg1)
}

// GetInstanceScreenshotWithChan mocks base method.
func (m *MockEcsClient) GetInstanceScreenshotWithChan(arg0 *ecs.GetInstanceScreenshotRequest) (<-chan *ecs.GetInstanceScreenshotResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstanceScreenshotWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.GetInstanceScreenshotResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// GetInstanceScreenshotWithChan indicates an expected call of GetInstanceScreenshotWithChan.
func (mr *MockEcsClientMockRecorder) GetInstanceScreenshotWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstanceScreenshotWithChan", reflect.TypeOf((*MockEcsClient)(nil).GetInstanceScreenshotWithChan), arg0)
}

// GetLoggerMsg mocks base method.
func (m *MockEcsClient) GetLoggerMsg() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoggerMsg")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLoggerMsg indicates an expected call of GetLoggerMsg.
func (mr *MockEcsClientMockRecorder) GetLoggerMsg() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoggerMsg", reflect.TypeOf((*MockEcsClient)(nil).GetLoggerMsg))
}

// GetNoProxy mocks base method.
func (m *MockEcsClient) GetNoProxy() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNoProxy")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetNoProxy indicates an expected call of GetNoProxy.
func (mr *MockEcsClientMockRecorder) GetNoProxy() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNoProxy", reflect.TypeOf((*MockEcsClient)(nil).GetNoProxy))
}

// GetTemplate mocks base method.
func (m *MockEcsClient) GetTemplate() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTemplate")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetTemplate indicates an expected call of GetTemplate.
func (mr *MockEcsClientMockRecorder) GetTemplate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTemplate", reflect.TypeOf((*MockEcsClient)(nil).GetTemplate))
}

// ListPluginStatus mocks base method.
func (m *MockEcsClient) ListPluginStatus(arg0 *ecs.ListPluginStatusRequest) (*ecs.ListPluginStatusResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPluginStatus", arg0)
	ret0, _ := ret[0].(*ecs.ListPluginStatusResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPluginStatus indicates an expected call of ListPluginStatus.
func (mr *MockEcsClientMockRecorder) ListPluginStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPluginStatus", reflect.TypeOf((*MockEcsClient)(nil).ListPluginStatus), arg0)
}

// ListPluginStatusWithCallback mocks base method.
func (m *MockEcsClient) ListPluginStatusWithCallback(arg0 *ecs.ListPluginStatusRequest, arg1 func(*ecs.ListPluginStatusResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPluginStatusWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// ListPluginStatusWithCallback indicates an expected call of ListPluginStatusWithCallback.
func (mr *MockEcsClientMockRecorder) ListPluginStatusWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPluginStatusWithCallback", reflect.TypeOf((*MockEcsClient)(nil).ListPluginStatusWithCallback), arg0, arg1)
}

// ListPluginStatusWithChan mocks base method.
func (m *MockEcsClient) ListPluginStatusWithChan(arg0 *ecs.ListPluginStatusRequest) (<-chan *ecs.ListPluginStatusResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPluginStatusWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.ListPluginStatusResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// ListPluginStatusWithChan indicates an expected call of ListPluginStatusWithChan.
func (mr *MockEcsClientMockRecorder) ListPluginStatusWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPluginStatusWithChan", reflect.TypeOf((*MockEcsClient)(nil).ListPluginStatusWithChan), arg0)
}

// ListTagResources mocks base method.
func (m *MockEcsClient) ListTagResources(arg0 *ecs.ListTagResourcesRequest) (*ecs.ListTagResourcesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagResources", arg0)
	ret0, _ := ret[0].(*ecs.ListTagResourcesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagResources indicates an expected call of ListTagResources.
func (mr *MockEcsClientMockRecorder) ListTagResources(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagResources", reflect.TypeOf((*MockEcsClient)(nil).ListTagResources), arg0)
}

// ListTagResourcesWithCallback mocks base method.
func (m *MockEcsClient) ListTagResourcesWithCallback(arg0 *ecs.ListTagResourcesRequest, arg1 func(*ecs.ListTagResourcesResponse, error)) <-chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagResourcesWithCallback", arg0, arg1)
	ret0, _ := ret[0].(<-chan int)
	return ret0
}

// ListTagResourcesWithCallback indicates an expected call of ListTagResourcesWithCallback.
func (mr *MockEcsClientMockRecorder) ListTagResourcesWithCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagResourcesWithCallback", reflect.TypeOf((*MockEcsClient)(nil).ListTagResourcesWithCallback), arg0, arg1)
}

// ListTagResourcesWithChan mocks base method.
func (m *MockEcsClient) ListTagResourcesWithChan(arg0 *ecs.ListTagResourcesRequest) (<-chan *ecs.ListTagResourcesResponse, <-chan error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagResourcesWithChan", arg0)
	ret0, _ := ret[0].(<-chan *ecs.ListTagResourcesResponse)
	ret1, _ := ret[1].(<-chan error)
	return ret0, ret1
}

// ListTagResourcesWithChan indicates an expected call of ListTagResourcesWithChan.
func (mr *MockEcsClientMockRecorder) ListTagResourcesWithChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagResourcesWithChan", reflect.TypeOf((*MockEcsClient)(nil).ListTagResourcesWithChan), arg0)
}
