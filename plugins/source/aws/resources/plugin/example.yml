# For additional help, see https://www.cloudquery.io/plugins/aws
# Optional. Enable AWS SDK debug logging.
aws_debug: false
## Optional. The maximum number of times that a request will be retried for failures. Defaults to 10 retry attempts.
#max_retries: 10
## Optional. The maximum back off delay between attempts (in seconds). The backoff delays exponentially with a jitter
## based on the number of attempts. Defaults to 30 seconds.
#max_backoff: 30
## Optional. Sync only specified regions. Default assumes all regions.
#regions:
#- us-east-1
#- us-west-2

# Optional, Repeated. Add an entry for every account you want to assume-role into and fetch data from.
accounts:
- id: < UNIQUE_ACCOUNT_IDENTIFIER >
  ## Optional account name to use in logs. Defaults to account id.
  #account_name: < ACCOUNT_NAME >
  ## Optional. Local Profile is the named profile in your shared configuration file (usually ~/.aws/config)
  ## that you want to use for the account.
  #local_profile: < NAMED_PROFILE >
  ## Optional. Role ARN we want to assume when accessing this account
  #role_arn: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
  ## Optional. Specify the name of the session
  #role_session_name: < ROLE_SESSION_NAME >
  ## Optional. Specify the ExternalID if required for trust policy
  #external_id: < EXTERNAL_ID >
  ## Optional. This sets the Default Region for the AWS SDK.
  ## If you are assuming a role in a partition other than the AWS commercial region,
  ## it is important that this attribute is set.
  #default_region: < DEFAULT_REGION >
  ## Optional. Sync only specified regions. Default assumes all regions.
  ## This per-account setting overrides the global `regions` setting, if any.
  #regions:
  #  - us-east-1
  #  - us-west-2
  #  # - ...

## Optional. CloudQuery supports discovery of AWS Accounts via AWS Organizations. This means that as Accounts get added
## or removed from your organization, CloudQuery will be able to handle new or removed accounts without any configuration
## changes.
#org:
#  # Required. Role name that CloudQuery should use to assume a role in the member account from the admin account.
#  # Note: This is not a full ARN, it is just the name
##  member_role_name: < OrganizationAccountAccessRole >
##  # Optional. List of Organizational Units that CloudQuery should use to source accounts from
##  organization_units:
##    - ou-<ID-1>
##    - ou-<ID-2>
##  # Optional. Configuration on how to grab credentials from an Admin account
##  admin_account:
##  # Optional. Configuration on how to specify the principle to use in order to assume a role in the member accounts
##  member_trusted_principal:
##  # Optional. Override the default Session name.
##  member_role_session_name:
##  # Optional. Specify an ExternalID for use in the trust policy.
##  member_external_id:
##  # Optional. Limit fetching resources within this specific account to only these regions. This will override any regions
##  # specified in the plugin block.
##  # You can specify all regions by using the * character as the only argument in the array.
##  member_regions:
##    - us-east-1
##    - us-west-2