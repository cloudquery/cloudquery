package config

import (
	"context"
	"errors"

	"github.com/aws/aws-sdk-go-v2/service/configservice"
	"github.com/aws/aws-sdk-go-v2/service/configservice/types"
	"github.com/aws/smithy-go"
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

type ConformancePackComplianceWrapper struct {
	types.ConformancePackRuleCompliance
	types.ConformancePackEvaluationResult
}

func ConfigConformancePack() *schema.Table {
	return &schema.Table{
		Name:          "aws_config_conformance_packs",
		Description:   "Returns details of a conformance pack.",
		Resolver:      fetchConfigConformancePacks,
		Multiplex:     client.ServiceAccountRegionMultiplexer("config"),
		IgnoreInTests: true,
		Columns: []schema.Column{
			{
				Name:        "account_id",
				Description: "The AWS Account ID of the resource.",
				Type:        schema.TypeString,
				Resolver:    client.ResolveAWSAccount,
			},
			{
				Name:        "region",
				Description: "The AWS Region of the resource.",
				Type:        schema.TypeString,
				Resolver:    client.ResolveAWSRegion,
			},
			{
				Name:            "arn",
				Description:     "Amazon Resource Name (ARN) of the conformance pack.",
				Type:            schema.TypeString,
				Resolver:        schema.PathResolver("ConformancePackArn"),
				CreationOptions: schema.ColumnCreationOptions{PrimaryKey: true},
			},
			{
				Name:        "conformance_pack_id",
				Description: "ID of the conformance pack.",
				Type:        schema.TypeString,
			},
			{
				Name:        "conformance_pack_name",
				Description: "Name of the conformance pack.",
				Type:        schema.TypeString,
			},
			{
				Name:        "conformance_pack_input_parameters",
				Description: "A list of ConformancePackInputParameter objects.",
				Type:        schema.TypeJSON,
				Resolver:    resolveConfigConformancePackConformancePackInputParameters,
			},
			{
				Name:        "created_by",
				Description: "AWS service that created the conformance pack.",
				Type:        schema.TypeString,
			},
			{
				Name:        "delivery_s3_bucket",
				Description: "Amazon S3 bucket where AWS Config stores conformance pack templates.",
				Type:        schema.TypeString,
			},
			{
				Name:        "delivery_s3_key_prefix",
				Description: "The prefix for the Amazon S3 bucket.",
				Type:        schema.TypeString,
			},
			{
				Name:        "last_update_requested_time",
				Description: "Last time when conformation pack update was requested.",
				Type:        schema.TypeTimestamp,
			},
		},
		Relations: []*schema.Table{
			{
				Name:        "aws_config_conformance_pack_rule_compliances",
				Description: "Compliance information of one or more AWS Config rules within a conformance pack",
				Resolver:    fetchConfigConformancePackRuleCompliances,
				Multiplex:   client.ServiceAccountRegionMultiplexer("config"),

				Columns: []schema.Column{
					{
						Name:        "conformance_pack_cq_id",
						Description: "Unique CloudQuery ID of aws_config_conformance_packs table (FK)",
						Type:        schema.TypeUUID,
						Resolver:    schema.ParentIdResolver,
					},
					{
						Name:     "conformance_pack_rule_compliance",
						Type:     schema.TypeJSON,
						Resolver: schema.PathResolver("ConformancePackRuleCompliance"),
					},
					{
						Name:        "config_rule_name",
						Description: "Name of the config rule.",
						Type:        schema.TypeString,
					},
					{
						Name:        "controls",
						Description: "Controls for the conformance pack",
						Type:        schema.TypeStringArray,
					},
					{
						Name:        "config_rule_invoked_time",
						Description: "The time when AWS Config rule evaluated AWS resource.",
						Type:        schema.TypeTimestamp,
					},
					{
						Name:     "evaluation_result_identifier",
						Type:     schema.TypeJSON,
						Resolver: schema.PathResolver("EvaluationResultIdentifier"),
					},
					{
						Name:        "result_recorded_time",
						Description: "The time when AWS Config recorded the evaluation result.",
						Type:        schema.TypeTimestamp,
					},
					{
						Name:        "annotation",
						Description: "Supplementary information about how the evaluation determined the compliance.",
						Type:        schema.TypeString,
					},
				},
			},
		},
	}
}

