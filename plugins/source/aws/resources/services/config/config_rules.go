// Code generated by codegen; DO NOT EDIT.

package config

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func ConfigRules() *schema.Table {
	return &schema.Table{
		Name:      "aws_config_config_rules",
		Resolver:  fetchConfigConfigRules,
		Multiplex: client.ServiceAccountRegionMultiplexer("config"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ConfigRuleArn"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "source",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Source"),
			},
			{
				Name:     "config_rule_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ConfigRuleId"),
			},
			{
				Name:     "config_rule_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ConfigRuleName"),
			},
			{
				Name:     "config_rule_state",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ConfigRuleState"),
			},
			{
				Name:     "created_by",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CreatedBy"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Description"),
			},
			{
				Name:     "evaluation_modes",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("EvaluationModes"),
			},
			{
				Name:     "input_parameters",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("InputParameters"),
			},
			{
				Name:     "maximum_execution_frequency",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("MaximumExecutionFrequency"),
			},
			{
				Name:     "scope",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Scope"),
			},
		},

		Relations: []*schema.Table{
			ConfigRuleCompliances(),
		},
	}
}
