// Code generated by codegen; DO NOT EDIT.

package sns

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Topics() *schema.Table {
	return &schema.Table{
		Name:                "aws_sns_topics",
		Resolver:            fetchSnsTopics,
		PreResourceResolver: getTopic,
		Multiplex:           client.ServiceAccountRegionMultiplexer("sns"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Arn"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: resolveSnsTopicTags,
			},
			{
				Name:     "delivery_policy",
				Type:     schema.TypeJSON,
				Resolver: client.MarshaledJsonResolver("DeliveryPolicy"),
			},
			{
				Name:     "policy",
				Type:     schema.TypeJSON,
				Resolver: client.MarshaledJsonResolver("Policy"),
			},
			{
				Name:     "effective_delivery_policy",
				Type:     schema.TypeJSON,
				Resolver: client.MarshaledJsonResolver("EffectiveDeliveryPolicy"),
			},
			{
				Name:     "display_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DisplayName"),
			},
			{
				Name:     "owner",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Owner"),
			},
			{
				Name:     "subscriptions_confirmed",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("SubscriptionsConfirmed"),
			},
			{
				Name:     "subscriptions_deleted",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("SubscriptionsDeleted"),
			},
			{
				Name:     "subscriptions_pending",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("SubscriptionsPending"),
			},
			{
				Name:     "kms_master_key_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("KmsMasterKeyId"),
			},
			{
				Name:     "fifo_topic",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("FifoTopic"),
			},
			{
				Name:     "content_based_deduplication",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("ContentBasedDeduplication"),
			},
			{
				Name:     "unknown_fields",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("UnknownFields"),
			},
		},
	}
}
