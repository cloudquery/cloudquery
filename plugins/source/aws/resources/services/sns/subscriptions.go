// Code generated by codegen; DO NOT EDIT.

package sns

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Subscriptions() *schema.Table {
	return &schema.Table{
		Name:                "aws_sns_subscriptions",
		Resolver:            fetchSnsSubscriptions,
		PreResourceResolver: getSnsSubscription,
		Multiplex:           client.ServiceAccountRegionMultiplexer("sns"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SubscriptionArn"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "delivery_policy",
				Type:     schema.TypeJSON,
				Resolver: client.MarshaledJsonResolver("DeliveryPolicy"),
			},
			{
				Name:     "effective_delivery_policy",
				Type:     schema.TypeJSON,
				Resolver: client.MarshaledJsonResolver("EffectiveDeliveryPolicy"),
			},
			{
				Name:     "filter_policy",
				Type:     schema.TypeJSON,
				Resolver: client.MarshaledJsonResolver("FilterPolicy"),
			},
			{
				Name:     "redrive_policy",
				Type:     schema.TypeJSON,
				Resolver: client.MarshaledJsonResolver("RedrivePolicy"),
			},
			{
				Name:     "endpoint",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Endpoint"),
			},
			{
				Name:     "owner",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Owner"),
			},
			{
				Name:     "protocol",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Protocol"),
			},
			{
				Name:     "topic_arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("TopicArn"),
			},
			{
				Name:     "confirmation_was_authenticated",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("ConfirmationWasAuthenticated"),
			},
			{
				Name:     "pending_confirmation",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("PendingConfirmation"),
			},
			{
				Name:     "raw_message_delivery",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("RawMessageDelivery"),
			},
			{
				Name:     "subscription_role_arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SubscriptionRoleArn"),
			},
			{
				Name:     "unknown_fields",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("UnknownFields"),
			},
		},
	}
}
