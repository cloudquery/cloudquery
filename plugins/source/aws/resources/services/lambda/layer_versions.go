// Code generated by codegen; DO NOT EDIT.

package lambda

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func LayerVersions() *schema.Table {
	return &schema.Table{
		Name:      "aws_lambda_layer_versions",
		Resolver:  fetchLambdaLayerVersions,
		Multiplex: client.ServiceAccountRegionMultiplexer("lambda"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LayerVersionArn"),
			},
			{
				Name:     "layer_arn",
				Type:     schema.TypeString,
				Resolver: schema.ParentColumnResolver("arn"),
			},
			{
				Name:     "compatible_architectures",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("CompatibleArchitectures"),
			},
			{
				Name:     "compatible_runtimes",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("CompatibleRuntimes"),
			},
			{
				Name:     "created_date",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CreatedDate"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Description"),
			},
			{
				Name:     "license_info",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LicenseInfo"),
			},
			{
				Name:     "version",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Version"),
			},
		},

		Relations: []*schema.Table{
			LayerVersionPolicies(),
		},
	}
}
