// Code generated by codegen; DO NOT EDIT.

package lambda

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func FunctionConcurrencyConfigs() *schema.Table {
	return &schema.Table{
		Name:      "aws_lambda_function_concurrency_configs",
		Resolver:  fetchLambdaFunctionConcurrencyConfigs,
		Multiplex: client.ServiceAccountRegionMultiplexer("lambda"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "function_arn",
				Type:     schema.TypeString,
				Resolver: schema.ParentColumnResolver("arn"),
			},
			{
				Name:     "allocated_provisioned_concurrent_executions",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("AllocatedProvisionedConcurrentExecutions"),
			},
			{
				Name:     "available_provisioned_concurrent_executions",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("AvailableProvisionedConcurrentExecutions"),
			},
			{
				Name:     "last_modified",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LastModified"),
			},
			{
				Name:     "requested_provisioned_concurrent_executions",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("RequestedProvisionedConcurrentExecutions"),
			},
			{
				Name:     "status",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Status"),
			},
			{
				Name:     "status_reason",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("StatusReason"),
			},
		},
	}
}
