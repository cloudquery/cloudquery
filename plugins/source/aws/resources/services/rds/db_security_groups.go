// Code generated by codegen; DO NOT EDIT.

package rds

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func DbSecurityGroups() *schema.Table {
	return &schema.Table{
		Name:      "aws_rds_db_security_groups",
		Resolver:  fetchRdsDbSecurityGroups,
		Multiplex: client.ServiceAccountRegionMultiplexer("rds"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DBSecurityGroupArn"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: resolveRdsDbSecurityGroupTags,
			},
			{
				Name:     "db_security_group_description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DBSecurityGroupDescription"),
			},
			{
				Name:     "db_security_group_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DBSecurityGroupName"),
			},
			{
				Name:     "ec2_security_groups",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("EC2SecurityGroups"),
			},
			{
				Name:     "ip_ranges",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("IPRanges"),
			},
			{
				Name:     "owner_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("OwnerId"),
			},
			{
				Name:     "vpc_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("VpcId"),
			},
		},
	}
}
