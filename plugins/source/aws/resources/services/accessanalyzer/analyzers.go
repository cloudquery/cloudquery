// Code generated by codegen; DO NOT EDIT.

package accessanalyzer

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Analyzers() *schema.Table {
	return &schema.Table{
		Name:        "aws_accessanalyzer_analyzers",
		Description: "https://docs.aws.amazon.com/access-analyzer/latest/APIReference/API_AnalyzerSummary.html",
		Resolver:    fetchAccessanalyzerAnalyzers,
		Multiplex:   client.ServiceAccountRegionMultiplexer("access-analyzer"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Arn"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "created_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedAt"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "status",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Status"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
			{
				Name:     "last_resource_analyzed",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LastResourceAnalyzed"),
			},
			{
				Name:     "last_resource_analyzed_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("LastResourceAnalyzedAt"),
			},
			{
				Name:     "status_reason",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("StatusReason"),
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Tags"),
			},
		},

		Relations: []*schema.Table{
			AnalyzerFindings(),
			AnalyzerArchiveRules(),
		},
	}
}
