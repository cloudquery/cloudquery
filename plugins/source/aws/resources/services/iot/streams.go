// Code generated by codegen; DO NOT EDIT.

package iot

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Streams() *schema.Table {
	return &schema.Table{
		Name:        "aws_iot_streams",
		Description: `https://docs.aws.amazon.com/iot/latest/apireference/API_StreamInfo.html`,
		Resolver:    fetchIotStreams,
		Multiplex:   client.ServiceAccountRegionMultiplexer("iot"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("StreamArn"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "created_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedAt"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Description"),
			},
			{
				Name:     "files",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Files"),
			},
			{
				Name:     "last_updated_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("LastUpdatedAt"),
			},
			{
				Name:     "role_arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("RoleArn"),
			},
			{
				Name:     "stream_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("StreamId"),
			},
			{
				Name:     "stream_version",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("StreamVersion"),
			},
		},
	}
}
