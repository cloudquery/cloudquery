// Code generated by codegen; DO NOT EDIT.

package elasticsearch

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Packages() *schema.Table {
	return &schema.Table{
		Name:        "aws_elasticsearch_packages",
		Description: `https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_PackageDetails.html`,
		Resolver:    fetchElasticsearchPackages,
		Multiplex:   client.ServiceAccountRegionMultiplexer("es"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "available_package_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("AvailablePackageVersion"),
			},
			{
				Name:     "created_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedAt"),
			},
			{
				Name:     "error_details",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ErrorDetails"),
			},
			{
				Name:     "last_updated_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("LastUpdatedAt"),
			},
			{
				Name:     "package_description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("PackageDescription"),
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("PackageID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "package_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("PackageName"),
			},
			{
				Name:     "package_status",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("PackageStatus"),
			},
			{
				Name:     "package_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("PackageType"),
			},
		},
	}
}
