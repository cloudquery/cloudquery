// Code generated by codegen; DO NOT EDIT.

package glue

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func MlTransforms() *schema.Table {
	return &schema.Table{
		Name:      "aws_glue_ml_transforms",
		Resolver:  fetchGlueMlTransforms,
		Multiplex: client.ServiceAccountRegionMultiplexer("glue"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: resolveGlueMlTransformArn,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: resolveGlueMlTransformTags,
			},
			{
				Name:     "schema",
				Type:     schema.TypeJSON,
				Resolver: resolveMlTransformsSchema,
			},
			{
				Name:     "created_on",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedOn"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Description"),
			},
			{
				Name:     "evaluation_metrics",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("EvaluationMetrics"),
			},
			{
				Name:     "glue_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("GlueVersion"),
			},
			{
				Name:     "input_record_tables",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("InputRecordTables"),
			},
			{
				Name:     "label_count",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("LabelCount"),
			},
			{
				Name:     "last_modified_on",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("LastModifiedOn"),
			},
			{
				Name:     "max_capacity",
				Type:     schema.TypeFloat,
				Resolver: schema.PathResolver("MaxCapacity"),
			},
			{
				Name:     "max_retries",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("MaxRetries"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "number_of_workers",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("NumberOfWorkers"),
			},
			{
				Name:     "parameters",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Parameters"),
			},
			{
				Name:     "role",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Role"),
			},
			{
				Name:     "status",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Status"),
			},
			{
				Name:     "timeout",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Timeout"),
			},
			{
				Name:     "transform_encryption",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("TransformEncryption"),
			},
			{
				Name:     "transform_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("TransformId"),
			},
			{
				Name:     "worker_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("WorkerType"),
			},
		},

		Relations: []*schema.Table{
			MlTransformTaskRuns(),
		},
	}
}
