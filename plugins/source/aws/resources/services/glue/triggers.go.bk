package glue

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/glue"
	"github.com/aws/aws-sdk-go-v2/service/glue/types"
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Triggers() *schema.Table {
	return &schema.Table{
		Name:        "aws_glue_triggers",
		Description: "Information about a specific trigger",
		Resolver:    fetchGlueTriggers,
		Multiplex:   client.ServiceAccountRegionMultiplexer("glue"),
		Columns: []schema.Column{
			{
				Name:        "account_id",
				Description: "The AWS Account ID of the resource.",
				Type:        schema.TypeString,
				Resolver:    client.ResolveAWSAccount,
			},
			{
				Name:        "region",
				Description: "The AWS Region of the resource.",
				Type:        schema.TypeString,
				Resolver:    client.ResolveAWSRegion,
			},
			{
				Name:            "arn",
				Description:     "The Amazon Resource Name (ARN) of the trigger.",
				Type:            schema.TypeString,
				Resolver:        resolveGlueTriggerArn,
				CreationOptions: schema.ColumnCreationOptions{PrimaryKey: true},
			},
			{
				Name:        "tags",
				Description: "Resource tags.",
				Type:        schema.TypeJSON,
				Resolver:    resolveGlueTriggerTags,
			},
			{
				Name:        "description",
				Description: "A description of this trigger",
				Type:        schema.TypeString,
			},
			{
				Name:     "event_batching_condition",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("EventBatchingCondition"),
			},
			{
				Name:        "id",
				Description: "Reserved for future use",
				Type:        schema.TypeString,
			},
			{
				Name:        "name",
				Description: "The name of the trigger",
				Type:        schema.TypeString,
			},
			{
				Name:     "predicate",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Predicate"),
			},
			{
				Name:        "schedule",
				Description: "A cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers (https://docsawsamazoncom/glue/latest/dg/monitor-data-warehouse-schedulehtml) For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *)",
				Type:        schema.TypeString,
			},
			{
				Name:        "state",
				Description: "The current state of the trigger",
				Type:        schema.TypeString,
			},
			{
				Name:        "type",
				Description: "The type of trigger that this is",
				Type:        schema.TypeString,
			},
			{
				Name:        "workflow_name",
				Description: "The name of the workflow associated with the trigger",
				Type:        schema.TypeString,
			},
			{
				Name:        "actions",
				Description: "Defines an action to be initiated by a trigger",
				Type:        schema.TypeJSON,
				Resolver:    schema.PathResolver("Actions"),
			},
		},
	}
}

