package glue

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/glue"
	"github.com/aws/aws-sdk-go-v2/service/glue/types"
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Workflows() *schema.Table {
	return &schema.Table{
		Name:        "aws_glue_workflows",
		Description: "A workflow is a collection of multiple dependent Glue jobs and crawlers that are run to complete a complex ETL task",
		Resolver:    fetchGlueWorkflows,
		Multiplex:   client.ServiceAccountRegionMultiplexer("glue"),
		Columns: []schema.Column{
			{
				Name:        "account_id",
				Description: "The AWS Account ID of the resource.",
				Type:        schema.TypeString,
				Resolver:    client.ResolveAWSAccount,
			},
			{
				Name:        "region",
				Description: "The AWS Region of the resource.",
				Type:        schema.TypeString,
				Resolver:    client.ResolveAWSRegion,
			},
			{
				Name:            "arn",
				Description:     "The Amazon Resource Name (ARN) of the workflow.",
				Type:            schema.TypeString,
				Resolver:        resolveGlueWorkflowArn,
				CreationOptions: schema.ColumnCreationOptions{PrimaryKey: true},
			},
			{
				Name:        "tags",
				Description: "Resource tags.",
				Type:        schema.TypeJSON,
				Resolver:    resolveGlueWorkflowTags,
			},
			{
				Name:          "blueprint_details",
				Type:          schema.TypeJSON,
				Resolver:      schema.PathResolver("BlueprintDetails"),
				IgnoreInTests: true,
			},
			{
				Name:        "created_on",
				Description: "The date and time when the workflow was created.",
				Type:        schema.TypeTimestamp,
			},
			{
				Name:          "default_run_properties",
				Description:   "A collection of properties to be used as part of each execution of the workflow. The run properties are made available to each job in the workflow",
				Type:          schema.TypeJSON,
				IgnoreInTests: true,
			},
			{
				Name:        "description",
				Description: "A description of the workflow.",
				Type:        schema.TypeString,
			},
			{
				Name:        "last_modified_on",
				Description: "The date and time when the workflow was last modified.",
				Type:        schema.TypeTimestamp,
			},
			{
				Name:     "last_run",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("LastRun"),
			},
			{
				Name:        "max_concurrent_runs",
				Description: "You can use this parameter to prevent unwanted multiple updates to data, to control costs, or in some cases, to prevent exceeding the maximum number of concurrent runs of any of the component jobs",
				Type:        schema.TypeInt,
			},
			{
				Name:        "name",
				Description: "The name of the workflow.",
				Type:        schema.TypeString,
			},
		},
	}
}

