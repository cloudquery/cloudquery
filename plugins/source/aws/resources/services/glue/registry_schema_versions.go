// Code generated by codegen; DO NOT EDIT.

package glue

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func RegistrySchemaVersions() *schema.Table {
	return &schema.Table{
		Name:                "aws_glue_registry_schema_versions",
		Resolver:            fetchGlueRegistrySchemaVersions,
		PreResourceResolver: getRegistrySchemaVersion,
		Multiplex:           client.ServiceAccountRegionMultiplexer("glue"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "registry_schema_arn",
				Type:     schema.TypeString,
				Resolver: schema.ParentColumnResolver("arn"),
			},
			{
				Name:     "metadata",
				Type:     schema.TypeJSON,
				Resolver: resolveGlueRegistrySchemaVersionMetadata,
			},
			{
				Name:     "created_time",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CreatedTime"),
			},
			{
				Name:     "data_format",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DataFormat"),
			},
			{
				Name:     "schema_arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SchemaArn"),
			},
			{
				Name:     "schema_definition",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SchemaDefinition"),
			},
			{
				Name:     "schema_version_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SchemaVersionId"),
			},
			{
				Name:     "status",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Status"),
			},
			{
				Name:     "version_number",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("VersionNumber"),
			},
			{
				Name:     "result_metadata",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ResultMetadata"),
			},
		},
	}
}
