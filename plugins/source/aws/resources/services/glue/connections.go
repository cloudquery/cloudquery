// Code generated by codegen; DO NOT EDIT.

package glue

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Connections() *schema.Table {
	return &schema.Table{
		Name:      "aws_glue_connections",
		Resolver:  fetchGlueConnections,
		Multiplex: client.ServiceAccountRegionMultiplexer("glue"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: resolveGlueConnectionArn,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "connection_properties",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ConnectionProperties"),
			},
			{
				Name:     "connection_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ConnectionType"),
			},
			{
				Name:     "creation_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreationTime"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Description"),
			},
			{
				Name:     "last_updated_by",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LastUpdatedBy"),
			},
			{
				Name:     "last_updated_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("LastUpdatedTime"),
			},
			{
				Name:     "match_criteria",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("MatchCriteria"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "physical_connection_requirements",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("PhysicalConnectionRequirements"),
			},
		},
	}
}
