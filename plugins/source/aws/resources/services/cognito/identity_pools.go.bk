package cognito

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentity"
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func CognitoIdentityPools() *schema.Table {
	return &schema.Table{
		Name:          "aws_cognito_identity_pools",
		Description:   "An object representing an Amazon Cognito identity pool.",
		Resolver:      fetchCognitoIdentityPools,
		Multiplex:     client.ServiceAccountRegionMultiplexer("cognito-identity"),
		IgnoreInTests: true,
		Columns: []schema.Column{
			{
				Name:            "account_id",
				Description:     "The AWS Account ID of the resource.",
				Type:            schema.TypeString,
				Resolver:        client.ResolveAWSAccount,
				CreationOptions: schema.ColumnCreationOptions{PrimaryKey: true},
			},
			{
				Name:        "region",
				Description: "The AWS Region of the resource.",
				Type:        schema.TypeString,
				Resolver:    client.ResolveAWSRegion,
			},
			{
				Name:        "arn",
				Description: "The Amazon Resource Name (ARN) for the resource.",
				Type:        schema.TypeString,
				Resolver: client.ResolveARN(client.CognitoIdentityService, func(resource *schema.Resource) ([]string, error) {
					return []string{"identitypool", *resource.Item.(*cognitoidentity.DescribeIdentityPoolOutput).IdentityPoolId}, nil
				}),
			},
			{
				Name:        "allow_unauthenticated_identities",
				Description: "TRUE if the identity pool supports unauthenticated logins.",
				Type:        schema.TypeBool,
			},
			{
				Name:            "id",
				Description:     "An identity pool ID in the format REGION:GUID.",
				Type:            schema.TypeString,
				Resolver:        schema.PathResolver("IdentityPoolId"),
				CreationOptions: schema.ColumnCreationOptions{PrimaryKey: true},
			},
			{
				Name:        "identity_pool_name",
				Description: "A string that you provide.",
				Type:        schema.TypeString,
			},
			{
				Name:        "allow_classic_flow",
				Description: "Enables or disables the Basic (Classic) authentication flow",
				Type:        schema.TypeBool,
			},
			{
				Name:        "developer_provider_name",
				Description: "The \"domain\" by which Cognito will refer to your users.",
				Type:        schema.TypeString,
			},
			{
				Name:        "identity_pool_tags",
				Description: "The tags that are assigned to the identity pool",
				Type:        schema.TypeJSON,
			},
			{
				Name:        "open_id_connect_provider_arns",
				Description: "The ARNs of the OpenID Connect providers.",
				Type:        schema.TypeStringArray,
				Resolver:    schema.PathResolver("OpenIdConnectProviderARNs"),
			},
			{
				Name:        "saml_provider_arns",
				Description: "An array of Amazon Resource Names (ARNs) of the SAML provider for your identity pool.",
				Type:        schema.TypeStringArray,
				Resolver:    schema.PathResolver("SamlProviderARNs"),
			},
			{
				Name:        "supported_login_providers",
				Description: "Optional key:value pairs mapping provider names to provider app IDs.",
				Type:        schema.TypeJSON,
			},
			{
				Name:        "cognito_identity_providers",
				Description: "A provider representing an Amazon Cognito user pool and its client ID.",
				Type:        schema.TypeJSON,
				Resolver:    schema.PathResolver("CognitoIdentityProviders"),
			},
		},
	}
}

