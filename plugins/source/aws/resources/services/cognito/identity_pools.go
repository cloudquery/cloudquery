// Code generated by codegen; DO NOT EDIT.

package cognito

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func IdentityPools() *schema.Table {
	return &schema.Table{
		Name:                "aws_cognito_identity_pools",
		Resolver:            fetchCognitoIdentityPools,
		PreResourceResolver: getIdentityPool,
		Multiplex:           client.ServiceAccountRegionMultiplexer("cognito-identity"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: resolveIdentityPoolARN(),
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("IdentityPoolId"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "allow_unauthenticated_identities",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("AllowUnauthenticatedIdentities"),
			},
			{
				Name:     "identity_pool_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("IdentityPoolName"),
			},
			{
				Name:     "allow_classic_flow",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("AllowClassicFlow"),
			},
			{
				Name:     "cognito_identity_providers",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("CognitoIdentityProviders"),
			},
			{
				Name:     "developer_provider_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DeveloperProviderName"),
			},
			{
				Name:     "identity_pool_tags",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("IdentityPoolTags"),
			},
			{
				Name:     "open_id_connect_provider_ar_ns",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("OpenIdConnectProviderARNs"),
			},
			{
				Name:     "saml_provider_ar_ns",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("SamlProviderARNs"),
			},
			{
				Name:     "supported_login_providers",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("SupportedLoginProviders"),
			},
			{
				Name:     "result_metadata",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ResultMetadata"),
			},
		},
	}
}
