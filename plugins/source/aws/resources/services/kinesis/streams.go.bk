package kinesis

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kinesis"
	"github.com/aws/aws-sdk-go-v2/service/kinesis/types"
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Streams() *schema.Table {
	return &schema.Table{
		Name:        "aws_kinesis_streams",
		Description: "Represents the output for DescribeStreamSummary",
		Resolver:    fetchKinesisStreams,
		Multiplex:   client.ServiceAccountRegionMultiplexer("kinesis"),
		Columns: []schema.Column{
			{
				Name:        "account_id",
				Description: "The AWS Account ID of the resource.",
				Type:        schema.TypeString,
				Resolver:    client.ResolveAWSAccount,
			},
			{
				Name:        "region",
				Description: "The AWS Region of the resource.",
				Type:        schema.TypeString,
				Resolver:    client.ResolveAWSRegion,
			},
			{
				Name:            "arn",
				Type:            schema.TypeString,
				Resolver:        schema.PathResolver("StreamARN"),
				CreationOptions: schema.ColumnCreationOptions{PrimaryKey: true},
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: ResolveKinesisStreamTags,
			},
			{
				Name:        "open_shard_count",
				Description: "The number of open shards in the stream",
				Type:        schema.TypeInt,
			},
			{
				Name:        "retention_period_hours",
				Description: "The current retention period, in hours",
				Type:        schema.TypeInt,
			},
			{
				Name:        "stream_arn",
				Description: "The Amazon Resource Name (ARN) for the stream being described",
				Type:        schema.TypeString,
				Resolver:    schema.PathResolver("StreamARN"),
			},
			{
				Name:        "stream_creation_timestamp",
				Description: "The approximate time that the stream was created",
				Type:        schema.TypeTimestamp,
			},
			{
				Name:        "stream_name",
				Description: "The name of the stream being described",
				Type:        schema.TypeString,
			},
			{
				Name:        "stream_status",
				Description: "The current status of the stream being described",
				Type:        schema.TypeString,
			},
			{
				Name:        "consumer_count",
				Description: "The number of enhanced fan-out consumers registered with the stream",
				Type:        schema.TypeInt,
			},
			{
				Name:        "encryption_type",
				Description: "The encryption type used",
				Type:        schema.TypeString,
			},
			{
				Name:        "key_id",
				Description: "The GUID for the customer-managed Amazon Web Services KMS key to use for encryption",
				Type:        schema.TypeString,
			},
			{
				Name:        "stream_mode_details",
				Type:        schema.TypeString,
				Resolver:    schema.PathResolver("StreamModeDetails"),
			},
			{
				Name:        "enhanced_monitoring",
				Description: "Represents enhanced metrics types",
				Type:        schema.TypeJSON,
				Resolver:    schema.PathResolver("EnhancedMonitoring"),
			},
		},
	}
}

