// Code generated by codegen; DO NOT EDIT.

package inspector2

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Findings() *schema.Table {
	return &schema.Table{
		Name:        "aws_inspector2_findings",
		Description: `https://docs.aws.amazon.com/inspector/v2/APIReference/API_Finding.html`,
		Resolver:    fetchInspector2Findings,
		Multiplex:   client.ServiceAccountRegionMultiplexer("inspector2"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("FindingArn"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "aws_account_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("AwsAccountId"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Description"),
			},
			{
				Name:     "first_observed_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("FirstObservedAt"),
			},
			{
				Name:     "last_observed_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("LastObservedAt"),
			},
			{
				Name:     "remediation",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Remediation"),
			},
			{
				Name:     "resources",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Resources"),
			},
			{
				Name:     "severity",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Severity"),
			},
			{
				Name:     "status",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Status"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
			{
				Name:     "exploit_available",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ExploitAvailable"),
			},
			{
				Name:     "exploitability_details",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ExploitabilityDetails"),
			},
			{
				Name:     "fix_available",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("FixAvailable"),
			},
			{
				Name:     "inspector_score",
				Type:     schema.TypeFloat,
				Resolver: schema.PathResolver("InspectorScore"),
			},
			{
				Name:     "inspector_score_details",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("InspectorScoreDetails"),
			},
			{
				Name:     "network_reachability_details",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("NetworkReachabilityDetails"),
			},
			{
				Name:     "package_vulnerability_details",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("PackageVulnerabilityDetails"),
			},
			{
				Name:     "title",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Title"),
			},
			{
				Name:     "updated_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("UpdatedAt"),
			},
		},
	}
}
