// Code generated by codegen; DO NOT EDIT.

package elasticbeanstalk

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func ApplicationVersions() *schema.Table {
	return &schema.Table{
		Name:      "aws_elasticbeanstalk_application_versions",
		Resolver:  fetchElasticbeanstalkApplicationVersions,
		Multiplex: client.ServiceAccountRegionMultiplexer("elasticbeanstalk"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ApplicationVersionArn"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "application_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ApplicationName"),
			},
			{
				Name:     "build_arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("BuildArn"),
			},
			{
				Name:     "date_created",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("DateCreated"),
			},
			{
				Name:     "date_updated",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("DateUpdated"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Description"),
			},
			{
				Name:     "source_build_information",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("SourceBuildInformation"),
			},
			{
				Name:     "source_bundle",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("SourceBundle"),
			},
			{
				Name:     "status",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Status"),
			},
			{
				Name:     "version_label",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("VersionLabel"),
			},
		},
	}
}
