// Code generated by codegen; DO NOT EDIT.

package eventbridge

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Replays() *schema.Table {
	return &schema.Table{
		Name:        "aws_eventbridge_replays",
		Description: "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_Replay.html",
		Resolver:    fetchEventbridgeReplays,
		Multiplex:   client.ServiceAccountRegionMultiplexer("events"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: resolveReplayArn,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "event_end_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("EventEndTime"),
			},
			{
				Name:     "event_last_replayed_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("EventLastReplayedTime"),
			},
			{
				Name:     "event_source_arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("EventSourceArn"),
			},
			{
				Name:     "event_start_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("EventStartTime"),
			},
			{
				Name:     "replay_end_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("ReplayEndTime"),
			},
			{
				Name:     "replay_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ReplayName"),
			},
			{
				Name:     "replay_start_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("ReplayStartTime"),
			},
			{
				Name:     "state",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("State"),
			},
			{
				Name:     "state_reason",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("StateReason"),
			},
		},
	}
}
