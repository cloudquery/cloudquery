// Code generated by codegen; DO NOT EDIT.

package quicksight

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Analyses() *schema.Table {
	return &schema.Table{
		Name:                "aws_quicksight_analyses",
		Resolver:            fetchQuicksightAnalyses,
		PreResourceResolver: getAnalysis,
		Multiplex:           client.ServiceAccountRegionMultiplexer("quicksight"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: resolveTags(),
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Arn"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "analysis_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("AnalysisId"),
			},
			{
				Name:     "created_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedTime"),
			},
			{
				Name:     "data_set_arns",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("DataSetArns"),
			},
			{
				Name:     "errors",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Errors"),
			},
			{
				Name:     "last_updated_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("LastUpdatedTime"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "sheets",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Sheets"),
			},
			{
				Name:     "status",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Status"),
			},
			{
				Name:     "theme_arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ThemeArn"),
			},
		},
	}
}
