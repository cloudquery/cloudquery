// Code generated by codegen; DO NOT EDIT.

package apigatewayv2

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func ApiAuthorizers() *schema.Table {
	return &schema.Table{
		Name:        "aws_apigatewayv2_api_authorizers",
		Description: "https://docs.aws.amazon.com/apigateway/latest/api/API_Authorizer.html",
		Resolver:    fetchApigatewayv2ApiAuthorizers,
		Multiplex:   client.ServiceAccountRegionMultiplexer("apigateway"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "api_arn",
				Type:     schema.TypeString,
				Resolver: schema.ParentColumnResolver("arn"),
			},
			{
				Name:     "api_id",
				Type:     schema.TypeString,
				Resolver: schema.ParentColumnResolver("id"),
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: resolveApiAuthorizerArn(),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "authorizer_credentials_arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("AuthorizerCredentialsArn"),
			},
			{
				Name:     "authorizer_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("AuthorizerId"),
			},
			{
				Name:     "authorizer_payload_format_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("AuthorizerPayloadFormatVersion"),
			},
			{
				Name:     "authorizer_result_ttl_in_seconds",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("AuthorizerResultTtlInSeconds"),
			},
			{
				Name:     "authorizer_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("AuthorizerType"),
			},
			{
				Name:     "authorizer_uri",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("AuthorizerUri"),
			},
			{
				Name:     "enable_simple_responses",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("EnableSimpleResponses"),
			},
			{
				Name:     "identity_source",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("IdentitySource"),
			},
			{
				Name:     "identity_validation_expression",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("IdentityValidationExpression"),
			},
			{
				Name:     "jwt_configuration",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("JwtConfiguration"),
			},
		},
	}
}
