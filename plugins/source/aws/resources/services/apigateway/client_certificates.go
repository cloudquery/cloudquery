// Code generated by codegen; DO NOT EDIT.

package apigateway

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func ClientCertificates() *schema.Table {
	return &schema.Table{
		Name:        "aws_apigateway_client_certificates",
		Description: "https://docs.aws.amazon.com/apigateway/latest/api/API_ClientCertificate.html",
		Resolver:    fetchApigatewayClientCertificates,
		Multiplex:   client.ServiceAccountRegionMultiplexer("apigateway"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: resolveApigatewayClientCertificateArn,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "client_certificate_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ClientCertificateId"),
			},
			{
				Name:     "created_date",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedDate"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Description"),
			},
			{
				Name:     "expiration_date",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("ExpirationDate"),
			},
			{
				Name:     "pem_encoded_certificate",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("PemEncodedCertificate"),
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Tags"),
			},
		},
	}
}
