// Code generated by codegen; DO NOT EDIT.

package lightsail

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func DatabaseSnapshots() *schema.Table {
	return &schema.Table{
		Name:        "aws_lightsail_database_snapshots",
		Description: "https://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_RelationalDatabaseSnapshot.html",
		Resolver:    fetchLightsailDatabaseSnapshots,
		Multiplex:   client.ServiceAccountRegionMultiplexer("lightsail"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name: "arn",
				Type: schema.TypeString,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "created_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedAt"),
			},
			{
				Name:     "engine",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Engine"),
			},
			{
				Name:     "engine_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("EngineVersion"),
			},
			{
				Name:     "from_relational_database_arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("FromRelationalDatabaseArn"),
			},
			{
				Name:     "from_relational_database_blueprint_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("FromRelationalDatabaseBlueprintId"),
			},
			{
				Name:     "from_relational_database_bundle_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("FromRelationalDatabaseBundleId"),
			},
			{
				Name:     "from_relational_database_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("FromRelationalDatabaseName"),
			},
			{
				Name:     "location",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Location"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "resource_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ResourceType"),
			},
			{
				Name:     "size_in_gb",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("SizeInGb"),
			},
			{
				Name:     "state",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("State"),
			},
			{
				Name:     "support_code",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SupportCode"),
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: client.ResolveTags,
			},
		},
	}
}
