// Code generated by codegen; DO NOT EDIT.

package lightsail

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Distributions() *schema.Table {
	return &schema.Table{
		Name:      "aws_lightsail_distributions",
		Resolver:  fetchLightsailDistributions,
		Multiplex: client.ServiceAccountRegionMultiplexer("lightsail"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Arn"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: client.ResolveTags,
			},
			{
				Name:     "able_to_update_bundle",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("AbleToUpdateBundle"),
			},
			{
				Name:     "alternative_domain_names",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("AlternativeDomainNames"),
			},
			{
				Name:     "bundle_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("BundleId"),
			},
			{
				Name:     "cache_behavior_settings",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("CacheBehaviorSettings"),
			},
			{
				Name:     "cache_behaviors",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("CacheBehaviors"),
			},
			{
				Name:     "certificate_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CertificateName"),
			},
			{
				Name:     "created_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedAt"),
			},
			{
				Name:     "default_cache_behavior",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("DefaultCacheBehavior"),
			},
			{
				Name:     "domain_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DomainName"),
			},
			{
				Name:     "ip_address_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("IpAddressType"),
			},
			{
				Name:     "is_enabled",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("IsEnabled"),
			},
			{
				Name:     "location",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Location"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "origin",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Origin"),
			},
			{
				Name:     "origin_public_dns",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("OriginPublicDNS"),
			},
			{
				Name:     "resource_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ResourceType"),
			},
			{
				Name:     "status",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Status"),
			},
			{
				Name:     "support_code",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SupportCode"),
			},
			{
				Name:     "latest_cache_reset",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("LatestCacheReset"),
			},
		},
	}
}
