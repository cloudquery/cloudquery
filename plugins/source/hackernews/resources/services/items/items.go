// Code generated by codegen; DO NOT EDIT.

package items

import (
	"github.com/cloudquery/cloudquery/plugins/source/hackernews/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Items() *schema.Table {
	return &schema.Table{
		Name:          "hackernews_items",
		Description:   `https://github.com/HackerNews/API#items`,
		Resolver:      fetchItems,
		IsIncremental: true,
		Columns: []schema.Column{
			{
				Name:     "id",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "deleted",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Deleted"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
			{
				Name:     "by",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("By"),
			},
			{
				Name:     "time",
				Type:     schema.TypeTimestamp,
				Resolver: client.UnixTimeResolver("Time"),
			},
			{
				Name:     "text",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Text"),
			},
			{
				Name:     "dead",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Dead"),
			},
			{
				Name:     "parent",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Parent"),
			},
			{
				Name:     "kids",
				Type:     schema.TypeIntArray,
				Resolver: schema.PathResolver("Kids"),
			},
			{
				Name:     "url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("URL"),
			},
			{
				Name:     "score",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Score"),
			},
			{
				Name:     "title",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Title"),
			},
			{
				Name:     "parts",
				Type:     schema.TypeIntArray,
				Resolver: schema.PathResolver("Parts"),
			},
			{
				Name:     "descendants",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Descendants"),
			},
		},
	}
}
