// Code generated by codegen; DO NOT EDIT.

package users

import (
	"github.com/cloudquery/cloudquery/plugins/source/slack/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Users() *schema.Table {
	return &schema.Table{
		Name:        "slack_users",
		Description: `https://api.slack.com/methods/users.list`,
		Resolver:    fetchUsers,
		Columns: []schema.Column{
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "team_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("TeamID"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "deleted",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Deleted"),
			},
			{
				Name:     "color",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Color"),
			},
			{
				Name:     "real_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("RealName"),
			},
			{
				Name:     "tz",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("TZ"),
			},
			{
				Name:     "tz_label",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("TZLabel"),
			},
			{
				Name:     "tz_offset",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("TZOffset"),
			},
			{
				Name:     "profile",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Profile"),
			},
			{
				Name:     "is_bot",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("IsBot"),
			},
			{
				Name:     "is_admin",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("IsAdmin"),
			},
			{
				Name:     "is_owner",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("IsOwner"),
			},
			{
				Name:     "is_primary_owner",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("IsPrimaryOwner"),
			},
			{
				Name:     "is_restricted",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("IsRestricted"),
			},
			{
				Name:     "is_ultra_restricted",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("IsUltraRestricted"),
			},
			{
				Name:     "is_stranger",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("IsStranger"),
			},
			{
				Name:     "is_app_user",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("IsAppUser"),
			},
			{
				Name:     "is_invited_user",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("IsInvitedUser"),
			},
			{
				Name:     "has_files",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("HasFiles"),
			},
			{
				Name:     "locale",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Locale"),
			},
			{
				Name:     "updated",
				Type:     schema.TypeTimestamp,
				Resolver: client.JSONTimeResolver("Updated"),
			},
			{
				Name:     "enterprise_user",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Enterprise"),
			},
		},

		Relations: []*schema.Table{
			UserPresences(),
		},
	}
}
