// Code generated by codegen; DO NOT EDIT.

package zones

import (
	"github.com/cloudquery/cloudquery/plugins/source/cloudflare/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Zones() *schema.Table {
	return &schema.Table{
		Name:      "cloudflare_zones",
		Resolver:  fetchZones,
		Multiplex: client.AccountMultiplex,
		Columns: []schema.Column{
			{
				Name:        "account_id",
				Type:        schema.TypeString,
				Resolver:    client.ResolveAccountID,
				Description: `The Account ID of the resource.`,
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "development_mode",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("DevMode"),
			},
			{
				Name:     "original_name_servers",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("OriginalNS"),
			},
			{
				Name:     "original_registrar",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("OriginalRegistrar"),
			},
			{
				Name:     "original_dnshost",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("OriginalDNSHost"),
			},
			{
				Name:     "created_on",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedOn"),
			},
			{
				Name:     "modified_on",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("ModifiedOn"),
			},
			{
				Name:     "name_servers",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("NameServers"),
			},
			{
				Name:     "owner",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Owner"),
			},
			{
				Name:     "permissions",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Permissions"),
			},
			{
				Name:     "plan",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Plan"),
			},
			{
				Name:     "plan_pending",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("PlanPending"),
			},
			{
				Name:     "status",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Status"),
			},
			{
				Name:     "paused",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Paused"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
			{
				Name:     "host",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Host"),
			},
			{
				Name:     "vanity_name_servers",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("VanityNS"),
			},
			{
				Name:     "betas",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Betas"),
			},
			{
				Name:     "deactivation_reason",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DeactReason"),
			},
			{
				Name:     "meta",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Meta"),
			},
			{
				Name:     "account",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Account"),
			},
			{
				Name:     "verification_key",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("VerificationKey"),
			},
		},
	}
}
