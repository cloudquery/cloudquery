// Code generated by codegen; DO NOT EDIT.

package acl

import (
	"github.com/cloudquery/cloudquery/plugins/source/tailscale/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Acls() *schema.Table {
	return &schema.Table{
		Name:        "tailscale_acls",
		Description: `https://pkg.go.dev/github.com/tailscale/tailscale-client-go/tailscale#ACL`,
		Resolver:    fetchAcls,
		Columns: []schema.Column{
			{
				Name:     "tailnet",
				Type:     schema.TypeString,
				Resolver: client.ResolveTailnet,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "acls",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ACLs"),
			},
			{
				Name:     "auto_approvers",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("AutoApprovers"),
			},
			{
				Name:     "groups",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Groups"),
			},
			{
				Name:     "hosts",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Hosts"),
			},
			{
				Name:     "tag_owners",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("TagOwners"),
			},
			{
				Name:     "derp_map",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("DERPMap"),
			},
			{
				Name:     "tests",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Tests"),
			},
			{
				Name:     "ssh",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("SSH"),
			},
			{
				Name:     "node_attrs",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("NodeAttrs"),
			},
			{
				Name:     "disable_ipv4",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("DisableIPv4"),
			},
			{
				Name:     "one_cgnat_route",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("OneCGNATRoute"),
			},
			{
				Name:     "randomize_client_port",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("RandomizeClientPort"),
			},
		},
	}
}
