// Code generated by codegen; DO NOT EDIT.

package device

import (
	"github.com/cloudquery/cloudquery/plugins/source/tailscale/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Devices() *schema.Table {
	return &schema.Table{
		Name:        "tailscale_devices",
		Description: `https://pkg.go.dev/github.com/tailscale/tailscale-client-go/tailscale#Device`,
		Resolver:    fetchDevices,
		Columns: []schema.Column{
			{
				Name:     "tailnet",
				Type:     schema.TypeString,
				Resolver: client.ResolveTailnet,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "addresses",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Addresses"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
			},
			{
				Name:     "authorized",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Authorized"),
			},
			{
				Name:     "user",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("User"),
			},
			{
				Name:     "tags",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Tags"),
			},
			{
				Name:     "key_expiry_disabled",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("KeyExpiryDisabled"),
			},
			{
				Name:     "blocks_incoming_connections",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("BlocksIncomingConnections"),
			},
			{
				Name:     "client_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ClientVersion"),
			},
			{
				Name:     "created",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Created"),
			},
			{
				Name:     "expires",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Expires"),
			},
			{
				Name:     "hostname",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Hostname"),
			},
			{
				Name:     "is_external",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("IsExternal"),
			},
			{
				Name:     "last_seen",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("LastSeen"),
			},
			{
				Name:     "machine_key",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("MachineKey"),
			},
			{
				Name:     "node_key",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("NodeKey"),
			},
			{
				Name:     "os",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("OS"),
			},
			{
				Name:     "update_available",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("UpdateAvailable"),
			},
		},

		Relations: []*schema.Table{
			routes(),
		},
	}
}
