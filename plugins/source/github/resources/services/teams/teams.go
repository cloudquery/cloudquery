// Code generated by codegen; DO NOT EDIT.

package teams

import (
	"github.com/cloudquery/cloudquery/plugins/source/github/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Teams() *schema.Table {
	return &schema.Table{
		Name:      "github_teams",
		Resolver:  fetchTeams,
		Multiplex: client.OrgMultiplex,
		Columns: []schema.Column{
			{
				Name:        "org",
				Type:        schema.TypeString,
				Resolver:    client.ResolveOrg,
				Description: `The Github Organization of the resource.`,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "id",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "node_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("NodeID"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Description"),
			},
			{
				Name:     "url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("URL"),
			},
			{
				Name:     "slug",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Slug"),
			},
			{
				Name:     "permission",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Permission"),
			},
			{
				Name:     "permissions",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Permissions"),
			},
			{
				Name:     "privacy",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Privacy"),
			},
			{
				Name:     "members_count",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("MembersCount"),
			},
			{
				Name:     "repos_count",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("ReposCount"),
			},
			{
				Name:     "organization",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Organization"),
			},
			{
				Name:     "html_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("HTMLURL"),
			},
			{
				Name:     "members_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("MembersURL"),
			},
			{
				Name:     "repositories_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("RepositoriesURL"),
			},
			{
				Name:     "parent",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Parent"),
			},
			{
				Name:     "ldap_dn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LDAPDN"),
			},
		},

		Relations: []*schema.Table{
			Members(),
			Repositories(),
		},
	}
}
