// Code generated by codegen; DO NOT EDIT.

package teams

import (
	"github.com/cloudquery/cloudquery/plugins/source/github/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Repositories() *schema.Table {
	return &schema.Table{
		Name:     "github_team_repositories",
		Resolver: fetchRepositories,
		Columns: []schema.Column{
			{
				Name:        "org",
				Type:        schema.TypeString,
				Resolver:    client.ResolveOrg,
				Description: `The Github Organization of the resource.`,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "id",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "created_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedAt.Time"),
			},
			{
				Name:     "pushed_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("PushedAt.Time"),
			},
			{
				Name:     "updated_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("UpdatedAt.Time"),
			},
			{
				Name:     "team_id",
				Type:     schema.TypeInt,
				Resolver: client.ResolveParentColumn("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "node_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("NodeID"),
			},
			{
				Name:     "owner",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Owner"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "full_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("FullName"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Description"),
			},
			{
				Name:     "homepage",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Homepage"),
			},
			{
				Name:     "code_of_conduct",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("CodeOfConduct"),
			},
			{
				Name:     "default_branch",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DefaultBranch"),
			},
			{
				Name:     "master_branch",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("MasterBranch"),
			},
			{
				Name:     "html_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("HTMLURL"),
			},
			{
				Name:     "clone_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CloneURL"),
			},
			{
				Name:     "git_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("GitURL"),
			},
			{
				Name:     "mirror_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("MirrorURL"),
			},
			{
				Name:     "ssh_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SSHURL"),
			},
			{
				Name:     "svn_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SVNURL"),
			},
			{
				Name:     "language",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Language"),
			},
			{
				Name:     "fork",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Fork"),
			},
			{
				Name:     "forks_count",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("ForksCount"),
			},
			{
				Name:     "network_count",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("NetworkCount"),
			},
			{
				Name:     "open_issues_count",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("OpenIssuesCount"),
			},
			{
				Name:     "open_issues",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("OpenIssues"),
			},
			{
				Name:     "stargazers_count",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("StargazersCount"),
			},
			{
				Name:     "subscribers_count",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("SubscribersCount"),
			},
			{
				Name:     "watchers_count",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("WatchersCount"),
			},
			{
				Name:     "watchers",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Watchers"),
			},
			{
				Name:     "size",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Size"),
			},
			{
				Name:     "auto_init",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("AutoInit"),
			},
			{
				Name:     "parent",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Parent"),
			},
			{
				Name:     "source",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Source"),
			},
			{
				Name:     "template_repository",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("TemplateRepository"),
			},
			{
				Name:     "organization",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Organization"),
			},
			{
				Name:     "permissions",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Permissions"),
			},
			{
				Name:     "allow_rebase_merge",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("AllowRebaseMerge"),
			},
			{
				Name:     "allow_update_branch",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("AllowUpdateBranch"),
			},
			{
				Name:     "allow_squash_merge",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("AllowSquashMerge"),
			},
			{
				Name:     "allow_merge_commit",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("AllowMergeCommit"),
			},
			{
				Name:     "allow_auto_merge",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("AllowAutoMerge"),
			},
			{
				Name:     "allow_forking",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("AllowForking"),
			},
			{
				Name:     "delete_branch_on_merge",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("DeleteBranchOnMerge"),
			},
			{
				Name:     "use_squash_pr_title_as_default",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("UseSquashPRTitleAsDefault"),
			},
			{
				Name:     "squash_merge_commit_title",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SquashMergeCommitTitle"),
			},
			{
				Name:     "squash_merge_commit_message",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SquashMergeCommitMessage"),
			},
			{
				Name:     "merge_commit_title",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("MergeCommitTitle"),
			},
			{
				Name:     "merge_commit_message",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("MergeCommitMessage"),
			},
			{
				Name:     "topics",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Topics"),
			},
			{
				Name:     "archived",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Archived"),
			},
			{
				Name:     "disabled",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Disabled"),
			},
			{
				Name:     "license",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("License"),
			},
			{
				Name:     "private",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Private"),
			},
			{
				Name:     "has_issues",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("HasIssues"),
			},
			{
				Name:     "has_wiki",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("HasWiki"),
			},
			{
				Name:     "has_pages",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("HasPages"),
			},
			{
				Name:     "has_projects",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("HasProjects"),
			},
			{
				Name:     "has_downloads",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("HasDownloads"),
			},
			{
				Name:     "is_template",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("IsTemplate"),
			},
			{
				Name:     "license_template",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LicenseTemplate"),
			},
			{
				Name:     "gitignore_template",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("GitignoreTemplate"),
			},
			{
				Name:     "security_and_analysis",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("SecurityAndAnalysis"),
			},
			{
				Name:     "url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("URL"),
			},
			{
				Name:     "archive_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ArchiveURL"),
			},
			{
				Name:     "assignees_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("AssigneesURL"),
			},
			{
				Name:     "blobs_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("BlobsURL"),
			},
			{
				Name:     "branches_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("BranchesURL"),
			},
			{
				Name:     "collaborators_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CollaboratorsURL"),
			},
			{
				Name:     "comments_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CommentsURL"),
			},
			{
				Name:     "commits_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CommitsURL"),
			},
			{
				Name:     "compare_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CompareURL"),
			},
			{
				Name:     "contents_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ContentsURL"),
			},
			{
				Name:     "contributors_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ContributorsURL"),
			},
			{
				Name:     "deployments_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DeploymentsURL"),
			},
			{
				Name:     "downloads_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DownloadsURL"),
			},
			{
				Name:     "events_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("EventsURL"),
			},
			{
				Name:     "forks_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ForksURL"),
			},
			{
				Name:     "git_commits_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("GitCommitsURL"),
			},
			{
				Name:     "git_refs_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("GitRefsURL"),
			},
			{
				Name:     "git_tags_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("GitTagsURL"),
			},
			{
				Name:     "hooks_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("HooksURL"),
			},
			{
				Name:     "issue_comment_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("IssueCommentURL"),
			},
			{
				Name:     "issue_events_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("IssueEventsURL"),
			},
			{
				Name:     "issues_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("IssuesURL"),
			},
			{
				Name:     "keys_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("KeysURL"),
			},
			{
				Name:     "labels_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LabelsURL"),
			},
			{
				Name:     "languages_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LanguagesURL"),
			},
			{
				Name:     "merges_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("MergesURL"),
			},
			{
				Name:     "milestones_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("MilestonesURL"),
			},
			{
				Name:     "notifications_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("NotificationsURL"),
			},
			{
				Name:     "pulls_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("PullsURL"),
			},
			{
				Name:     "releases_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ReleasesURL"),
			},
			{
				Name:     "stargazers_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("StargazersURL"),
			},
			{
				Name:     "statuses_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("StatusesURL"),
			},
			{
				Name:     "subscribers_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SubscribersURL"),
			},
			{
				Name:     "subscription_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("SubscriptionURL"),
			},
			{
				Name:     "tags_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("TagsURL"),
			},
			{
				Name:     "trees_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("TreesURL"),
			},
			{
				Name:     "teams_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("TeamsURL"),
			},
			{
				Name:     "text_matches",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("TextMatches"),
			},
			{
				Name:     "visibility",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Visibility"),
			},
			{
				Name:     "role_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("RoleName"),
			},
		},
	}
}
