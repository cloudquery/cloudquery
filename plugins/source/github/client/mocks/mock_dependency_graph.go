// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cloudquery/plugins/source/github/client (interfaces: DependencyGraphService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	github "github.com/google/go-github/v59/github"
)

// MockDependencyGraphService is a mock of DependencyGraphService interface.
type MockDependencyGraphService struct {
	ctrl     *gomock.Controller
	recorder *MockDependencyGraphServiceMockRecorder
}

// MockDependencyGraphServiceMockRecorder is the mock recorder for MockDependencyGraphService.
type MockDependencyGraphServiceMockRecorder struct {
	mock *MockDependencyGraphService
}

// NewMockDependencyGraphService creates a new mock instance.
func NewMockDependencyGraphService(ctrl *gomock.Controller) *MockDependencyGraphService {
	mock := &MockDependencyGraphService{ctrl: ctrl}
	mock.recorder = &MockDependencyGraphServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDependencyGraphService) EXPECT() *MockDependencyGraphServiceMockRecorder {
	return m.recorder
}

// GetSBOM mocks base method.
func (m *MockDependencyGraphService) GetSBOM(arg0 context.Context, arg1, arg2 string) (*github.SBOM, *github.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSBOM", arg0, arg1, arg2)
	ret0, _ := ret[0].(*github.SBOM)
	ret1, _ := ret[1].(*github.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetSBOM indicates an expected call of GetSBOM.
func (mr *MockDependencyGraphServiceMockRecorder) GetSBOM(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSBOM", reflect.TypeOf((*MockDependencyGraphService)(nil).GetSBOM), arg0, arg1, arg2)
}
