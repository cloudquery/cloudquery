/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.2.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "io.freefair.lombok" version "8.2.2"
    id "com.diffplug.spotless" version "6.20.0"
}

repositories {
    maven {
        url = uri("https://maven.pkg.github.com/cloudquery/plugin-sdk-java")
        credentials {
            username = System.getenv("GITHUB_ACTOR")
            password = System.getenv("GITHUB_TOKEN")
        }
    }
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation "com.fasterxml.jackson.core:jackson-core:2.15.1"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.15.1"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.15.1"
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'com.konghq:unirest-java:3.14.2'
    implementation "io.grpc:grpc-protobuf:1.57.1"
    implementation "io.grpc:grpc-stub:1.57.1"
    implementation "io.grpc:grpc-services:1.57.1"
    implementation "io.grpc:grpc-testing:1.57.1"

    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'

    implementation "io.cloudquery:plugin-pb-java:0.0.6"
    implementation 'io.cloudquery.plugin.sdk:lib:0.0.9'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes "Main-Class": "bitbucket.MainClass"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'bitbucket.MainClass'
    applicationDefaultJvmArgs = ['--add-opens=java.base/java.nio=ALL-UNNAMED']
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

spotless {
    java {
        googleJavaFormat()
    }
}
