// Code generated by codegen; DO NOT EDIT.
package recipes

import "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/keyvault/armkeyvault"

func Armkeyvault() []Table {
	tables := []Table{
		{
      Name: "key",
      Struct: &armkeyvault.Key{},
      ResponseStruct: &armkeyvault.KeysClientListResponse{},
      Client: &armkeyvault.KeysClient{},
      ListFunc: (&armkeyvault.KeysClient{}).NewListPager,
			NewFunc: armkeyvault.NewKeysClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys",
		},
		{
      Name: "secret",
      Struct: &armkeyvault.Secret{},
      ResponseStruct: &armkeyvault.SecretsClientListResponse{},
      Client: &armkeyvault.SecretsClient{},
      ListFunc: (&armkeyvault.SecretsClient{}).NewListPager,
			NewFunc: armkeyvault.NewSecretsClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets",
		},
		{
      Name: "resource",
      Struct: &armkeyvault.Resource{},
      ResponseStruct: &armkeyvault.VaultsClientListResponse{},
      Client: &armkeyvault.VaultsClient{},
      ListFunc: (&armkeyvault.VaultsClient{}).NewListPager,
			NewFunc: armkeyvault.NewVaultsClient,
			URL: "/subscriptions/{subscriptionId}/resources",
		},
	}

	for i := range tables {
		tables[i].Service = "armkeyvault"
		tables[i].Template = "list"
	}
	return tables
}

func init() {
  Tables = append(Tables, Armkeyvault()...)
}