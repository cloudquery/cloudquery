// Code generated by codegen; DO NOT EDIT.
package recipes

import "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/peering/armpeering"

func Armpeering() []Table {
	tables := []Table{
		{
      Name: "service_country",
      Struct: &armpeering.ServiceCountry{},
      ResponseStruct: &armpeering.ServiceCountriesClientListResponse{},
      Client: &armpeering.ServiceCountriesClient{},
      ListFunc: (&armpeering.ServiceCountriesClient{}).NewListPager,
			NewFunc: armpeering.NewServiceCountriesClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceCountries",
		},
		{
      Name: "service_provider",
      Struct: &armpeering.ServiceProvider{},
      ResponseStruct: &armpeering.ServiceProvidersClientListResponse{},
      Client: &armpeering.ServiceProvidersClient{},
      ListFunc: (&armpeering.ServiceProvidersClient{}).NewListPager,
			NewFunc: armpeering.NewServiceProvidersClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceProviders",
		},
		{
      Name: "service_location",
      Struct: &armpeering.ServiceLocation{},
      ResponseStruct: &armpeering.ServiceLocationsClientListResponse{},
      Client: &armpeering.ServiceLocationsClient{},
      ListFunc: (&armpeering.ServiceLocationsClient{}).NewListPager,
			NewFunc: armpeering.NewServiceLocationsClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceLocations",
		},
	}

	for i := range tables {
		tables[i].Service = "armpeering"
		tables[i].Template = "list"
	}
	return tables
}

func init() {
  Tables = append(Tables, Armpeering()...)
}