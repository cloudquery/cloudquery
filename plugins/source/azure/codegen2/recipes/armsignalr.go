// Code generated by codegen; DO NOT EDIT.
package recipes

import "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/signalr/armsignalr"

func Armsignalr() []Table {
	tables := []Table{
		{
      Name: "custom_certificate",
      Struct: &armsignalr.CustomCertificate{},
      ResponseStruct: &armsignalr.CustomCertificatesClientListResponse{},
      Client: &armsignalr.CustomCertificatesClient{},
      ListFunc: (&armsignalr.CustomCertificatesClient{}).NewListPager,
			NewFunc: armsignalr.NewCustomCertificatesClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/customCertificates",
		},
		{
      Name: "custom_domain",
      Struct: &armsignalr.CustomDomain{},
      ResponseStruct: &armsignalr.CustomDomainsClientListResponse{},
      Client: &armsignalr.CustomDomainsClient{},
      ListFunc: (&armsignalr.CustomDomainsClient{}).NewListPager,
			NewFunc: armsignalr.NewCustomDomainsClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/customDomains",
		},
		{
      Name: "private_endpoint_connection",
      Struct: &armsignalr.PrivateEndpointConnection{},
      ResponseStruct: &armsignalr.PrivateEndpointConnectionsClientListResponse{},
      Client: &armsignalr.PrivateEndpointConnectionsClient{},
      ListFunc: (&armsignalr.PrivateEndpointConnectionsClient{}).NewListPager,
			NewFunc: armsignalr.NewPrivateEndpointConnectionsClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/privateEndpointConnections",
		},
		{
      Name: "private_link_resource",
      Struct: &armsignalr.PrivateLinkResource{},
      ResponseStruct: &armsignalr.PrivateLinkResourcesClientListResponse{},
      Client: &armsignalr.PrivateLinkResourcesClient{},
      ListFunc: (&armsignalr.PrivateLinkResourcesClient{}).NewListPager,
			NewFunc: armsignalr.NewPrivateLinkResourcesClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/privateLinkResources",
		},
		{
      Name: "shared_private_link_resource",
      Struct: &armsignalr.SharedPrivateLinkResource{},
      ResponseStruct: &armsignalr.SharedPrivateLinkResourcesClientListResponse{},
      Client: &armsignalr.SharedPrivateLinkResourcesClient{},
      ListFunc: (&armsignalr.SharedPrivateLinkResourcesClient{}).NewListPager,
			NewFunc: armsignalr.NewSharedPrivateLinkResourcesClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/sharedPrivateLinkResources",
		},
		{
      Name: "usage",
      Struct: &armsignalr.Usage{},
      ResponseStruct: &armsignalr.UsagesClientListResponse{},
      Client: &armsignalr.UsagesClient{},
      ListFunc: (&armsignalr.UsagesClient{}).NewListPager,
			NewFunc: armsignalr.NewUsagesClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.SignalRService/locations/{location}/usages",
		},
	}

	for i := range tables {
		tables[i].Service = "armsignalr"
		tables[i].Template = "list"
	}
	return tables
}

func init() {
  Tables = append(Tables, Armsignalr()...)
}