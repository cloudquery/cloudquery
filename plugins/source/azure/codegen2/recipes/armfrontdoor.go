// Code generated by codegen; DO NOT EDIT.
package recipes

import "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/frontdoor/armfrontdoor"

func Armfrontdoor() []Table {
	tables := []Table{
		{
      Name: "web_application_firewall_policy",
      Struct: &armfrontdoor.WebApplicationFirewallPolicy{},
      ResponseStruct: &armfrontdoor.PoliciesClientListResponse{},
      Client: &armfrontdoor.PoliciesClient{},
      ListFunc: (&armfrontdoor.PoliciesClient{}).NewListPager,
			NewFunc: armfrontdoor.NewPoliciesClient,
		},
		{
      Name: "preconfigured_endpoint",
      Struct: &armfrontdoor.PreconfiguredEndpoint{},
      ResponseStruct: &armfrontdoor.PreconfiguredEndpointsClientListResponse{},
      Client: &armfrontdoor.PreconfiguredEndpointsClient{},
      ListFunc: (&armfrontdoor.PreconfiguredEndpointsClient{}).NewListPager,
			NewFunc: armfrontdoor.NewPreconfiguredEndpointsClient,
		},
		{
      Name: "front_door",
      Struct: &armfrontdoor.FrontDoor{},
      ResponseStruct: &armfrontdoor.FrontDoorsClientListResponse{},
      Client: &armfrontdoor.FrontDoorsClient{},
      ListFunc: (&armfrontdoor.FrontDoorsClient{}).NewListPager,
			NewFunc: armfrontdoor.NewFrontDoorsClient,
		},
		{
      Name: "profile",
      Struct: &armfrontdoor.Profile{},
      ResponseStruct: &armfrontdoor.NetworkExperimentProfilesClientListResponse{},
      Client: &armfrontdoor.NetworkExperimentProfilesClient{},
      ListFunc: (&armfrontdoor.NetworkExperimentProfilesClient{}).NewListPager,
			NewFunc: armfrontdoor.NewNetworkExperimentProfilesClient,
		},
		{
      Name: "managed_rule_set_definition",
      Struct: &armfrontdoor.ManagedRuleSetDefinition{},
      ResponseStruct: &armfrontdoor.ManagedRuleSetsClientListResponse{},
      Client: &armfrontdoor.ManagedRuleSetsClient{},
      ListFunc: (&armfrontdoor.ManagedRuleSetsClient{}).NewListPager,
			NewFunc: armfrontdoor.NewManagedRuleSetsClient,
		},
	}

	for i := range tables {
		tables[i].Service = "armfrontdoor"
		tables[i].Template = "list"
	}
	return tables
}

func init() {
  Tables = append(Tables, Armfrontdoor()...)
}