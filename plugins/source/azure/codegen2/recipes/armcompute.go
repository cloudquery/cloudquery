// Code generated by codegen; DO NOT EDIT.
package recipes

import "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute"

func Armcompute() []Table {
	tables := []Table{
		{
      Name: "availability_set",
      Struct: &armcompute.AvailabilitySet{},
      ResponseStruct: &armcompute.AvailabilitySetsClientListResponse{},
      Client: &armcompute.AvailabilitySetsClient{},
      ListFunc: (&armcompute.AvailabilitySetsClient{}).NewListPager,
			NewFunc: armcompute.NewAvailabilitySetsClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets",
		},
		{
      Name: "role_instance",
      Struct: &armcompute.RoleInstance{},
      ResponseStruct: &armcompute.CloudServiceRoleInstancesClientListResponse{},
      Client: &armcompute.CloudServiceRoleInstancesClient{},
      ListFunc: (&armcompute.CloudServiceRoleInstancesClient{}).NewListPager,
			NewFunc: armcompute.NewCloudServiceRoleInstancesClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances",
		},
		{
      Name: "cloud_service_role",
      Struct: &armcompute.CloudServiceRole{},
      ResponseStruct: &armcompute.CloudServiceRolesClientListResponse{},
      Client: &armcompute.CloudServiceRolesClient{},
      ListFunc: (&armcompute.CloudServiceRolesClient{}).NewListPager,
			NewFunc: armcompute.NewCloudServiceRolesClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roles",
		},
		{
      Name: "cloud_service",
      Struct: &armcompute.CloudService{},
      ResponseStruct: &armcompute.CloudServicesClientListResponse{},
      Client: &armcompute.CloudServicesClient{},
      ListFunc: (&armcompute.CloudServicesClient{}).NewListPager,
			NewFunc: armcompute.NewCloudServicesClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices",
		},
		{
      Name: "disk_access",
      Struct: &armcompute.DiskAccess{},
      ResponseStruct: &armcompute.DiskAccessesClientListResponse{},
      Client: &armcompute.DiskAccessesClient{},
      ListFunc: (&armcompute.DiskAccessesClient{}).NewListPager,
			NewFunc: armcompute.NewDiskAccessesClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/diskAccesses",
		},
		{
      Name: "disk_encryption_set",
      Struct: &armcompute.DiskEncryptionSet{},
      ResponseStruct: &armcompute.DiskEncryptionSetsClientListResponse{},
      Client: &armcompute.DiskEncryptionSetsClient{},
      ListFunc: (&armcompute.DiskEncryptionSetsClient{}).NewListPager,
			NewFunc: armcompute.NewDiskEncryptionSetsClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/diskEncryptionSets",
		},
		{
      Name: "disk",
      Struct: &armcompute.Disk{},
      ResponseStruct: &armcompute.DisksClientListResponse{},
      Client: &armcompute.DisksClient{},
      ListFunc: (&armcompute.DisksClient{}).NewListPager,
			NewFunc: armcompute.NewDisksClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/disks",
		},
		{
      Name: "gallery",
      Struct: &armcompute.Gallery{},
      ResponseStruct: &armcompute.GalleriesClientListResponse{},
      Client: &armcompute.GalleriesClient{},
      ListFunc: (&armcompute.GalleriesClient{}).NewListPager,
			NewFunc: armcompute.NewGalleriesClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/galleries",
		},
		{
      Name: "image",
      Struct: &armcompute.Image{},
      ResponseStruct: &armcompute.ImagesClientListResponse{},
      Client: &armcompute.ImagesClient{},
      ListFunc: (&armcompute.ImagesClient{}).NewListPager,
			NewFunc: armcompute.NewImagesClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/images",
		},
		{
      Name: "resource_sku",
      Struct: &armcompute.ResourceSKU{},
      ResponseStruct: &armcompute.ResourceSKUsClientListResponse{},
      Client: &armcompute.ResourceSKUsClient{},
      ListFunc: (&armcompute.ResourceSKUsClient{}).NewListPager,
			NewFunc: armcompute.NewResourceSKUsClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/skus",
		},
		{
      Name: "restore_point_collection",
      Struct: &armcompute.RestorePointCollection{},
      ResponseStruct: &armcompute.RestorePointCollectionsClientListResponse{},
      Client: &armcompute.RestorePointCollectionsClient{},
      ListFunc: (&armcompute.RestorePointCollectionsClient{}).NewListPager,
			NewFunc: armcompute.NewRestorePointCollectionsClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections",
		},
		{
      Name: "shared_gallery",
      Struct: &armcompute.SharedGallery{},
      ResponseStruct: &armcompute.SharedGalleriesClientListResponse{},
      Client: &armcompute.SharedGalleriesClient{},
      ListFunc: (&armcompute.SharedGalleriesClient{}).NewListPager,
			NewFunc: armcompute.NewSharedGalleriesClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries",
		},
		{
      Name: "shared_gallery_image_version",
      Struct: &armcompute.SharedGalleryImageVersion{},
      ResponseStruct: &armcompute.SharedGalleryImageVersionsClientListResponse{},
      Client: &armcompute.SharedGalleryImageVersionsClient{},
      ListFunc: (&armcompute.SharedGalleryImageVersionsClient{}).NewListPager,
			NewFunc: armcompute.NewSharedGalleryImageVersionsClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries/{galleryUniqueName}/images/{galleryImageName}/versions",
		},
		{
      Name: "shared_gallery_image",
      Struct: &armcompute.SharedGalleryImage{},
      ResponseStruct: &armcompute.SharedGalleryImagesClientListResponse{},
      Client: &armcompute.SharedGalleryImagesClient{},
      ListFunc: (&armcompute.SharedGalleryImagesClient{}).NewListPager,
			NewFunc: armcompute.NewSharedGalleryImagesClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries/{galleryUniqueName}/images",
		},
		{
      Name: "snapshot",
      Struct: &armcompute.Snapshot{},
      ResponseStruct: &armcompute.SnapshotsClientListResponse{},
      Client: &armcompute.SnapshotsClient{},
      ListFunc: (&armcompute.SnapshotsClient{}).NewListPager,
			NewFunc: armcompute.NewSnapshotsClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/snapshots",
		},
		{
      Name: "usage",
      Struct: &armcompute.Usage{},
      ResponseStruct: &armcompute.UsageClientListResponse{},
      Client: &armcompute.UsageClient{},
      ListFunc: (&armcompute.UsageClient{}).NewListPager,
			NewFunc: armcompute.NewUsageClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/usages",
		},
		{
      Name: "run_command_document_base",
      Struct: &armcompute.RunCommandDocumentBase{},
      ResponseStruct: &armcompute.VirtualMachineRunCommandsClientListResponse{},
      Client: &armcompute.VirtualMachineRunCommandsClient{},
      ListFunc: (&armcompute.VirtualMachineRunCommandsClient{}).NewListPager,
			NewFunc: armcompute.NewVirtualMachineRunCommandsClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/runCommands",
		},
		{
      Name: "virtual_machine_scale_set_extension",
      Struct: &armcompute.VirtualMachineScaleSetExtension{},
      ResponseStruct: &armcompute.VirtualMachineScaleSetExtensionsClientListResponse{},
      Client: &armcompute.VirtualMachineScaleSetExtensionsClient{},
      ListFunc: (&armcompute.VirtualMachineScaleSetExtensionsClient{}).NewListPager,
			NewFunc: armcompute.NewVirtualMachineScaleSetExtensionsClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions",
		},
		{
      Name: "virtual_machine_run_command",
      Struct: &armcompute.VirtualMachineRunCommand{},
      ResponseStruct: &armcompute.VirtualMachineScaleSetVMRunCommandsClientListResponse{},
      Client: &armcompute.VirtualMachineScaleSetVMRunCommandsClient{},
      ListFunc: (&armcompute.VirtualMachineScaleSetVMRunCommandsClient{}).NewListPager,
			NewFunc: armcompute.NewVirtualMachineScaleSetVMRunCommandsClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands",
		},
		{
      Name: "virtual_machine_scale_set_vm",
      Struct: &armcompute.VirtualMachineScaleSetVM{},
      ResponseStruct: &armcompute.VirtualMachineScaleSetVMsClientListResponse{},
      Client: &armcompute.VirtualMachineScaleSetVMsClient{},
      ListFunc: (&armcompute.VirtualMachineScaleSetVMsClient{}).NewListPager,
			NewFunc: armcompute.NewVirtualMachineScaleSetVMsClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines",
		},
		{
      Name: "virtual_machine_scale_set",
      Struct: &armcompute.VirtualMachineScaleSet{},
      ResponseStruct: &armcompute.VirtualMachineScaleSetsClientListResponse{},
      Client: &armcompute.VirtualMachineScaleSetsClient{},
      ListFunc: (&armcompute.VirtualMachineScaleSetsClient{}).NewListPager,
			NewFunc: armcompute.NewVirtualMachineScaleSetsClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets",
		},
		{
      Name: "virtual_machine_size",
      Struct: &armcompute.VirtualMachineSize{},
      ResponseStruct: &armcompute.VirtualMachineSizesClientListResponse{},
      Client: &armcompute.VirtualMachineSizesClient{},
      ListFunc: (&armcompute.VirtualMachineSizesClient{}).NewListPager,
			NewFunc: armcompute.NewVirtualMachineSizesClient,
			URL: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/vmSizes",
		},
		{
      Name: "virtual_machine",
      Struct: &armcompute.VirtualMachine{},
      ResponseStruct: &armcompute.VirtualMachinesClientListResponse{},
      Client: &armcompute.VirtualMachinesClient{},
      ListFunc: (&armcompute.VirtualMachinesClient{}).NewListPager,
			NewFunc: armcompute.NewVirtualMachinesClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines",
		},
	}

	for i := range tables {
		tables[i].Service = "armcompute"
		tables[i].Template = "list"
	}
	return tables
}

func init() {
  Tables = append(Tables, Armcompute()...)
}