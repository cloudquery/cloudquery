// Code generated by codegen; DO NOT EDIT.
package recipes

import "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/securityinsights/armsecurityinsights"

func Armsecurityinsights() []Table {
	tables := []Table{
		{
      Name: "automation_rule",
      Struct: &armsecurityinsights.AutomationRule{},
      ResponseStruct: &armsecurityinsights.AutomationRulesClientListResponse{},
      Client: &armsecurityinsights.AutomationRulesClient{},
      ListFunc: (&armsecurityinsights.AutomationRulesClient{}).NewListPager,
			NewFunc: armsecurityinsights.NewAutomationRulesClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/automationRules",
		},
		{
      Name: "bookmark",
      Struct: &armsecurityinsights.Bookmark{},
      ResponseStruct: &armsecurityinsights.BookmarksClientListResponse{},
      Client: &armsecurityinsights.BookmarksClient{},
      ListFunc: (&armsecurityinsights.BookmarksClient{}).NewListPager,
			NewFunc: armsecurityinsights.NewBookmarksClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/bookmarks",
		},
		{
      Name: "incident_comment",
      Struct: &armsecurityinsights.IncidentComment{},
      ResponseStruct: &armsecurityinsights.IncidentCommentsClientListResponse{},
      Client: &armsecurityinsights.IncidentCommentsClient{},
      ListFunc: (&armsecurityinsights.IncidentCommentsClient{}).NewListPager,
			NewFunc: armsecurityinsights.NewIncidentCommentsClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/comments",
		},
		{
      Name: "relation",
      Struct: &armsecurityinsights.Relation{},
      ResponseStruct: &armsecurityinsights.IncidentRelationsClientListResponse{},
      Client: &armsecurityinsights.IncidentRelationsClient{},
      ListFunc: (&armsecurityinsights.IncidentRelationsClient{}).NewListPager,
			NewFunc: armsecurityinsights.NewIncidentRelationsClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/relations",
		},
		{
      Name: "incident",
      Struct: &armsecurityinsights.Incident{},
      ResponseStruct: &armsecurityinsights.IncidentsClientListResponse{},
      Client: &armsecurityinsights.IncidentsClient{},
      ListFunc: (&armsecurityinsights.IncidentsClient{}).NewListPager,
			NewFunc: armsecurityinsights.NewIncidentsClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents",
		},
		{
      Name: "watchlist_item",
      Struct: &armsecurityinsights.WatchlistItem{},
      ResponseStruct: &armsecurityinsights.WatchlistItemsClientListResponse{},
      Client: &armsecurityinsights.WatchlistItemsClient{},
      ListFunc: (&armsecurityinsights.WatchlistItemsClient{}).NewListPager,
			NewFunc: armsecurityinsights.NewWatchlistItemsClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/watchlists/{watchlistAlias}/watchlistItems",
		},
		{
      Name: "watchlist",
      Struct: &armsecurityinsights.Watchlist{},
      ResponseStruct: &armsecurityinsights.WatchlistsClientListResponse{},
      Client: &armsecurityinsights.WatchlistsClient{},
      ListFunc: (&armsecurityinsights.WatchlistsClient{}).NewListPager,
			NewFunc: armsecurityinsights.NewWatchlistsClient,
			URL: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/watchlists",
		},
	}

	for i := range tables {
		tables[i].Service = "armsecurityinsights"
		tables[i].Template = "list"
	}
	return tables
}

func init() {
  Tables = append(Tables, Armsecurityinsights()...)
}