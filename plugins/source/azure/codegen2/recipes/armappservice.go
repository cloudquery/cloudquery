// Code generated by codegen; DO NOT EDIT.
package recipes

import "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/appservice/armappservice"

func Armappservice() []Table {
	tables := []Table{
		{
      Name: "app_certificate",
      Struct: &armappservice.AppCertificate{},
      ResponseStruct: &armappservice.CertificatesClientListResponse{},
      Client: &armappservice.CertificatesClient{},
      ListFunc: (&armappservice.CertificatesClient{}).NewListPager,
			NewFunc: armappservice.NewCertificatesClient,
		},
		{
      Name: "recommendation",
      Struct: &armappservice.Recommendation{},
      ResponseStruct: &armappservice.RecommendationsClientListResponse{},
      Client: &armappservice.RecommendationsClient{},
      ListFunc: (&armappservice.RecommendationsClient{}).NewListPager,
			NewFunc: armappservice.NewRecommendationsClient,
		},
		{
      Name: "deleted_site",
      Struct: &armappservice.DeletedSite{},
      ResponseStruct: &armappservice.DeletedWebAppsClientListResponse{},
      Client: &armappservice.DeletedWebAppsClient{},
      ListFunc: (&armappservice.DeletedWebAppsClient{}).NewListPager,
			NewFunc: armappservice.NewDeletedWebAppsClient,
		},
		{
      Name: "site",
      Struct: &armappservice.Site{},
      ResponseStruct: &armappservice.WebAppsClientListResponse{},
      Client: &armappservice.WebAppsClient{},
      ListFunc: (&armappservice.WebAppsClient{}).NewListPager,
			NewFunc: armappservice.NewWebAppsClient,
		},
		{
      Name: "environment_resource",
      Struct: &armappservice.EnvironmentResource{},
      ResponseStruct: &armappservice.EnvironmentsClientListResponse{},
      Client: &armappservice.EnvironmentsClient{},
      ListFunc: (&armappservice.EnvironmentsClient{}).NewListPager,
			NewFunc: armappservice.NewEnvironmentsClient,
		},
		{
      Name: "domain",
      Struct: &armappservice.Domain{},
      ResponseStruct: &armappservice.DomainsClientListResponse{},
      Client: &armappservice.DomainsClient{},
      ListFunc: (&armappservice.DomainsClient{}).NewListPager,
			NewFunc: armappservice.NewDomainsClient,
		},
		{
      Name: "resource_health_metadata",
      Struct: &armappservice.ResourceHealthMetadata{},
      ResponseStruct: &armappservice.ResourceHealthMetadataClientListResponse{},
      Client: &armappservice.ResourceHealthMetadataClient{},
      ListFunc: (&armappservice.ResourceHealthMetadataClient{}).NewListPager,
			NewFunc: armappservice.NewResourceHealthMetadataClient,
		},
		{
      Name: "static_site_arm_resource",
      Struct: &armappservice.StaticSiteARMResource{},
      ResponseStruct: &armappservice.StaticSitesClientListResponse{},
      Client: &armappservice.StaticSitesClient{},
      ListFunc: (&armappservice.StaticSitesClient{}).NewListPager,
			NewFunc: armappservice.NewStaticSitesClient,
		},
		{
      Name: "top_level_domain",
      Struct: &armappservice.TopLevelDomain{},
      ResponseStruct: &armappservice.TopLevelDomainsClientListResponse{},
      Client: &armappservice.TopLevelDomainsClient{},
      ListFunc: (&armappservice.TopLevelDomainsClient{}).NewListPager,
			NewFunc: armappservice.NewTopLevelDomainsClient,
		},
		{
      Name: "certificate_order",
      Struct: &armappservice.CertificateOrder{},
      ResponseStruct: &armappservice.CertificateOrdersClientListResponse{},
      Client: &armappservice.CertificateOrdersClient{},
      ListFunc: (&armappservice.CertificateOrdersClient{}).NewListPager,
			NewFunc: armappservice.NewCertificateOrdersClient,
		},
		{
      Name: "plan",
      Struct: &armappservice.Plan{},
      ResponseStruct: &armappservice.PlansClientListResponse{},
      Client: &armappservice.PlansClient{},
      ListFunc: (&armappservice.PlansClient{}).NewListPager,
			NewFunc: armappservice.NewPlansClient,
		},
	}

	for i := range tables {
		tables[i].Service = "armappservice"
		tables[i].Template = "list"
	}
	return tables
}

func init() {
  Tables = append(Tables, Armappservice()...)
}