// Code generated by codegen; DO NOT EDIT.
package recipes

import "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/avs/armavs"

func Armavs() []Table {
	tables := []Table{
		{
      Name: "addon",
      Struct: &armavs.Addon{},
      ResponseStruct: &armavs.AddonsClientListResponse{},
      Client: &armavs.AddonsClient{},
      ListFunc: (&armavs.AddonsClient{}).NewListPager,
			NewFunc: armavs.NewAddonsClient,
		},
		{
      Name: "cloud_link",
      Struct: &armavs.CloudLink{},
      ResponseStruct: &armavs.CloudLinksClientListResponse{},
      Client: &armavs.CloudLinksClient{},
      ListFunc: (&armavs.CloudLinksClient{}).NewListPager,
			NewFunc: armavs.NewCloudLinksClient,
		},
		{
      Name: "private_cloud",
      Struct: &armavs.PrivateCloud{},
      ResponseStruct: &armavs.PrivateCloudsClientListResponse{},
      Client: &armavs.PrivateCloudsClient{},
      ListFunc: (&armavs.PrivateCloudsClient{}).NewListPager,
			NewFunc: armavs.NewPrivateCloudsClient,
		},
		{
      Name: "script_package",
      Struct: &armavs.ScriptPackage{},
      ResponseStruct: &armavs.ScriptPackagesClientListResponse{},
      Client: &armavs.ScriptPackagesClient{},
      ListFunc: (&armavs.ScriptPackagesClient{}).NewListPager,
			NewFunc: armavs.NewScriptPackagesClient,
		},
		{
      Name: "workload_network",
      Struct: &armavs.WorkloadNetwork{},
      ResponseStruct: &armavs.WorkloadNetworksClientListResponse{},
      Client: &armavs.WorkloadNetworksClient{},
      ListFunc: (&armavs.WorkloadNetworksClient{}).NewListPager,
			NewFunc: armavs.NewWorkloadNetworksClient,
		},
		{
      Name: "virtual_machine",
      Struct: &armavs.VirtualMachine{},
      ResponseStruct: &armavs.VirtualMachinesClientListResponse{},
      Client: &armavs.VirtualMachinesClient{},
      ListFunc: (&armavs.VirtualMachinesClient{}).NewListPager,
			NewFunc: armavs.NewVirtualMachinesClient,
		},
		{
      Name: "cluster",
      Struct: &armavs.Cluster{},
      ResponseStruct: &armavs.ClustersClientListResponse{},
      Client: &armavs.ClustersClient{},
      ListFunc: (&armavs.ClustersClient{}).NewListPager,
			NewFunc: armavs.NewClustersClient,
		},
		{
      Name: "placement_policy",
      Struct: &armavs.PlacementPolicy{},
      ResponseStruct: &armavs.PlacementPoliciesClientListResponse{},
      Client: &armavs.PlacementPoliciesClient{},
      ListFunc: (&armavs.PlacementPoliciesClient{}).NewListPager,
			NewFunc: armavs.NewPlacementPoliciesClient,
		},
		{
      Name: "express_route_authorization",
      Struct: &armavs.ExpressRouteAuthorization{},
      ResponseStruct: &armavs.AuthorizationsClientListResponse{},
      Client: &armavs.AuthorizationsClient{},
      ListFunc: (&armavs.AuthorizationsClient{}).NewListPager,
			NewFunc: armavs.NewAuthorizationsClient,
		},
		{
      Name: "datastore",
      Struct: &armavs.Datastore{},
      ResponseStruct: &armavs.DatastoresClientListResponse{},
      Client: &armavs.DatastoresClient{},
      ListFunc: (&armavs.DatastoresClient{}).NewListPager,
			NewFunc: armavs.NewDatastoresClient,
		},
		{
      Name: "global_reach_connection",
      Struct: &armavs.GlobalReachConnection{},
      ResponseStruct: &armavs.GlobalReachConnectionsClientListResponse{},
      Client: &armavs.GlobalReachConnectionsClient{},
      ListFunc: (&armavs.GlobalReachConnectionsClient{}).NewListPager,
			NewFunc: armavs.NewGlobalReachConnectionsClient,
		},
		{
      Name: "operation",
      Struct: &armavs.Operation{},
      ResponseStruct: &armavs.OperationsClientListResponse{},
      Client: &armavs.OperationsClient{},
      ListFunc: (&armavs.OperationsClient{}).NewListPager,
			NewFunc: armavs.NewOperationsClient,
		},
		{
      Name: "script_cmdlet",
      Struct: &armavs.ScriptCmdlet{},
      ResponseStruct: &armavs.ScriptCmdletsClientListResponse{},
      Client: &armavs.ScriptCmdletsClient{},
      ListFunc: (&armavs.ScriptCmdletsClient{}).NewListPager,
			NewFunc: armavs.NewScriptCmdletsClient,
		},
		{
      Name: "script_execution",
      Struct: &armavs.ScriptExecution{},
      ResponseStruct: &armavs.ScriptExecutionsClientListResponse{},
      Client: &armavs.ScriptExecutionsClient{},
      ListFunc: (&armavs.ScriptExecutionsClient{}).NewListPager,
			NewFunc: armavs.NewScriptExecutionsClient,
		},
		{
      Name: "hcx_enterprise_site",
      Struct: &armavs.HcxEnterpriseSite{},
      ResponseStruct: &armavs.HcxEnterpriseSitesClientListResponse{},
      Client: &armavs.HcxEnterpriseSitesClient{},
      ListFunc: (&armavs.HcxEnterpriseSitesClient{}).NewListPager,
			NewFunc: armavs.NewHcxEnterpriseSitesClient,
		},
	}

	for i := range tables {
		tables[i].Service = "armavs"
		tables[i].Template = "list"
	}
	return tables
}

func init() {
  Tables = append(Tables, Armavs()...)
}