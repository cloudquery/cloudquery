// Code generated by codegen; DO NOT EDIT.
package recipes

import "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/machinelearning/armmachinelearning"

func Armmachinelearning() []Table {
	tables := []Table{
		{
      Name: "resource_quota",
      Struct: &armmachinelearning.ResourceQuota{},
      ResponseStruct: &armmachinelearning.QuotasClientListResponse{},
      Client: &armmachinelearning.QuotasClient{},
      ListFunc: (&armmachinelearning.QuotasClient{}).NewListPager,
			NewFunc: armmachinelearning.NewQuotasClient,
		},
		{
      Name: "workspace_sku",
      Struct: &armmachinelearning.WorkspaceSKU{},
      ResponseStruct: &armmachinelearning.WorkspaceSKUsClientListResponse{},
      Client: &armmachinelearning.WorkspaceSKUsClient{},
      ListFunc: (&armmachinelearning.WorkspaceSKUsClient{}).NewListPager,
			NewFunc: armmachinelearning.NewWorkspaceSKUsClient,
		},
		{
      Name: "private_endpoint_connection",
      Struct: &armmachinelearning.PrivateEndpointConnection{},
      ResponseStruct: &armmachinelearning.PrivateEndpointConnectionsClientListResponse{},
      Client: &armmachinelearning.PrivateEndpointConnectionsClient{},
      ListFunc: (&armmachinelearning.PrivateEndpointConnectionsClient{}).NewListPager,
			NewFunc: armmachinelearning.NewPrivateEndpointConnectionsClient,
		},
		{
      Name: "aml_user_feature",
      Struct: &armmachinelearning.AmlUserFeature{},
      ResponseStruct: &armmachinelearning.WorkspaceFeaturesClientListResponse{},
      Client: &armmachinelearning.WorkspaceFeaturesClient{},
      ListFunc: (&armmachinelearning.WorkspaceFeaturesClient{}).NewListPager,
			NewFunc: armmachinelearning.NewWorkspaceFeaturesClient,
		},
		{
      Name: "operation",
      Struct: &armmachinelearning.Operation{},
      ResponseStruct: &armmachinelearning.OperationsClientListResponse{},
      Client: &armmachinelearning.OperationsClient{},
      ListFunc: (&armmachinelearning.OperationsClient{}).NewListPager,
			NewFunc: armmachinelearning.NewOperationsClient,
		},
		{
      Name: "workspace_connection",
      Struct: &armmachinelearning.WorkspaceConnection{},
      ResponseStruct: &armmachinelearning.WorkspaceConnectionsClientListResponse{},
      Client: &armmachinelearning.WorkspaceConnectionsClient{},
      ListFunc: (&armmachinelearning.WorkspaceConnectionsClient{}).NewListPager,
			NewFunc: armmachinelearning.NewWorkspaceConnectionsClient,
		},
		{
      Name: "compute_resource",
      Struct: &armmachinelearning.ComputeResource{},
      ResponseStruct: &armmachinelearning.ComputeClientListResponse{},
      Client: &armmachinelearning.ComputeClient{},
      ListFunc: (&armmachinelearning.ComputeClient{}).NewListPager,
			NewFunc: armmachinelearning.NewComputeClient,
		},
		{
      Name: "usage",
      Struct: &armmachinelearning.Usage{},
      ResponseStruct: &armmachinelearning.UsagesClientListResponse{},
      Client: &armmachinelearning.UsagesClient{},
      ListFunc: (&armmachinelearning.UsagesClient{}).NewListPager,
			NewFunc: armmachinelearning.NewUsagesClient,
		},
	}

	for i := range tables {
		tables[i].Service = "armmachinelearning"
		tables[i].Template = "list"
	}
	return tables
}

func init() {
  Tables = append(Tables, Armmachinelearning()...)
}