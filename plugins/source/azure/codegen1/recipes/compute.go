// Code generated by codegen0; DO NOT EDIT.
package recipes

import "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute"

func Armcompute() []*Table {
	tables := []*Table{
		{
			NewFunc:        armcompute.NewCloudServicesClient,
			PkgPath:        "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute",
			URL:            "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/cloudServices",
			Namespace:      "Microsoft.Compute",
			Multiplex:      `client.SubscriptionMultiplexRegisteredNamespace(client.NamespaceMicrosoft_Compute)`,
			Pager:          `NewListAllPager`,
			ResponseStruct: "CloudServicesClientListAllResponse",
		},
		{
			NewFunc:        armcompute.NewDiskAccessesClient,
			PkgPath:        "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute",
			URL:            "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/diskAccesses",
			Namespace:      "Microsoft.Compute",
			Multiplex:      `client.SubscriptionMultiplexRegisteredNamespace(client.NamespaceMicrosoft_Compute)`,
			Pager:          `NewListPager`,
			ResponseStruct: "DiskAccessesClientListResponse",
		},
		{
			NewFunc:        armcompute.NewDiskEncryptionSetsClient,
			PkgPath:        "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute",
			URL:            "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/diskEncryptionSets",
			Namespace:      "Microsoft.Compute",
			Multiplex:      `client.SubscriptionMultiplexRegisteredNamespace(client.NamespaceMicrosoft_Compute)`,
			Pager:          `NewListPager`,
			ResponseStruct: "DiskEncryptionSetsClientListResponse",
		},
		{
			NewFunc:        armcompute.NewDisksClient,
			PkgPath:        "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute",
			URL:            "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/disks",
			Namespace:      "Microsoft.Compute",
			Multiplex:      `client.SubscriptionMultiplexRegisteredNamespace(client.NamespaceMicrosoft_Compute)`,
			Pager:          `NewListPager`,
			ResponseStruct: "DisksClientListResponse",
		},
		{
			NewFunc:        armcompute.NewGalleriesClient,
			PkgPath:        "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute",
			URL:            "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/galleries",
			Namespace:      "Microsoft.Compute",
			Multiplex:      `client.SubscriptionMultiplexRegisteredNamespace(client.NamespaceMicrosoft_Compute)`,
			Pager:          `NewListPager`,
			ResponseStruct: "GalleriesClientListResponse",
		},
		{
			NewFunc:        armcompute.NewImagesClient,
			PkgPath:        "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute",
			URL:            "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/images",
			Namespace:      "Microsoft.Compute",
			Multiplex:      `client.SubscriptionMultiplexRegisteredNamespace(client.NamespaceMicrosoft_Compute)`,
			Pager:          `NewListPager`,
			ResponseStruct: "ImagesClientListResponse",
		},
		{
			NewFunc:        armcompute.NewResourceSKUsClient,
			PkgPath:        "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute",
			URL:            "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/skus",
			Namespace:      "Microsoft.Compute",
			Multiplex:      `client.SubscriptionMultiplexRegisteredNamespace(client.NamespaceMicrosoft_Compute)`,
			Pager:          `NewListPager`,
			ResponseStruct: "ResourceSKUsClientListResponse",
		},
		{
			NewFunc:        armcompute.NewRestorePointCollectionsClient,
			PkgPath:        "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute",
			URL:            "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/restorePointCollections",
			Namespace:      "Microsoft.Compute",
			Multiplex:      `client.SubscriptionMultiplexRegisteredNamespace(client.NamespaceMicrosoft_Compute)`,
			Pager:          `NewListAllPager`,
			ResponseStruct: "RestorePointCollectionsClientListAllResponse",
		},
		{
			NewFunc:        armcompute.NewSnapshotsClient,
			PkgPath:        "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute",
			URL:            "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/snapshots",
			Namespace:      "Microsoft.Compute",
			Multiplex:      `client.SubscriptionMultiplexRegisteredNamespace(client.NamespaceMicrosoft_Compute)`,
			Pager:          `NewListPager`,
			ResponseStruct: "SnapshotsClientListResponse",
		},
		{
			NewFunc:        armcompute.NewVirtualMachineScaleSetsClient,
			PkgPath:        "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute",
			URL:            "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachineScaleSets",
			Namespace:      "Microsoft.Compute",
			Multiplex:      `client.SubscriptionMultiplexRegisteredNamespace(client.NamespaceMicrosoft_Compute)`,
			Pager:          `NewListAllPager`,
			ResponseStruct: "VirtualMachineScaleSetsClientListAllResponse",
		},
		{
			NewFunc:        armcompute.NewVirtualMachinesClient,
			PkgPath:        "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute",
			URL:            "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachines",
			Namespace:      "Microsoft.Compute",
			Multiplex:      `client.SubscriptionMultiplexRegisteredNamespace(client.NamespaceMicrosoft_Compute)`,
			Pager:          `NewListAllPager`,
			ResponseStruct: "VirtualMachinesClientListAllResponse",
		},
	}
	return tables
}

func init() {
	Tables = append(Tables, Armcompute())
}
