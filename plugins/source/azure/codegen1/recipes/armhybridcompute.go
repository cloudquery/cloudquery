// Code generated by codegen; DO NOT EDIT.
package recipes

import "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/hybridcompute/armhybridcompute"

func Armhybridcompute() []*Resource {
	resources := []*Resource{
		{
			NewFunc: armhybridcompute.NewMachineExtensionsClient,
			PkgPath: "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/hybridcompute/armhybridcompute",
		},
		{
			NewFunc: armhybridcompute.NewMachinesClient,
			PkgPath: "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/hybridcompute/armhybridcompute",
		},
		{
			NewFunc: armhybridcompute.NewOperationsClient,
			PkgPath: "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/hybridcompute/armhybridcompute",
		},
		{
			NewFunc: armhybridcompute.NewPrivateEndpointConnectionsClient,
			PkgPath: "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/hybridcompute/armhybridcompute",
		},
		{
			NewFunc: armhybridcompute.NewPrivateLinkResourcesClient,
			PkgPath: "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/hybridcompute/armhybridcompute",
		},
		{
			NewFunc: armhybridcompute.NewManagementClient,
			PkgPath: "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/hybridcompute/armhybridcompute",
		},
		{
			NewFunc: armhybridcompute.NewPrivateLinkScopesClient,
			PkgPath: "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/hybridcompute/armhybridcompute",
		},
	}
	return resources
}

func init() {
	Resources = append(Resources, Armhybridcompute())
}