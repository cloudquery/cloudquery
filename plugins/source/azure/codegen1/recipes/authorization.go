// Code generated by codegen0; DO NOT EDIT.
package recipes

import "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/authorization/armauthorization"

func Armauthorization() []*Table {
	tables := []*Table{
		{
			NewFunc:        armauthorization.NewClassicAdministratorsClient,
			PkgPath:        "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/authorization/armauthorization",
			URL:            "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators",
			Namespace:      "microsoft.authorization",
			Multiplex:      `client.SubscriptionMultiplexRegisteredNamespace(client.Namespacemicrosoft_authorization)`,
			Pager:          `NewListPager`,
			ResponseStruct: "ClassicAdministratorsClientListResponse",
		},
		{
			NewFunc:        armauthorization.NewProviderOperationsMetadataClient,
			PkgPath:        "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/authorization/armauthorization",
			URL:            "/providers/Microsoft.Authorization/providerOperations",
			Namespace:      "microsoft.authorization",
			Multiplex:      `client.SubscriptionMultiplexRegisteredNamespace(client.Namespacemicrosoft_authorization)`,
			Pager:          `NewListPager`,
			ResponseStruct: "ProviderOperationsMetadataClientListResponse",
		},
		{
			NewFunc:        armauthorization.NewRoleAssignmentsClient,
			PkgPath:        "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/authorization/armauthorization",
			URL:            "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments",
			Namespace:      "microsoft.authorization",
			Multiplex:      `client.SubscriptionMultiplexRegisteredNamespace(client.Namespacemicrosoft_authorization)`,
			Pager:          `NewListPager`,
			ResponseStruct: "RoleAssignmentsClientListResponse",
		},
	}
	return tables
}

func init() {
	Tables = append(Tables, Armauthorization())
}
