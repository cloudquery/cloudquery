// Code generated by codegen; DO NOT EDIT.

package appservice

import (
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func siteAuthSettings() *schema.Table {
	return &schema.Table{
		Name:        "azure_appservice_site_auth_settings",
		Description: `https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/appservice/armappservice/v2#SiteAuthSettings`,
		Resolver:    fetchSiteAuthSettings,
		Columns: []schema.Column{
			{
				Name:        "subscription_id",
				Type:        schema.TypeString,
				Resolver:    client.SubscriptionIDResolver,
				Description: `Azure subscription ID`,
			},
			{
				Name:     "kind",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Kind"),
			},
			{
				Name:     "aad_claims_authorization",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.AADClaimsAuthorization"),
			},
			{
				Name:     "additional_login_params",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Properties.AdditionalLoginParams"),
			},
			{
				Name:     "allowed_audiences",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Properties.AllowedAudiences"),
			},
			{
				Name:     "allowed_external_redirect_urls",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Properties.AllowedExternalRedirectUrls"),
			},
			{
				Name:     "auth_file_path",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.AuthFilePath"),
			},
			{
				Name:     "client_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ClientID"),
			},
			{
				Name:     "client_secret",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ClientSecret"),
			},
			{
				Name:     "client_secret_certificate_thumbprint",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ClientSecretCertificateThumbprint"),
			},
			{
				Name:     "client_secret_setting_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ClientSecretSettingName"),
			},
			{
				Name:     "config_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ConfigVersion"),
			},
			{
				Name:     "default_provider",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.DefaultProvider"),
			},
			{
				Name:     "enabled",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.Enabled"),
			},
			{
				Name:     "facebook_app_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.FacebookAppID"),
			},
			{
				Name:     "facebook_app_secret",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.FacebookAppSecret"),
			},
			{
				Name:     "facebook_app_secret_setting_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.FacebookAppSecretSettingName"),
			},
			{
				Name:     "facebook_o_auth_scopes",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Properties.FacebookOAuthScopes"),
			},
			{
				Name:     "git_hub_client_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.GitHubClientID"),
			},
			{
				Name:     "git_hub_client_secret",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.GitHubClientSecret"),
			},
			{
				Name:     "git_hub_client_secret_setting_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.GitHubClientSecretSettingName"),
			},
			{
				Name:     "git_hub_o_auth_scopes",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Properties.GitHubOAuthScopes"),
			},
			{
				Name:     "google_client_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.GoogleClientID"),
			},
			{
				Name:     "google_client_secret",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.GoogleClientSecret"),
			},
			{
				Name:     "google_client_secret_setting_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.GoogleClientSecretSettingName"),
			},
			{
				Name:     "google_o_auth_scopes",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Properties.GoogleOAuthScopes"),
			},
			{
				Name:     "is_auth_from_file",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.IsAuthFromFile"),
			},
			{
				Name:     "issuer",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.Issuer"),
			},
			{
				Name:     "microsoft_account_client_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.MicrosoftAccountClientID"),
			},
			{
				Name:     "microsoft_account_client_secret",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.MicrosoftAccountClientSecret"),
			},
			{
				Name:     "microsoft_account_client_secret_setting_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.MicrosoftAccountClientSecretSettingName"),
			},
			{
				Name:     "microsoft_account_o_auth_scopes",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Properties.MicrosoftAccountOAuthScopes"),
			},
			{
				Name:     "runtime_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.RuntimeVersion"),
			},
			{
				Name:     "token_refresh_extension_hours",
				Type:     schema.TypeFloat,
				Resolver: schema.PathResolver("Properties.TokenRefreshExtensionHours"),
			},
			{
				Name:     "token_store_enabled",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.TokenStoreEnabled"),
			},
			{
				Name:     "twitter_consumer_key",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.TwitterConsumerKey"),
			},
			{
				Name:     "twitter_consumer_secret",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.TwitterConsumerSecret"),
			},
			{
				Name:     "twitter_consumer_secret_setting_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.TwitterConsumerSecretSettingName"),
			},
			{
				Name:     "unauthenticated_client_action",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.UnauthenticatedClientAction"),
			},
			{
				Name:     "validate_issuer",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.ValidateIssuer"),
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
			{
				Name:     "site_id",
				Type:     schema.TypeString,
				Resolver: schema.ParentColumnResolver("id"),
			},
		},
	}
}
