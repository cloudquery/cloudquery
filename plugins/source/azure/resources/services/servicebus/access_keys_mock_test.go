// Code generated by codegen; DO NOT EDIT.

package servicebus

import (
	"testing"

	api "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/servicebus/armservicebus/v2"
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	mocks "github.com/cloudquery/cloudquery/plugins/source/azure/client/mocks/servicebus"
	service "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/servicebus"
	"github.com/cloudquery/plugin-sdk/faker"
	"github.com/golang/mock/gomock"
	"github.com/stretchr/testify/require"
)

func buildAccessKeys(t *testing.T, ctrl *gomock.Controller, c *client.Services) {
	if c.Servicebus == nil {
		c.Servicebus = new(service.ServicebusClient)
	}
	servicebusClient := c.Servicebus
	if servicebusClient.TopicsClient == nil {
		servicebusClient.TopicsClient = mocks.NewMockTopicsClient(ctrl)
	}

	mockTopicsClient := servicebusClient.TopicsClient.(*mocks.MockTopicsClient)

	var response api.TopicsClientListKeysResponse
	require.NoError(t, faker.FakeObject(&response))

	mockTopicsClient.EXPECT().ListKeys(gomock.Any(), gomock.Any(), gomock.Any(), gomock.Any(), gomock.Any(), gomock.Any()).
		Return(response, nil).MinTimes(1)
}
