// Code generated by codegen; DO NOT EDIT.

package container

import (
	"testing"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	api "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/containerregistry/armcontainerregistry"
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	mocks "github.com/cloudquery/cloudquery/plugins/source/azure/client/mocks/containerregistry"
	service "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/containerregistry"
	"github.com/cloudquery/plugin-sdk/faker"
	"github.com/golang/mock/gomock"
	"github.com/stretchr/testify/require"
)

func buildReplications(t *testing.T, ctrl *gomock.Controller, c *client.Services) {
	if c.Containerregistry == nil {
		c.Containerregistry = new(service.ContainerregistryClient)
	}
	containerregistryClient := c.Containerregistry
	if containerregistryClient.ReplicationsClient == nil {
		containerregistryClient.ReplicationsClient = mocks.NewMockReplicationsClient(ctrl)
	}

	mockReplicationsClient := containerregistryClient.ReplicationsClient.(*mocks.MockReplicationsClient)

	var response api.ReplicationsClientListResponse
	require.NoError(t, faker.FakeObject(&response))
	// Use correct Azure ID format
	const id = "/subscriptions/test/resourceGroups/test/providers/test/test/test"
	response.Value[0].ID = to.Ptr(id)

	mockReplicationsClient.EXPECT().NewListPager(gomock.Any(), gomock.Any(), gomock.Any()).
		Return(client.CreatePager(response)).MinTimes(1)
}
