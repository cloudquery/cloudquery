// Code generated by codegen; DO NOT EDIT.

package authorization

import (
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func RoleAssignments() *schema.Table {
	return &schema.Table{
		Name:        "azure_authorization_role_assignments",
		Description: `https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/authorization/armauthorization/v2#RoleAssignment`,
		Resolver:    fetchRoleAssignments,
		Multiplex:   client.SubscriptionMultiplex,
		Columns: []schema.Column{
			{
				Name:        "subscription_id",
				Type:        schema.TypeString,
				Resolver:    client.SubscriptionIDResolver,
				Description: `Azure subscription ID`,
			},
			{
				Name:     "principal_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.PrincipalID"),
			},
			{
				Name:     "role_definition_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.RoleDefinitionID"),
			},
			{
				Name:     "condition",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.Condition"),
			},
			{
				Name:     "condition_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ConditionVersion"),
			},
			{
				Name:     "delegated_managed_identity_resource_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.DelegatedManagedIdentityResourceID"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.Description"),
			},
			{
				Name:     "principal_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.PrincipalType"),
			},
			{
				Name:     "created_by",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.CreatedBy"),
			},
			{
				Name:     "created_on",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("Properties.CreatedOn"),
			},
			{
				Name:     "scope",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.Scope"),
			},
			{
				Name:     "updated_by",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.UpdatedBy"),
			},
			{
				Name:     "updated_on",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("Properties.UpdatedOn"),
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
		},
	}
}
