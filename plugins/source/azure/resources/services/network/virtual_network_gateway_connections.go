// Code generated by codegen; DO NOT EDIT.

package network

import (
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func virtualNetworkGatewayConnections() *schema.Table {
	return &schema.Table{
		Name:                "azure_network_virtual_network_gateway_connections",
		Description:         `https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v2#VirtualNetworkGatewayConnection`,
		Resolver:            fetchVirtualNetworkGatewayConnections,
		PreResourceResolver: getVirtualNetworkGatewayConnections,
		Columns: []schema.Column{
			{
				Name:        "subscription_id",
				Type:        schema.TypeString,
				Resolver:    client.SubscriptionIDResolver,
				Description: `Azure subscription ID`,
			},
			{
				Name:     "connection_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ConnectionType"),
			},
			{
				Name:     "virtual_network_gateway1",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.VirtualNetworkGateway1"),
			},
			{
				Name:     "authorization_key",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.AuthorizationKey"),
			},
			{
				Name:     "connection_mode",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ConnectionMode"),
			},
			{
				Name:     "connection_protocol",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ConnectionProtocol"),
			},
			{
				Name:     "dpd_timeout_seconds",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Properties.DpdTimeoutSeconds"),
			},
			{
				Name:     "egress_nat_rules",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.EgressNatRules"),
			},
			{
				Name:     "enable_bgp",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.EnableBgp"),
			},
			{
				Name:     "enable_private_link_fast_path",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.EnablePrivateLinkFastPath"),
			},
			{
				Name:     "express_route_gateway_bypass",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.ExpressRouteGatewayBypass"),
			},
			{
				Name:     "gateway_custom_bgp_ip_addresses",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.GatewayCustomBgpIPAddresses"),
			},
			{
				Name:     "ipsec_policies",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.IPSecPolicies"),
			},
			{
				Name:     "ingress_nat_rules",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.IngressNatRules"),
			},
			{
				Name:     "local_network_gateway2",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.LocalNetworkGateway2"),
			},
			{
				Name:     "peer",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.Peer"),
			},
			{
				Name:     "routing_weight",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Properties.RoutingWeight"),
			},
			{
				Name:     "shared_key",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.SharedKey"),
			},
			{
				Name:     "traffic_selector_policies",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.TrafficSelectorPolicies"),
			},
			{
				Name:     "use_local_azure_ip_address",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.UseLocalAzureIPAddress"),
			},
			{
				Name:     "use_policy_based_traffic_selectors",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.UsePolicyBasedTrafficSelectors"),
			},
			{
				Name:     "virtual_network_gateway2",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.VirtualNetworkGateway2"),
			},
			{
				Name:     "connection_status",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ConnectionStatus"),
			},
			{
				Name:     "egress_bytes_transferred",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Properties.EgressBytesTransferred"),
			},
			{
				Name:     "ingress_bytes_transferred",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Properties.IngressBytesTransferred"),
			},
			{
				Name:     "provisioning_state",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ProvisioningState"),
			},
			{
				Name:     "resource_guid",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ResourceGUID"),
			},
			{
				Name:     "tunnel_connection_status",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.TunnelConnectionStatus"),
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "location",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Location"),
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Tags"),
			},
			{
				Name:     "etag",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Etag"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
			{
				Name:     "virtual_network_gateway_id",
				Type:     schema.TypeString,
				Resolver: schema.ParentColumnResolver("id"),
			},
		},
	}
}
