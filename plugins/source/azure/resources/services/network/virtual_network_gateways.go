// Code generated by codegen; DO NOT EDIT.

package network

import (
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func virtualNetworkGateways() *schema.Table {
	return &schema.Table{
		Name:        "azure_network_virtual_network_gateways",
		Description: `https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v2#VirtualNetworkGateway`,
		Resolver:    fetchVirtualNetworkGateways,
		Columns: []schema.Column{
			{
				Name:        "subscription_id",
				Type:        schema.TypeString,
				Resolver:    client.SubscriptionIDResolver,
				Description: `Azure subscription ID`,
			},
			{
				Name:     "active_active",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.Active"),
			},
			{
				Name:     "allow_remote_vnet_traffic",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.AllowRemoteVnetTraffic"),
			},
			{
				Name:     "allow_virtual_wan_traffic",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.AllowVirtualWanTraffic"),
			},
			{
				Name:     "bgp_settings",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.BgpSettings"),
			},
			{
				Name:     "custom_routes",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.CustomRoutes"),
			},
			{
				Name:     "disable_ip_sec_replay_protection",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.DisableIPSecReplayProtection"),
			},
			{
				Name:     "enable_bgp",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.EnableBgp"),
			},
			{
				Name:     "enable_bgp_route_translation_for_nat",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.EnableBgpRouteTranslationForNat"),
			},
			{
				Name:     "enable_dns_forwarding",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.EnableDNSForwarding"),
			},
			{
				Name:     "enable_private_ip_address",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.EnablePrivateIPAddress"),
			},
			{
				Name:     "gateway_default_site",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.GatewayDefaultSite"),
			},
			{
				Name:     "gateway_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.GatewayType"),
			},
			{
				Name:     "ip_configurations",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.IPConfigurations"),
			},
			{
				Name:     "nat_rules",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.NatRules"),
			},
			{
				Name:     "sku",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.SKU"),
			},
			{
				Name:     "v_net_extended_location_resource_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.VNetExtendedLocationResourceID"),
			},
			{
				Name:     "vpn_client_configuration",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.VPNClientConfiguration"),
			},
			{
				Name:     "vpn_gateway_generation",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.VPNGatewayGeneration"),
			},
			{
				Name:     "vpn_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.VPNType"),
			},
			{
				Name:     "virtual_network_gateway_policy_groups",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.VirtualNetworkGatewayPolicyGroups"),
			},
			{
				Name:     "inbound_dns_forwarding_endpoint",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.InboundDNSForwardingEndpoint"),
			},
			{
				Name:     "provisioning_state",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ProvisioningState"),
			},
			{
				Name:     "resource_guid",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ResourceGUID"),
			},
			{
				Name:     "extended_location",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ExtendedLocation"),
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "location",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Location"),
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Tags"),
			},
			{
				Name:     "etag",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Etag"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
			{
				Name:     "virtual_network_id",
				Type:     schema.TypeString,
				Resolver: schema.ParentColumnResolver("id"),
			},
		},

		Relations: []*schema.Table{
			virtualNetworkGatewayConnections(),
		},
	}
}
