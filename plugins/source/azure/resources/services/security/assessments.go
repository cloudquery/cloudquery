// Code generated by codegen; DO NOT EDIT.

package security

import (
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Assessments() *schema.Table {
	return &schema.Table{
		Name:        "azure_security_assessments",
		Description: `https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/security/armsecurity#Assessment`,
		Resolver:    fetchAssessments,
		Multiplex:   client.SubscriptionMultiplex,
		Columns: []schema.Column{
			{
				Name:        "subscription_id",
				Type:        schema.TypeString,
				Resolver:    client.SubscriptionIDResolver,
				Description: `Azure subscription ID`,
			},
			{
				Name:     "status",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.Status"),
			},
			{
				Name:     "additional_data",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.AdditionalData"),
			},
			{
				Name:     "metadata",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.Metadata"),
			},
			{
				Name:     "partners_data",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.PartnersData"),
			},
			{
				Name:     "display_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.DisplayName"),
			},
			{
				Name:     "links",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.Links"),
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
		},
	}
}
