// Code generated by codegen; DO NOT EDIT.

package sql

import (
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func managedDatabases() *schema.Table {
	return &schema.Table{
		Name:        "azure_sql_managed_databases",
		Description: `https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql#ManagedDatabase`,
		Resolver:    fetchManagedDatabases,
		Columns: []schema.Column{
			{
				Name:        "subscription_id",
				Type:        schema.TypeString,
				Resolver:    client.SubscriptionIDResolver,
				Description: `Azure subscription ID`,
			},
			{
				Name:     "location",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Location"),
			},
			{
				Name:     "auto_complete_restore",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Properties.AutoCompleteRestore"),
			},
			{
				Name:     "catalog_collation",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.CatalogCollation"),
			},
			{
				Name:     "collation",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.Collation"),
			},
			{
				Name:     "create_mode",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.CreateMode"),
			},
			{
				Name:     "last_backup_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.LastBackupName"),
			},
			{
				Name:     "long_term_retention_backup_resource_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.LongTermRetentionBackupResourceID"),
			},
			{
				Name:     "recoverable_database_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.RecoverableDatabaseID"),
			},
			{
				Name:     "restorable_dropped_database_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.RestorableDroppedDatabaseID"),
			},
			{
				Name:     "restore_point_in_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("Properties.RestorePointInTime"),
			},
			{
				Name:     "source_database_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.SourceDatabaseID"),
			},
			{
				Name:     "storage_container_sas_token",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.StorageContainerSasToken"),
			},
			{
				Name:     "storage_container_uri",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.StorageContainerURI"),
			},
			{
				Name:     "creation_date",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("Properties.CreationDate"),
			},
			{
				Name:     "default_secondary_location",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.DefaultSecondaryLocation"),
			},
			{
				Name:     "earliest_restore_point",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("Properties.EarliestRestorePoint"),
			},
			{
				Name:     "failover_group_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.FailoverGroupID"),
			},
			{
				Name:     "status",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.Status"),
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Tags"),
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
			{
				Name:     "managed_instance_id",
				Type:     schema.TypeString,
				Resolver: schema.ParentColumnResolver("id"),
			},
		},

		Relations: []*schema.Table{
			managedDatabaseVulnerabilityAssessmentScans(),
			managedDatabaseVulnerabilityAssessments(),
		},
	}
}
