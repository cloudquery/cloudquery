// Code generated by codegen; DO NOT EDIT.

package frontdoor

import (
	"testing"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	api "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/frontdoor/armfrontdoor"
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	mocks "github.com/cloudquery/cloudquery/plugins/source/azure/client/mocks/frontdoor"
	service "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/frontdoor"
	"github.com/cloudquery/plugin-sdk/faker"
	"github.com/golang/mock/gomock"
	"github.com/stretchr/testify/require"
)

func buildDoors(t *testing.T, ctrl *gomock.Controller) *client.Services {
	mockFrontDoorsClient := mocks.NewMockFrontDoorsClient(ctrl)

	var response api.FrontDoorsClientListResponse
	require.NoError(t, faker.FakeObject(&response))
	// Use correct Azure ID format
	const id = "/subscriptions/test/resourceGroups/test/providers/test/test/test"
	response.Value[0].ID = to.Ptr(id)

	mockFrontDoorsClient.EXPECT().NewListPager(gomock.Any()).
		Return(client.CreatePager(response)).MinTimes(1)

	frontdoorClient := &service.FrontdoorClient{
		FrontDoorsClient: mockFrontDoorsClient,
	}

	c := &client.Services{Frontdoor: frontdoorClient}

	return c
}

func TestDoors(t *testing.T) {
	client.MockTestHelper(t, Doors(), buildDoors)
}
