// Code generated by codegen; DO NOT EDIT.

package compute

import (
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func VirtualMachines() *schema.Table {
	return &schema.Table{
		Name:        "azure_compute_virtual_machines",
		Description: `https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v4#VirtualMachine`,
		Resolver:    fetchVirtualMachines,
		Multiplex:   client.SubscriptionMultiplex,
		Columns: []schema.Column{
			{
				Name:        "subscription_id",
				Type:        schema.TypeString,
				Resolver:    client.SubscriptionIDResolver,
				Description: `Azure subscription ID`,
			},
			{
				Name:     "location",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Location"),
			},
			{
				Name:     "extended_location",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ExtendedLocation"),
			},
			{
				Name:     "identity",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Identity"),
			},
			{
				Name:     "plan",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Plan"),
			},
			{
				Name:     "additional_capabilities",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.AdditionalCapabilities"),
			},
			{
				Name:     "application_profile",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.ApplicationProfile"),
			},
			{
				Name:     "availability_set",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.AvailabilitySet"),
			},
			{
				Name:     "billing_profile",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.BillingProfile"),
			},
			{
				Name:     "capacity_reservation",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.CapacityReservation"),
			},
			{
				Name:     "diagnostics_profile",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.DiagnosticsProfile"),
			},
			{
				Name:     "eviction_policy",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.EvictionPolicy"),
			},
			{
				Name:     "extensions_time_budget",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ExtensionsTimeBudget"),
			},
			{
				Name:     "hardware_profile",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.HardwareProfile"),
			},
			{
				Name:     "host",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.Host"),
			},
			{
				Name:     "host_group",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.HostGroup"),
			},
			{
				Name:     "license_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.LicenseType"),
			},
			{
				Name:     "network_profile",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.NetworkProfile"),
			},
			{
				Name:     "os_profile",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.OSProfile"),
			},
			{
				Name:     "platform_fault_domain",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("Properties.PlatformFaultDomain"),
			},
			{
				Name:     "priority",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.Priority"),
			},
			{
				Name:     "proximity_placement_group",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.ProximityPlacementGroup"),
			},
			{
				Name:     "scheduled_events_profile",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.ScheduledEventsProfile"),
			},
			{
				Name:     "security_profile",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.SecurityProfile"),
			},
			{
				Name:     "storage_profile",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.StorageProfile"),
			},
			{
				Name:     "user_data",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.UserData"),
			},
			{
				Name:     "virtual_machine_scale_set",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.VirtualMachineScaleSet"),
			},
			{
				Name:     "instance_view",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.InstanceView"),
			},
			{
				Name:     "provisioning_state",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ProvisioningState"),
			},
			{
				Name:     "time_created",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("Properties.TimeCreated"),
			},
			{
				Name:     "vm_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.VMID"),
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Tags"),
			},
			{
				Name:     "zones",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Zones"),
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "resources",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Resources"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
		},

		Relations: []*schema.Table{
			virtualMachineScaleSets(),
		},
	}
}
