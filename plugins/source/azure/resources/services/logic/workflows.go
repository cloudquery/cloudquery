// Code generated by codegen; DO NOT EDIT.

package logic

import (
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Workflows() *schema.Table {
	return &schema.Table{
		Name:        "azure_logic_workflows",
		Description: `https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/logic/armlogic#Workflow`,
		Resolver:    fetchWorkflows,
		Multiplex:   client.SubscriptionMultiplex,
		Columns: []schema.Column{
			{
				Name:        "subscription_id",
				Type:        schema.TypeString,
				Resolver:    client.SubscriptionIDResolver,
				Description: `Azure subscription ID`,
			},
			{
				Name:     "identity",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Identity"),
			},
			{
				Name:     "location",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Location"),
			},
			{
				Name:     "access_control",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.AccessControl"),
			},
			{
				Name:     "endpoints_configuration",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.EndpointsConfiguration"),
			},
			{
				Name:     "integration_account",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.IntegrationAccount"),
			},
			{
				Name:     "integration_service_environment",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.IntegrationServiceEnvironment"),
			},
			{
				Name:     "parameters",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.Parameters"),
			},
			{
				Name:     "state",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.State"),
			},
			{
				Name:     "access_endpoint",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.AccessEndpoint"),
			},
			{
				Name:     "changed_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("Properties.ChangedTime"),
			},
			{
				Name:     "created_time",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("Properties.CreatedTime"),
			},
			{
				Name:     "provisioning_state",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.ProvisioningState"),
			},
			{
				Name:     "sku",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.SKU"),
			},
			{
				Name:     "version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.Version"),
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Tags"),
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
		},

		Relations: []*schema.Table{
			diagnosticSettings(),
		},
	}
}
