// Code generated by codegen; DO NOT EDIT.

package keyvault

import (
	"testing"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	api "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/keyvault/armkeyvault"
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	mocks "github.com/cloudquery/cloudquery/plugins/source/azure/client/mocks/keyvault"
	service "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/keyvault"
	"github.com/cloudquery/plugin-sdk/faker"
	"github.com/golang/mock/gomock"
	"github.com/stretchr/testify/require"
)

func buildSecrets(t *testing.T, ctrl *gomock.Controller, c *client.Services) {
	if c.Keyvault == nil {
		c.Keyvault = new(service.KeyvaultClient)
	}
	keyvaultClient := c.Keyvault
	if keyvaultClient.SecretsClient == nil {
		keyvaultClient.SecretsClient = mocks.NewMockSecretsClient(ctrl)
	}

	mockSecretsClient := keyvaultClient.SecretsClient.(*mocks.MockSecretsClient)

	var response api.SecretsClientListResponse
	require.NoError(t, faker.FakeObject(&response))
	// Use correct Azure ID format
	const id = "/subscriptions/test/resourceGroups/test/providers/test/test/test"
	response.Value[0].ID = to.Ptr(id)

	mockSecretsClient.EXPECT().NewListPager(gomock.Any(), gomock.Any(), gomock.Any()).
		Return(client.CreatePager(response)).MinTimes(1)
}
