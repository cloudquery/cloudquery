// Code generated by codegen; DO NOT EDIT.

package armmonitor

import (
	"context"
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func LocalizableString() *schema.Table {
	return &schema.Table{
		Name:      "azure_armmonitor_localizable_string",
		Resolver:  fetchLocalizableString,
		Multiplex: client.SubscriptionMultiplex,
		Columns: []schema.Column{
			{
				Name:     "value",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Value"),
			},
			{
				Name:     "localized_value",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LocalizedValue"),
			},
		},
	}
}

func fetchLocalizableString(ctx context.Context, meta schema.ClientMeta, parent *schema.Resource, res chan<- interface{}) error {
	svc := meta.(*client.Client).Services().ArmmonitorLocalizableString
	pager := svc.NewListPager(nil)
	for pager.More() {
		p, err := pager.NextPage(ctx)
		if err != nil {
			return err
		}
		res <- p.Value
	}
	return nil
}
