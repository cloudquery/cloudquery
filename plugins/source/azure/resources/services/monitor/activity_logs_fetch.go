// Code generated by codegen; DO NOT EDIT.

package monitor

import (
	"context"
	"fmt"
	"time"

	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func fetchActivityLogs(ctx context.Context, meta schema.ClientMeta, parent *schema.Resource, res chan<- any) error {
	c := meta.(*client.Client)
	svc := c.Services().Monitor

	pager := svc.ActivityLogsClient.NewListPager(func() string {
		const fetchWindow = 24 * time.Hour
		now := time.Now().UTC()
		past := now.Add(-fetchWindow)
		return fmt.Sprintf("eventTimestamp ge '%s' and eventTimestamp le '%s'",
			past.Format(time.RFC3339Nano),
			now.Format(time.RFC3339Nano),
		)
	}(), nil)
	for pager.More() {
		page, err := pager.NextPage(ctx)
		if err != nil {
			return err
		}
		res <- page.Value
	}

	return nil
}
