// Code generated by codegen; DO NOT EDIT.

package monitor

import (
	"testing"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	api "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/monitor/armmonitor"
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	mocks "github.com/cloudquery/cloudquery/plugins/source/azure/client/mocks/monitor"
	service "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/monitor"
	"github.com/cloudquery/plugin-sdk/faker"
	"github.com/golang/mock/gomock"
	"github.com/stretchr/testify/require"
)

func buildDiagnosticSettings(t *testing.T, ctrl *gomock.Controller, c *client.Services) {
	if c.Monitor == nil {
		c.Monitor = new(service.MonitorClient)
	}
	monitorClient := c.Monitor
	if monitorClient.DiagnosticSettingsClient == nil {
		monitorClient.DiagnosticSettingsClient = mocks.NewMockDiagnosticSettingsClient(ctrl)
	}

	mockDiagnosticSettingsClient := monitorClient.DiagnosticSettingsClient.(*mocks.MockDiagnosticSettingsClient)

	var response api.DiagnosticSettingsClientListResponse
	require.NoError(t, faker.FakeObject(&response))
	// Use correct Azure ID format
	const id = "/subscriptions/test/resourceGroups/test/providers/test/test/test"
	response.Value[0].ID = to.Ptr(id)

	mockDiagnosticSettingsClient.EXPECT().NewListPager(gomock.Any(), gomock.Any()).
		Return(client.CreatePager(response)).MinTimes(1)
}
