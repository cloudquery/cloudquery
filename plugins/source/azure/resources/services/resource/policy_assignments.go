// Code generated by codegen; DO NOT EDIT.

package resource

import (
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func PolicyAssignments() *schema.Table {
	return &schema.Table{
		Name:        "azure_resource_policy_assignments",
		Description: `https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armpolicy#Assignment`,
		Resolver:    fetchPolicyAssignments,
		Multiplex:   client.SubscriptionMultiplex,
		Columns: []schema.Column{
			{
				Name:        "subscription_id",
				Type:        schema.TypeString,
				Resolver:    client.SubscriptionIDResolver,
				Description: `Azure subscription ID`,
			},
			{
				Name:     "identity",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Identity"),
			},
			{
				Name:     "location",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Location"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.Description"),
			},
			{
				Name:     "display_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.DisplayName"),
			},
			{
				Name:     "enforcement_mode",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.EnforcementMode"),
			},
			{
				Name:     "non_compliance_messages",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.NonComplianceMessages"),
			},
			{
				Name:     "not_scopes",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Properties.NotScopes"),
			},
			{
				Name:     "parameters",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Properties.Parameters"),
			},
			{
				Name:     "policy_definition_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.PolicyDefinitionID"),
			},
			{
				Name:     "scope",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Properties.Scope"),
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "system_data",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("SystemData"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
		},
	}
}
