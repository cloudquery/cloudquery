// Code generated by codegen; DO NOT EDIT.

package resource

import (
	"testing"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	api "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armlinks"
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	mocks "github.com/cloudquery/cloudquery/plugins/source/azure/client/mocks/links"
	service "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/links"
	"github.com/cloudquery/plugin-sdk/faker"
	"github.com/golang/mock/gomock"
	"github.com/stretchr/testify/require"
)

func buildLinks(t *testing.T, ctrl *gomock.Controller) *client.Services {
	mockResourceLinksClient := mocks.NewMockResourceLinksClient(ctrl)

	var response api.ResourceLinksClientListAtSubscriptionResponse
	require.NoError(t, faker.FakeObject(&response))
	// Use correct Azure ID format
	const id = "/subscriptions/test/resourceGroups/test/providers/test/test/test"
	response.Value[0].ID = to.Ptr(id)

	mockResourceLinksClient.EXPECT().NewListAtSubscriptionPager(gomock.Any()).
		Return(client.CreatePager(response)).MinTimes(1)

	linksClient := &service.LinksClient{
		ResourceLinksClient: mockResourceLinksClient,
	}

	c := &client.Services{Links: linksClient}

	return c
}

func TestLinks(t *testing.T) {
	client.MockTestHelper(t, Links(), buildLinks)
}
