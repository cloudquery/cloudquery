// Code generated by MockGen. DO NOT EDIT.
// Source: diagnostic_settings.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	armmonitor "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/monitor/armmonitor"
	monitor "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/monitor"
	gomock "github.com/golang/mock/gomock"
)

// MockDiagnosticSettingsClient is a mock of DiagnosticSettingsClient interface.
type MockDiagnosticSettingsClient struct {
	ctrl     *gomock.Controller
	recorder *MockDiagnosticSettingsClientMockRecorder
}

// MockDiagnosticSettingsClientMockRecorder is the mock recorder for MockDiagnosticSettingsClient.
type MockDiagnosticSettingsClientMockRecorder struct {
	mock *MockDiagnosticSettingsClient
}

// NewMockDiagnosticSettingsClient creates a new mock instance.
func NewMockDiagnosticSettingsClient(ctrl *gomock.Controller) *MockDiagnosticSettingsClient {
	mock := &MockDiagnosticSettingsClient{ctrl: ctrl}
	mock.recorder = &MockDiagnosticSettingsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDiagnosticSettingsClient) EXPECT() *MockDiagnosticSettingsClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockDiagnosticSettingsClient) Get(arg0 context.Context, arg1, arg2 string, arg3 *armmonitor.DiagnosticSettingsClientGetOptions) (armmonitor.DiagnosticSettingsClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(armmonitor.DiagnosticSettingsClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockDiagnosticSettingsClientMockRecorder) Get(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockDiagnosticSettingsClient)(nil).Get), arg0, arg1, arg2, arg3)
}

// NewListPager mocks base method.
func (m *MockDiagnosticSettingsClient) NewListPager(arg0 string, arg1 *armmonitor.DiagnosticSettingsClientListOptions) *monitor.RuntimePagerArmmonitorDiagnosticSettingsClientListResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListPager", arg0, arg1)
	ret0, _ := ret[0].(*monitor.RuntimePagerArmmonitorDiagnosticSettingsClientListResponse)
	return ret0
}

// NewListPager indicates an expected call of NewListPager.
func (mr *MockDiagnosticSettingsClientMockRecorder) NewListPager(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListPager", reflect.TypeOf((*MockDiagnosticSettingsClient)(nil).NewListPager), arg0, arg1)
}
