// Code generated by MockGen. DO NOT EDIT.
// Source: activity_logs.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	armmonitor "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/monitor/armmonitor"
	monitor "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/monitor"
	gomock "github.com/golang/mock/gomock"
)

// MockActivityLogsClient is a mock of ActivityLogsClient interface.
type MockActivityLogsClient struct {
	ctrl     *gomock.Controller
	recorder *MockActivityLogsClientMockRecorder
}

// MockActivityLogsClientMockRecorder is the mock recorder for MockActivityLogsClient.
type MockActivityLogsClientMockRecorder struct {
	mock *MockActivityLogsClient
}

// NewMockActivityLogsClient creates a new mock instance.
func NewMockActivityLogsClient(ctrl *gomock.Controller) *MockActivityLogsClient {
	mock := &MockActivityLogsClient{ctrl: ctrl}
	mock.recorder = &MockActivityLogsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockActivityLogsClient) EXPECT() *MockActivityLogsClientMockRecorder {
	return m.recorder
}

// NewListPager mocks base method.
func (m *MockActivityLogsClient) NewListPager(arg0 string, arg1 *armmonitor.ActivityLogsClientListOptions) *monitor.RuntimePagerArmmonitorActivityLogsClientListResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListPager", arg0, arg1)
	ret0, _ := ret[0].(*monitor.RuntimePagerArmmonitorActivityLogsClientListResponse)
	return ret0
}

// NewListPager indicates an expected call of NewListPager.
func (mr *MockActivityLogsClientMockRecorder) NewListPager(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListPager", reflect.TypeOf((*MockActivityLogsClient)(nil).NewListPager), arg0, arg1)
}
