// Code generated by MockGen. DO NOT EDIT.
// Source: tenants.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	armsubscription "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/subscription/armsubscription"
	subscription "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/subscription"
	gomock "github.com/golang/mock/gomock"
)

// MockTenantsClient is a mock of TenantsClient interface.
type MockTenantsClient struct {
	ctrl     *gomock.Controller
	recorder *MockTenantsClientMockRecorder
}

// MockTenantsClientMockRecorder is the mock recorder for MockTenantsClient.
type MockTenantsClientMockRecorder struct {
	mock *MockTenantsClient
}

// NewMockTenantsClient creates a new mock instance.
func NewMockTenantsClient(ctrl *gomock.Controller) *MockTenantsClient {
	mock := &MockTenantsClient{ctrl: ctrl}
	mock.recorder = &MockTenantsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTenantsClient) EXPECT() *MockTenantsClientMockRecorder {
	return m.recorder
}

// NewListPager mocks base method.
func (m *MockTenantsClient) NewListPager(arg0 *armsubscription.TenantsClientListOptions) *subscription.RuntimePagerArmsubscriptionTenantsClientListResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListPager", arg0)
	ret0, _ := ret[0].(*subscription.RuntimePagerArmsubscriptionTenantsClientListResponse)
	return ret0
}

// NewListPager indicates an expected call of NewListPager.
func (mr *MockTenantsClientMockRecorder) NewListPager(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListPager", reflect.TypeOf((*MockTenantsClient)(nil).NewListPager), arg0)
}
