// Code generated by MockGen. DO NOT EDIT.
// Source: profiles.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	armcdn "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/cdn/armcdn"
	cdn "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/cdn"
	gomock "github.com/golang/mock/gomock"
)

// MockProfilesClient is a mock of ProfilesClient interface.
type MockProfilesClient struct {
	ctrl     *gomock.Controller
	recorder *MockProfilesClientMockRecorder
}

// MockProfilesClientMockRecorder is the mock recorder for MockProfilesClient.
type MockProfilesClientMockRecorder struct {
	mock *MockProfilesClient
}

// NewMockProfilesClient creates a new mock instance.
func NewMockProfilesClient(ctrl *gomock.Controller) *MockProfilesClient {
	mock := &MockProfilesClient{ctrl: ctrl}
	mock.recorder = &MockProfilesClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfilesClient) EXPECT() *MockProfilesClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockProfilesClient) Get(arg0 context.Context, arg1, arg2 string, arg3 *armcdn.ProfilesClientGetOptions) (armcdn.ProfilesClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(armcdn.ProfilesClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockProfilesClientMockRecorder) Get(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockProfilesClient)(nil).Get), arg0, arg1, arg2, arg3)
}

// ListSupportedOptimizationTypes mocks base method.
func (m *MockProfilesClient) ListSupportedOptimizationTypes(arg0 context.Context, arg1, arg2 string, arg3 *armcdn.ProfilesClientListSupportedOptimizationTypesOptions) (armcdn.ProfilesClientListSupportedOptimizationTypesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSupportedOptimizationTypes", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(armcdn.ProfilesClientListSupportedOptimizationTypesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSupportedOptimizationTypes indicates an expected call of ListSupportedOptimizationTypes.
func (mr *MockProfilesClientMockRecorder) ListSupportedOptimizationTypes(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSupportedOptimizationTypes", reflect.TypeOf((*MockProfilesClient)(nil).ListSupportedOptimizationTypes), arg0, arg1, arg2, arg3)
}

// NewListByResourceGroupPager mocks base method.
func (m *MockProfilesClient) NewListByResourceGroupPager(arg0 string, arg1 *armcdn.ProfilesClientListByResourceGroupOptions) *cdn.RuntimePagerArmcdnProfilesClientListByResourceGroupResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListByResourceGroupPager", arg0, arg1)
	ret0, _ := ret[0].(*cdn.RuntimePagerArmcdnProfilesClientListByResourceGroupResponse)
	return ret0
}

// NewListByResourceGroupPager indicates an expected call of NewListByResourceGroupPager.
func (mr *MockProfilesClientMockRecorder) NewListByResourceGroupPager(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListByResourceGroupPager", reflect.TypeOf((*MockProfilesClient)(nil).NewListByResourceGroupPager), arg0, arg1)
}

// NewListPager mocks base method.
func (m *MockProfilesClient) NewListPager(arg0 *armcdn.ProfilesClientListOptions) *cdn.RuntimePagerArmcdnProfilesClientListResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListPager", arg0)
	ret0, _ := ret[0].(*cdn.RuntimePagerArmcdnProfilesClientListResponse)
	return ret0
}

// NewListPager indicates an expected call of NewListPager.
func (mr *MockProfilesClientMockRecorder) NewListPager(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListPager", reflect.TypeOf((*MockProfilesClient)(nil).NewListPager), arg0)
}

// NewListResourceUsagePager mocks base method.
func (m *MockProfilesClient) NewListResourceUsagePager(arg0, arg1 string, arg2 *armcdn.ProfilesClientListResourceUsageOptions) *cdn.RuntimePagerArmcdnProfilesClientListResourceUsageResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListResourceUsagePager", arg0, arg1, arg2)
	ret0, _ := ret[0].(*cdn.RuntimePagerArmcdnProfilesClientListResourceUsageResponse)
	return ret0
}

// NewListResourceUsagePager indicates an expected call of NewListResourceUsagePager.
func (mr *MockProfilesClientMockRecorder) NewListResourceUsagePager(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListResourceUsagePager", reflect.TypeOf((*MockProfilesClient)(nil).NewListResourceUsagePager), arg0, arg1, arg2)
}
