// Code generated by MockGen. DO NOT EDIT.
// Source: endpoints.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	armcdn "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/cdn/armcdn"
	cdn "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/cdn"
	gomock "github.com/golang/mock/gomock"
)

// MockEndpointsClient is a mock of EndpointsClient interface.
type MockEndpointsClient struct {
	ctrl     *gomock.Controller
	recorder *MockEndpointsClientMockRecorder
}

// MockEndpointsClientMockRecorder is the mock recorder for MockEndpointsClient.
type MockEndpointsClientMockRecorder struct {
	mock *MockEndpointsClient
}

// NewMockEndpointsClient creates a new mock instance.
func NewMockEndpointsClient(ctrl *gomock.Controller) *MockEndpointsClient {
	mock := &MockEndpointsClient{ctrl: ctrl}
	mock.recorder = &MockEndpointsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEndpointsClient) EXPECT() *MockEndpointsClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockEndpointsClient) Get(arg0 context.Context, arg1, arg2, arg3 string, arg4 *armcdn.EndpointsClientGetOptions) (armcdn.EndpointsClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(armcdn.EndpointsClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockEndpointsClientMockRecorder) Get(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockEndpointsClient)(nil).Get), arg0, arg1, arg2, arg3, arg4)
}

// NewListByProfilePager mocks base method.
func (m *MockEndpointsClient) NewListByProfilePager(arg0, arg1 string, arg2 *armcdn.EndpointsClientListByProfileOptions) *cdn.RuntimePagerArmcdnEndpointsClientListByProfileResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListByProfilePager", arg0, arg1, arg2)
	ret0, _ := ret[0].(*cdn.RuntimePagerArmcdnEndpointsClientListByProfileResponse)
	return ret0
}

// NewListByProfilePager indicates an expected call of NewListByProfilePager.
func (mr *MockEndpointsClientMockRecorder) NewListByProfilePager(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListByProfilePager", reflect.TypeOf((*MockEndpointsClient)(nil).NewListByProfilePager), arg0, arg1, arg2)
}

// NewListResourceUsagePager mocks base method.
func (m *MockEndpointsClient) NewListResourceUsagePager(arg0, arg1, arg2 string, arg3 *armcdn.EndpointsClientListResourceUsageOptions) *cdn.RuntimePagerArmcdnEndpointsClientListResourceUsageResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListResourceUsagePager", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*cdn.RuntimePagerArmcdnEndpointsClientListResourceUsageResponse)
	return ret0
}

// NewListResourceUsagePager indicates an expected call of NewListResourceUsagePager.
func (mr *MockEndpointsClientMockRecorder) NewListResourceUsagePager(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListResourceUsagePager", reflect.TypeOf((*MockEndpointsClient)(nil).NewListResourceUsagePager), arg0, arg1, arg2, arg3)
}
