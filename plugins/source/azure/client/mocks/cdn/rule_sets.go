// Code generated by MockGen. DO NOT EDIT.
// Source: rule_sets.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	armcdn "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/cdn/armcdn"
	cdn "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/cdn"
	gomock "github.com/golang/mock/gomock"
)

// MockRuleSetsClient is a mock of RuleSetsClient interface.
type MockRuleSetsClient struct {
	ctrl     *gomock.Controller
	recorder *MockRuleSetsClientMockRecorder
}

// MockRuleSetsClientMockRecorder is the mock recorder for MockRuleSetsClient.
type MockRuleSetsClientMockRecorder struct {
	mock *MockRuleSetsClient
}

// NewMockRuleSetsClient creates a new mock instance.
func NewMockRuleSetsClient(ctrl *gomock.Controller) *MockRuleSetsClient {
	mock := &MockRuleSetsClient{ctrl: ctrl}
	mock.recorder = &MockRuleSetsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRuleSetsClient) EXPECT() *MockRuleSetsClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockRuleSetsClient) Get(arg0 context.Context, arg1, arg2, arg3 string, arg4 *armcdn.RuleSetsClientGetOptions) (armcdn.RuleSetsClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(armcdn.RuleSetsClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockRuleSetsClientMockRecorder) Get(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRuleSetsClient)(nil).Get), arg0, arg1, arg2, arg3, arg4)
}

// NewListByProfilePager mocks base method.
func (m *MockRuleSetsClient) NewListByProfilePager(arg0, arg1 string, arg2 *armcdn.RuleSetsClientListByProfileOptions) *cdn.RuntimePagerArmcdnRuleSetsClientListByProfileResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListByProfilePager", arg0, arg1, arg2)
	ret0, _ := ret[0].(*cdn.RuntimePagerArmcdnRuleSetsClientListByProfileResponse)
	return ret0
}

// NewListByProfilePager indicates an expected call of NewListByProfilePager.
func (mr *MockRuleSetsClientMockRecorder) NewListByProfilePager(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListByProfilePager", reflect.TypeOf((*MockRuleSetsClient)(nil).NewListByProfilePager), arg0, arg1, arg2)
}

// NewListResourceUsagePager mocks base method.
func (m *MockRuleSetsClient) NewListResourceUsagePager(arg0, arg1, arg2 string, arg3 *armcdn.RuleSetsClientListResourceUsageOptions) *cdn.RuntimePagerArmcdnRuleSetsClientListResourceUsageResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListResourceUsagePager", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*cdn.RuntimePagerArmcdnRuleSetsClientListResourceUsageResponse)
	return ret0
}

// NewListResourceUsagePager indicates an expected call of NewListResourceUsagePager.
func (mr *MockRuleSetsClientMockRecorder) NewListResourceUsagePager(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListResourceUsagePager", reflect.TypeOf((*MockRuleSetsClient)(nil).NewListResourceUsagePager), arg0, arg1, arg2, arg3)
}
