// Code generated by MockGen. DO NOT EDIT.
// Source: routes.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	armcdn "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/cdn/armcdn"
	cdn "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/cdn"
	gomock "github.com/golang/mock/gomock"
)

// MockRoutesClient is a mock of RoutesClient interface.
type MockRoutesClient struct {
	ctrl     *gomock.Controller
	recorder *MockRoutesClientMockRecorder
}

// MockRoutesClientMockRecorder is the mock recorder for MockRoutesClient.
type MockRoutesClientMockRecorder struct {
	mock *MockRoutesClient
}

// NewMockRoutesClient creates a new mock instance.
func NewMockRoutesClient(ctrl *gomock.Controller) *MockRoutesClient {
	mock := &MockRoutesClient{ctrl: ctrl}
	mock.recorder = &MockRoutesClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRoutesClient) EXPECT() *MockRoutesClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockRoutesClient) Get(arg0 context.Context, arg1, arg2, arg3, arg4 string, arg5 *armcdn.RoutesClientGetOptions) (armcdn.RoutesClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(armcdn.RoutesClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockRoutesClientMockRecorder) Get(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRoutesClient)(nil).Get), arg0, arg1, arg2, arg3, arg4, arg5)
}

// NewListByEndpointPager mocks base method.
func (m *MockRoutesClient) NewListByEndpointPager(arg0, arg1, arg2 string, arg3 *armcdn.RoutesClientListByEndpointOptions) *cdn.RuntimePagerArmcdnRoutesClientListByEndpointResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListByEndpointPager", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*cdn.RuntimePagerArmcdnRoutesClientListByEndpointResponse)
	return ret0
}

// NewListByEndpointPager indicates an expected call of NewListByEndpointPager.
func (mr *MockRoutesClientMockRecorder) NewListByEndpointPager(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListByEndpointPager", reflect.TypeOf((*MockRoutesClient)(nil).NewListByEndpointPager), arg0, arg1, arg2, arg3)
}
