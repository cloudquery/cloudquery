// Code generated by MockGen. DO NOT EDIT.
// Source: security_policies.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	armcdn "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/cdn/armcdn"
	cdn "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/cdn"
	gomock "github.com/golang/mock/gomock"
)

// MockSecurityPoliciesClient is a mock of SecurityPoliciesClient interface.
type MockSecurityPoliciesClient struct {
	ctrl     *gomock.Controller
	recorder *MockSecurityPoliciesClientMockRecorder
}

// MockSecurityPoliciesClientMockRecorder is the mock recorder for MockSecurityPoliciesClient.
type MockSecurityPoliciesClientMockRecorder struct {
	mock *MockSecurityPoliciesClient
}

// NewMockSecurityPoliciesClient creates a new mock instance.
func NewMockSecurityPoliciesClient(ctrl *gomock.Controller) *MockSecurityPoliciesClient {
	mock := &MockSecurityPoliciesClient{ctrl: ctrl}
	mock.recorder = &MockSecurityPoliciesClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecurityPoliciesClient) EXPECT() *MockSecurityPoliciesClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockSecurityPoliciesClient) Get(arg0 context.Context, arg1, arg2, arg3 string, arg4 *armcdn.SecurityPoliciesClientGetOptions) (armcdn.SecurityPoliciesClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(armcdn.SecurityPoliciesClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSecurityPoliciesClientMockRecorder) Get(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSecurityPoliciesClient)(nil).Get), arg0, arg1, arg2, arg3, arg4)
}

// NewListByProfilePager mocks base method.
func (m *MockSecurityPoliciesClient) NewListByProfilePager(arg0, arg1 string, arg2 *armcdn.SecurityPoliciesClientListByProfileOptions) *cdn.RuntimePagerArmcdnSecurityPoliciesClientListByProfileResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListByProfilePager", arg0, arg1, arg2)
	ret0, _ := ret[0].(*cdn.RuntimePagerArmcdnSecurityPoliciesClientListByProfileResponse)
	return ret0
}

// NewListByProfilePager indicates an expected call of NewListByProfilePager.
func (mr *MockSecurityPoliciesClientMockRecorder) NewListByProfilePager(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListByProfilePager", reflect.TypeOf((*MockSecurityPoliciesClient)(nil).NewListByProfilePager), arg0, arg1, arg2)
}
