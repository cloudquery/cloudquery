// Code generated by MockGen. DO NOT EDIT.
// Source: replications.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	armcontainerregistry "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/containerregistry/armcontainerregistry"
	containerregistry "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/containerregistry"
	gomock "github.com/golang/mock/gomock"
)

// MockReplicationsClient is a mock of ReplicationsClient interface.
type MockReplicationsClient struct {
	ctrl     *gomock.Controller
	recorder *MockReplicationsClientMockRecorder
}

// MockReplicationsClientMockRecorder is the mock recorder for MockReplicationsClient.
type MockReplicationsClientMockRecorder struct {
	mock *MockReplicationsClient
}

// NewMockReplicationsClient creates a new mock instance.
func NewMockReplicationsClient(ctrl *gomock.Controller) *MockReplicationsClient {
	mock := &MockReplicationsClient{ctrl: ctrl}
	mock.recorder = &MockReplicationsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReplicationsClient) EXPECT() *MockReplicationsClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockReplicationsClient) Get(arg0 context.Context, arg1, arg2, arg3 string, arg4 *armcontainerregistry.ReplicationsClientGetOptions) (armcontainerregistry.ReplicationsClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(armcontainerregistry.ReplicationsClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockReplicationsClientMockRecorder) Get(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockReplicationsClient)(nil).Get), arg0, arg1, arg2, arg3, arg4)
}

// NewListPager mocks base method.
func (m *MockReplicationsClient) NewListPager(arg0, arg1 string, arg2 *armcontainerregistry.ReplicationsClientListOptions) *containerregistry.RuntimePagerArmcontainerregistryReplicationsClientListResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListPager", arg0, arg1, arg2)
	ret0, _ := ret[0].(*containerregistry.RuntimePagerArmcontainerregistryReplicationsClientListResponse)
	return ret0
}

// NewListPager indicates an expected call of NewListPager.
func (mr *MockReplicationsClientMockRecorder) NewListPager(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListPager", reflect.TypeOf((*MockReplicationsClient)(nil).NewListPager), arg0, arg1, arg2)
}
