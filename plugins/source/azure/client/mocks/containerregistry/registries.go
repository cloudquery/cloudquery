// Code generated by MockGen. DO NOT EDIT.
// Source: registries.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	armcontainerregistry "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/containerregistry/armcontainerregistry"
	containerregistry "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/containerregistry"
	gomock "github.com/golang/mock/gomock"
)

// MockRegistriesClient is a mock of RegistriesClient interface.
type MockRegistriesClient struct {
	ctrl     *gomock.Controller
	recorder *MockRegistriesClientMockRecorder
}

// MockRegistriesClientMockRecorder is the mock recorder for MockRegistriesClient.
type MockRegistriesClientMockRecorder struct {
	mock *MockRegistriesClient
}

// NewMockRegistriesClient creates a new mock instance.
func NewMockRegistriesClient(ctrl *gomock.Controller) *MockRegistriesClient {
	mock := &MockRegistriesClient{ctrl: ctrl}
	mock.recorder = &MockRegistriesClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRegistriesClient) EXPECT() *MockRegistriesClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockRegistriesClient) Get(arg0 context.Context, arg1, arg2 string, arg3 *armcontainerregistry.RegistriesClientGetOptions) (armcontainerregistry.RegistriesClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(armcontainerregistry.RegistriesClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockRegistriesClientMockRecorder) Get(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRegistriesClient)(nil).Get), arg0, arg1, arg2, arg3)
}

// GetBuildSourceUploadURL mocks base method.
func (m *MockRegistriesClient) GetBuildSourceUploadURL(arg0 context.Context, arg1, arg2 string, arg3 *armcontainerregistry.RegistriesClientGetBuildSourceUploadURLOptions) (armcontainerregistry.RegistriesClientGetBuildSourceUploadURLResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBuildSourceUploadURL", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(armcontainerregistry.RegistriesClientGetBuildSourceUploadURLResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBuildSourceUploadURL indicates an expected call of GetBuildSourceUploadURL.
func (mr *MockRegistriesClientMockRecorder) GetBuildSourceUploadURL(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBuildSourceUploadURL", reflect.TypeOf((*MockRegistriesClient)(nil).GetBuildSourceUploadURL), arg0, arg1, arg2, arg3)
}

// GetPrivateLinkResource mocks base method.
func (m *MockRegistriesClient) GetPrivateLinkResource(arg0 context.Context, arg1, arg2, arg3 string, arg4 *armcontainerregistry.RegistriesClientGetPrivateLinkResourceOptions) (armcontainerregistry.RegistriesClientGetPrivateLinkResourceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPrivateLinkResource", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(armcontainerregistry.RegistriesClientGetPrivateLinkResourceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPrivateLinkResource indicates an expected call of GetPrivateLinkResource.
func (mr *MockRegistriesClientMockRecorder) GetPrivateLinkResource(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPrivateLinkResource", reflect.TypeOf((*MockRegistriesClient)(nil).GetPrivateLinkResource), arg0, arg1, arg2, arg3, arg4)
}

// ListCredentials mocks base method.
func (m *MockRegistriesClient) ListCredentials(arg0 context.Context, arg1, arg2 string, arg3 *armcontainerregistry.RegistriesClientListCredentialsOptions) (armcontainerregistry.RegistriesClientListCredentialsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCredentials", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(armcontainerregistry.RegistriesClientListCredentialsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCredentials indicates an expected call of ListCredentials.
func (mr *MockRegistriesClientMockRecorder) ListCredentials(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCredentials", reflect.TypeOf((*MockRegistriesClient)(nil).ListCredentials), arg0, arg1, arg2, arg3)
}

// ListUsages mocks base method.
func (m *MockRegistriesClient) ListUsages(arg0 context.Context, arg1, arg2 string, arg3 *armcontainerregistry.RegistriesClientListUsagesOptions) (armcontainerregistry.RegistriesClientListUsagesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListUsages", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(armcontainerregistry.RegistriesClientListUsagesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListUsages indicates an expected call of ListUsages.
func (mr *MockRegistriesClientMockRecorder) ListUsages(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListUsages", reflect.TypeOf((*MockRegistriesClient)(nil).ListUsages), arg0, arg1, arg2, arg3)
}

// NewListByResourceGroupPager mocks base method.
func (m *MockRegistriesClient) NewListByResourceGroupPager(arg0 string, arg1 *armcontainerregistry.RegistriesClientListByResourceGroupOptions) *containerregistry.RuntimePagerArmcontainerregistryRegistriesClientListByResourceGroupResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListByResourceGroupPager", arg0, arg1)
	ret0, _ := ret[0].(*containerregistry.RuntimePagerArmcontainerregistryRegistriesClientListByResourceGroupResponse)
	return ret0
}

// NewListByResourceGroupPager indicates an expected call of NewListByResourceGroupPager.
func (mr *MockRegistriesClientMockRecorder) NewListByResourceGroupPager(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListByResourceGroupPager", reflect.TypeOf((*MockRegistriesClient)(nil).NewListByResourceGroupPager), arg0, arg1)
}

// NewListPager mocks base method.
func (m *MockRegistriesClient) NewListPager(arg0 *armcontainerregistry.RegistriesClientListOptions) *containerregistry.RuntimePagerArmcontainerregistryRegistriesClientListResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListPager", arg0)
	ret0, _ := ret[0].(*containerregistry.RuntimePagerArmcontainerregistryRegistriesClientListResponse)
	return ret0
}

// NewListPager indicates an expected call of NewListPager.
func (mr *MockRegistriesClientMockRecorder) NewListPager(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListPager", reflect.TypeOf((*MockRegistriesClient)(nil).NewListPager), arg0)
}

// NewListPrivateLinkResourcesPager mocks base method.
func (m *MockRegistriesClient) NewListPrivateLinkResourcesPager(arg0, arg1 string, arg2 *armcontainerregistry.RegistriesClientListPrivateLinkResourcesOptions) *containerregistry.RuntimePagerArmcontainerregistryRegistriesClientListPrivateLinkResourcesResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListPrivateLinkResourcesPager", arg0, arg1, arg2)
	ret0, _ := ret[0].(*containerregistry.RuntimePagerArmcontainerregistryRegistriesClientListPrivateLinkResourcesResponse)
	return ret0
}

// NewListPrivateLinkResourcesPager indicates an expected call of NewListPrivateLinkResourcesPager.
func (mr *MockRegistriesClientMockRecorder) NewListPrivateLinkResourcesPager(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListPrivateLinkResourcesPager", reflect.TypeOf((*MockRegistriesClient)(nil).NewListPrivateLinkResourcesPager), arg0, arg1, arg2)
}
