// Code generated by MockGen. DO NOT EDIT.
// Source: public_ip_addresses.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	armnetwork "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v2"
	network "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/network"
	gomock "github.com/golang/mock/gomock"
)

// MockPublicIPAddressesClient is a mock of PublicIPAddressesClient interface.
type MockPublicIPAddressesClient struct {
	ctrl     *gomock.Controller
	recorder *MockPublicIPAddressesClientMockRecorder
}

// MockPublicIPAddressesClientMockRecorder is the mock recorder for MockPublicIPAddressesClient.
type MockPublicIPAddressesClientMockRecorder struct {
	mock *MockPublicIPAddressesClient
}

// NewMockPublicIPAddressesClient creates a new mock instance.
func NewMockPublicIPAddressesClient(ctrl *gomock.Controller) *MockPublicIPAddressesClient {
	mock := &MockPublicIPAddressesClient{ctrl: ctrl}
	mock.recorder = &MockPublicIPAddressesClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPublicIPAddressesClient) EXPECT() *MockPublicIPAddressesClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockPublicIPAddressesClient) Get(arg0 context.Context, arg1, arg2 string, arg3 *armnetwork.PublicIPAddressesClientGetOptions) (armnetwork.PublicIPAddressesClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(armnetwork.PublicIPAddressesClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockPublicIPAddressesClientMockRecorder) Get(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockPublicIPAddressesClient)(nil).Get), arg0, arg1, arg2, arg3)
}

// GetCloudServicePublicIPAddress mocks base method.
func (m *MockPublicIPAddressesClient) GetCloudServicePublicIPAddress(arg0 context.Context, arg1, arg2, arg3, arg4, arg5, arg6 string, arg7 *armnetwork.PublicIPAddressesClientGetCloudServicePublicIPAddressOptions) (armnetwork.PublicIPAddressesClientGetCloudServicePublicIPAddressResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCloudServicePublicIPAddress", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(armnetwork.PublicIPAddressesClientGetCloudServicePublicIPAddressResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCloudServicePublicIPAddress indicates an expected call of GetCloudServicePublicIPAddress.
func (mr *MockPublicIPAddressesClientMockRecorder) GetCloudServicePublicIPAddress(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCloudServicePublicIPAddress", reflect.TypeOf((*MockPublicIPAddressesClient)(nil).GetCloudServicePublicIPAddress), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// GetVirtualMachineScaleSetPublicIPAddress mocks base method.
func (m *MockPublicIPAddressesClient) GetVirtualMachineScaleSetPublicIPAddress(arg0 context.Context, arg1, arg2, arg3, arg4, arg5, arg6 string, arg7 *armnetwork.PublicIPAddressesClientGetVirtualMachineScaleSetPublicIPAddressOptions) (armnetwork.PublicIPAddressesClientGetVirtualMachineScaleSetPublicIPAddressResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVirtualMachineScaleSetPublicIPAddress", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(armnetwork.PublicIPAddressesClientGetVirtualMachineScaleSetPublicIPAddressResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVirtualMachineScaleSetPublicIPAddress indicates an expected call of GetVirtualMachineScaleSetPublicIPAddress.
func (mr *MockPublicIPAddressesClientMockRecorder) GetVirtualMachineScaleSetPublicIPAddress(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVirtualMachineScaleSetPublicIPAddress", reflect.TypeOf((*MockPublicIPAddressesClient)(nil).GetVirtualMachineScaleSetPublicIPAddress), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// NewListAllPager mocks base method.
func (m *MockPublicIPAddressesClient) NewListAllPager(arg0 *armnetwork.PublicIPAddressesClientListAllOptions) *network.RuntimePagerArmnetworkPublicIPAddressesClientListAllResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListAllPager", arg0)
	ret0, _ := ret[0].(*network.RuntimePagerArmnetworkPublicIPAddressesClientListAllResponse)
	return ret0
}

// NewListAllPager indicates an expected call of NewListAllPager.
func (mr *MockPublicIPAddressesClientMockRecorder) NewListAllPager(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListAllPager", reflect.TypeOf((*MockPublicIPAddressesClient)(nil).NewListAllPager), arg0)
}

// NewListCloudServicePublicIPAddressesPager mocks base method.
func (m *MockPublicIPAddressesClient) NewListCloudServicePublicIPAddressesPager(arg0, arg1 string, arg2 *armnetwork.PublicIPAddressesClientListCloudServicePublicIPAddressesOptions) *network.RuntimePagerArmnetworkPublicIPAddressesClientListCloudServicePublicIPAddressesResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListCloudServicePublicIPAddressesPager", arg0, arg1, arg2)
	ret0, _ := ret[0].(*network.RuntimePagerArmnetworkPublicIPAddressesClientListCloudServicePublicIPAddressesResponse)
	return ret0
}

// NewListCloudServicePublicIPAddressesPager indicates an expected call of NewListCloudServicePublicIPAddressesPager.
func (mr *MockPublicIPAddressesClientMockRecorder) NewListCloudServicePublicIPAddressesPager(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListCloudServicePublicIPAddressesPager", reflect.TypeOf((*MockPublicIPAddressesClient)(nil).NewListCloudServicePublicIPAddressesPager), arg0, arg1, arg2)
}

// NewListCloudServiceRoleInstancePublicIPAddressesPager mocks base method.
func (m *MockPublicIPAddressesClient) NewListCloudServiceRoleInstancePublicIPAddressesPager(arg0, arg1, arg2, arg3, arg4 string, arg5 *armnetwork.PublicIPAddressesClientListCloudServiceRoleInstancePublicIPAddressesOptions) *network.RuntimePagerArmnetworkPublicIPAddressesClientListCloudServiceRoleInstancePublicIPAddressesResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListCloudServiceRoleInstancePublicIPAddressesPager", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(*network.RuntimePagerArmnetworkPublicIPAddressesClientListCloudServiceRoleInstancePublicIPAddressesResponse)
	return ret0
}

// NewListCloudServiceRoleInstancePublicIPAddressesPager indicates an expected call of NewListCloudServiceRoleInstancePublicIPAddressesPager.
func (mr *MockPublicIPAddressesClientMockRecorder) NewListCloudServiceRoleInstancePublicIPAddressesPager(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListCloudServiceRoleInstancePublicIPAddressesPager", reflect.TypeOf((*MockPublicIPAddressesClient)(nil).NewListCloudServiceRoleInstancePublicIPAddressesPager), arg0, arg1, arg2, arg3, arg4, arg5)
}

// NewListPager mocks base method.
func (m *MockPublicIPAddressesClient) NewListPager(arg0 string, arg1 *armnetwork.PublicIPAddressesClientListOptions) *network.RuntimePagerArmnetworkPublicIPAddressesClientListResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListPager", arg0, arg1)
	ret0, _ := ret[0].(*network.RuntimePagerArmnetworkPublicIPAddressesClientListResponse)
	return ret0
}

// NewListPager indicates an expected call of NewListPager.
func (mr *MockPublicIPAddressesClientMockRecorder) NewListPager(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListPager", reflect.TypeOf((*MockPublicIPAddressesClient)(nil).NewListPager), arg0, arg1)
}

// NewListVirtualMachineScaleSetPublicIPAddressesPager mocks base method.
func (m *MockPublicIPAddressesClient) NewListVirtualMachineScaleSetPublicIPAddressesPager(arg0, arg1 string, arg2 *armnetwork.PublicIPAddressesClientListVirtualMachineScaleSetPublicIPAddressesOptions) *network.RuntimePagerArmnetworkPublicIPAddressesClientListVirtualMachineScaleSetPublicIPAddressesResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListVirtualMachineScaleSetPublicIPAddressesPager", arg0, arg1, arg2)
	ret0, _ := ret[0].(*network.RuntimePagerArmnetworkPublicIPAddressesClientListVirtualMachineScaleSetPublicIPAddressesResponse)
	return ret0
}

// NewListVirtualMachineScaleSetPublicIPAddressesPager indicates an expected call of NewListVirtualMachineScaleSetPublicIPAddressesPager.
func (mr *MockPublicIPAddressesClientMockRecorder) NewListVirtualMachineScaleSetPublicIPAddressesPager(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListVirtualMachineScaleSetPublicIPAddressesPager", reflect.TypeOf((*MockPublicIPAddressesClient)(nil).NewListVirtualMachineScaleSetPublicIPAddressesPager), arg0, arg1, arg2)
}

// NewListVirtualMachineScaleSetVMPublicIPAddressesPager mocks base method.
func (m *MockPublicIPAddressesClient) NewListVirtualMachineScaleSetVMPublicIPAddressesPager(arg0, arg1, arg2, arg3, arg4 string, arg5 *armnetwork.PublicIPAddressesClientListVirtualMachineScaleSetVMPublicIPAddressesOptions) *network.RuntimePagerArmnetworkPublicIPAddressesClientListVirtualMachineScaleSetVMPublicIPAddressesResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListVirtualMachineScaleSetVMPublicIPAddressesPager", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(*network.RuntimePagerArmnetworkPublicIPAddressesClientListVirtualMachineScaleSetVMPublicIPAddressesResponse)
	return ret0
}

// NewListVirtualMachineScaleSetVMPublicIPAddressesPager indicates an expected call of NewListVirtualMachineScaleSetVMPublicIPAddressesPager.
func (mr *MockPublicIPAddressesClientMockRecorder) NewListVirtualMachineScaleSetVMPublicIPAddressesPager(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListVirtualMachineScaleSetVMPublicIPAddressesPager", reflect.TypeOf((*MockPublicIPAddressesClient)(nil).NewListVirtualMachineScaleSetVMPublicIPAddressesPager), arg0, arg1, arg2, arg3, arg4, arg5)
}
