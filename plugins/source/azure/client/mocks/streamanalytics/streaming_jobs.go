// Code generated by MockGen. DO NOT EDIT.
// Source: streaming_jobs.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	armstreamanalytics "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/streamanalytics/armstreamanalytics"
	streamanalytics "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/streamanalytics"
	gomock "github.com/golang/mock/gomock"
)

// MockStreamingJobsClient is a mock of StreamingJobsClient interface.
type MockStreamingJobsClient struct {
	ctrl     *gomock.Controller
	recorder *MockStreamingJobsClientMockRecorder
}

// MockStreamingJobsClientMockRecorder is the mock recorder for MockStreamingJobsClient.
type MockStreamingJobsClientMockRecorder struct {
	mock *MockStreamingJobsClient
}

// NewMockStreamingJobsClient creates a new mock instance.
func NewMockStreamingJobsClient(ctrl *gomock.Controller) *MockStreamingJobsClient {
	mock := &MockStreamingJobsClient{ctrl: ctrl}
	mock.recorder = &MockStreamingJobsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStreamingJobsClient) EXPECT() *MockStreamingJobsClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockStreamingJobsClient) Get(arg0 context.Context, arg1, arg2 string, arg3 *armstreamanalytics.StreamingJobsClientGetOptions) (armstreamanalytics.StreamingJobsClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(armstreamanalytics.StreamingJobsClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockStreamingJobsClientMockRecorder) Get(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockStreamingJobsClient)(nil).Get), arg0, arg1, arg2, arg3)
}

// NewListByResourceGroupPager mocks base method.
func (m *MockStreamingJobsClient) NewListByResourceGroupPager(arg0 string, arg1 *armstreamanalytics.StreamingJobsClientListByResourceGroupOptions) *streamanalytics.RuntimePagerArmstreamanalyticsStreamingJobsClientListByResourceGroupResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListByResourceGroupPager", arg0, arg1)
	ret0, _ := ret[0].(*streamanalytics.RuntimePagerArmstreamanalyticsStreamingJobsClientListByResourceGroupResponse)
	return ret0
}

// NewListByResourceGroupPager indicates an expected call of NewListByResourceGroupPager.
func (mr *MockStreamingJobsClientMockRecorder) NewListByResourceGroupPager(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListByResourceGroupPager", reflect.TypeOf((*MockStreamingJobsClient)(nil).NewListByResourceGroupPager), arg0, arg1)
}

// NewListPager mocks base method.
func (m *MockStreamingJobsClient) NewListPager(arg0 *armstreamanalytics.StreamingJobsClientListOptions) *streamanalytics.RuntimePagerArmstreamanalyticsStreamingJobsClientListResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListPager", arg0)
	ret0, _ := ret[0].(*streamanalytics.RuntimePagerArmstreamanalyticsStreamingJobsClientListResponse)
	return ret0
}

// NewListPager indicates an expected call of NewListPager.
func (mr *MockStreamingJobsClientMockRecorder) NewListPager(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListPager", reflect.TypeOf((*MockStreamingJobsClient)(nil).NewListPager), arg0)
}
