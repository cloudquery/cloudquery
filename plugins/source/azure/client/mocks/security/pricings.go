// Code generated by MockGen. DO NOT EDIT.
// Source: pricings.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	armsecurity "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/security/armsecurity"
	gomock "github.com/golang/mock/gomock"
)

// MockPricingsClient is a mock of PricingsClient interface.
type MockPricingsClient struct {
	ctrl     *gomock.Controller
	recorder *MockPricingsClientMockRecorder
}

// MockPricingsClientMockRecorder is the mock recorder for MockPricingsClient.
type MockPricingsClientMockRecorder struct {
	mock *MockPricingsClient
}

// NewMockPricingsClient creates a new mock instance.
func NewMockPricingsClient(ctrl *gomock.Controller) *MockPricingsClient {
	mock := &MockPricingsClient{ctrl: ctrl}
	mock.recorder = &MockPricingsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPricingsClient) EXPECT() *MockPricingsClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockPricingsClient) Get(arg0 context.Context, arg1 string, arg2 *armsecurity.PricingsClientGetOptions) (armsecurity.PricingsClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].(armsecurity.PricingsClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockPricingsClientMockRecorder) Get(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockPricingsClient)(nil).Get), arg0, arg1, arg2)
}

// List mocks base method.
func (m *MockPricingsClient) List(arg0 context.Context, arg1 *armsecurity.PricingsClientListOptions) (armsecurity.PricingsClientListResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].(armsecurity.PricingsClientListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockPricingsClientMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockPricingsClient)(nil).List), arg0, arg1)
}
