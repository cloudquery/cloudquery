// Code generated by MockGen. DO NOT EDIT.
// Source: assessments.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	armsecurity "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/security/armsecurity"
	security "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/security"
	gomock "github.com/golang/mock/gomock"
)

// MockAssessmentsClient is a mock of AssessmentsClient interface.
type MockAssessmentsClient struct {
	ctrl     *gomock.Controller
	recorder *MockAssessmentsClientMockRecorder
}

// MockAssessmentsClientMockRecorder is the mock recorder for MockAssessmentsClient.
type MockAssessmentsClientMockRecorder struct {
	mock *MockAssessmentsClient
}

// NewMockAssessmentsClient creates a new mock instance.
func NewMockAssessmentsClient(ctrl *gomock.Controller) *MockAssessmentsClient {
	mock := &MockAssessmentsClient{ctrl: ctrl}
	mock.recorder = &MockAssessmentsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAssessmentsClient) EXPECT() *MockAssessmentsClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockAssessmentsClient) Get(arg0 context.Context, arg1, arg2 string, arg3 *armsecurity.AssessmentsClientGetOptions) (armsecurity.AssessmentsClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(armsecurity.AssessmentsClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockAssessmentsClientMockRecorder) Get(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAssessmentsClient)(nil).Get), arg0, arg1, arg2, arg3)
}

// NewListPager mocks base method.
func (m *MockAssessmentsClient) NewListPager(arg0 string, arg1 *armsecurity.AssessmentsClientListOptions) *security.RuntimePagerArmsecurityAssessmentsClientListResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListPager", arg0, arg1)
	ret0, _ := ret[0].(*security.RuntimePagerArmsecurityAssessmentsClientListResponse)
	return ret0
}

// NewListPager indicates an expected call of NewListPager.
func (mr *MockAssessmentsClientMockRecorder) NewListPager(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListPager", reflect.TypeOf((*MockAssessmentsClient)(nil).NewListPager), arg0, arg1)
}
