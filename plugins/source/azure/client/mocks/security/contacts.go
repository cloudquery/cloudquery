// Code generated by MockGen. DO NOT EDIT.
// Source: contacts.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	armsecurity "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/security/armsecurity"
	security "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/security"
	gomock "github.com/golang/mock/gomock"
)

// MockContactsClient is a mock of ContactsClient interface.
type MockContactsClient struct {
	ctrl     *gomock.Controller
	recorder *MockContactsClientMockRecorder
}

// MockContactsClientMockRecorder is the mock recorder for MockContactsClient.
type MockContactsClientMockRecorder struct {
	mock *MockContactsClient
}

// NewMockContactsClient creates a new mock instance.
func NewMockContactsClient(ctrl *gomock.Controller) *MockContactsClient {
	mock := &MockContactsClient{ctrl: ctrl}
	mock.recorder = &MockContactsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContactsClient) EXPECT() *MockContactsClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockContactsClient) Get(arg0 context.Context, arg1 string, arg2 *armsecurity.ContactsClientGetOptions) (armsecurity.ContactsClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].(armsecurity.ContactsClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockContactsClientMockRecorder) Get(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockContactsClient)(nil).Get), arg0, arg1, arg2)
}

// NewListPager mocks base method.
func (m *MockContactsClient) NewListPager(arg0 *armsecurity.ContactsClientListOptions) *security.RuntimePagerArmsecurityContactsClientListResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListPager", arg0)
	ret0, _ := ret[0].(*security.RuntimePagerArmsecurityContactsClientListResponse)
	return ret0
}

// NewListPager indicates an expected call of NewListPager.
func (mr *MockContactsClientMockRecorder) NewListPager(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListPager", reflect.TypeOf((*MockContactsClient)(nil).NewListPager), arg0)
}
