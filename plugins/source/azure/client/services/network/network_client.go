// Code generated by codegen; DO NOT EDIT.
package network

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v2"
)

type NetworkClient struct {
	ExpressRouteCircuitsClient             ExpressRouteCircuitsClient
	ExpressRouteGatewaysClient             ExpressRouteGatewaysClient
	ExpressRoutePortsClient                ExpressRoutePortsClient
	FlowLogsClient                         FlowLogsClient
	InterfacesClient                       InterfacesClient
	PublicIPAddressesClient                PublicIPAddressesClient
	RouteFiltersClient                     RouteFiltersClient
	RouteTablesClient                      RouteTablesClient
	SecurityGroupsClient                   SecurityGroupsClient
	VirtualNetworkGatewayConnectionsClient VirtualNetworkGatewayConnectionsClient
	VirtualNetworkGatewaysClient           VirtualNetworkGatewaysClient
	VirtualNetworksClient                  VirtualNetworksClient
	WatchersClient                         WatchersClient
}

func NewNetworkClient(subscriptionID string, credentials azcore.TokenCredential, options *arm.ClientOptions) (*NetworkClient, error) {
	var client NetworkClient
	var err error

	client.ExpressRouteCircuitsClient, err = armnetwork.NewExpressRouteCircuitsClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.ExpressRouteGatewaysClient, err = armnetwork.NewExpressRouteGatewaysClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.ExpressRoutePortsClient, err = armnetwork.NewExpressRoutePortsClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.FlowLogsClient, err = armnetwork.NewFlowLogsClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.InterfacesClient, err = armnetwork.NewInterfacesClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.PublicIPAddressesClient, err = armnetwork.NewPublicIPAddressesClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.RouteFiltersClient, err = armnetwork.NewRouteFiltersClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.RouteTablesClient, err = armnetwork.NewRouteTablesClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.SecurityGroupsClient, err = armnetwork.NewSecurityGroupsClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.VirtualNetworkGatewayConnectionsClient, err = armnetwork.NewVirtualNetworkGatewayConnectionsClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.VirtualNetworkGatewaysClient, err = armnetwork.NewVirtualNetworkGatewaysClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.VirtualNetworksClient, err = armnetwork.NewVirtualNetworksClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.WatchersClient, err = armnetwork.NewWatchersClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	return &client, nil
}
