// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cloudquery/plugins/source/azure/client/services (interfaces: KeyVault71Client,KeyVaultVaultsClient,KeyVaultManagedHSMsClient,KeyVaultKeysClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	keyvault "github.com/Azure/azure-sdk-for-go/services/keyvault/mgmt/2019-09-01/keyvault"
	keyvault0 "github.com/Azure/azure-sdk-for-go/services/keyvault/v7.1/keyvault"
	keyvault1 "github.com/Azure/azure-sdk-for-go/services/preview/keyvault/mgmt/2020-04-01-preview/keyvault"
	gomock "github.com/golang/mock/gomock"
)

// MockKeyVault71Client is a mock of KeyVault71Client interface.
type MockKeyVault71Client struct {
	ctrl     *gomock.Controller
	recorder *MockKeyVault71ClientMockRecorder
}

// MockKeyVault71ClientMockRecorder is the mock recorder for MockKeyVault71Client.
type MockKeyVault71ClientMockRecorder struct {
	mock *MockKeyVault71Client
}

// NewMockKeyVault71Client creates a new mock instance.
func NewMockKeyVault71Client(ctrl *gomock.Controller) *MockKeyVault71Client {
	mock := &MockKeyVault71Client{ctrl: ctrl}
	mock.recorder = &MockKeyVault71ClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyVault71Client) EXPECT() *MockKeyVault71ClientMockRecorder {
	return m.recorder
}

// GetKeys mocks base method.
func (m *MockKeyVault71Client) GetKeys(arg0 context.Context, arg1 string, arg2 *int32) (keyvault0.KeyListResultPage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKeys", arg0, arg1, arg2)
	ret0, _ := ret[0].(keyvault0.KeyListResultPage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKeys indicates an expected call of GetKeys.
func (mr *MockKeyVault71ClientMockRecorder) GetKeys(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKeys", reflect.TypeOf((*MockKeyVault71Client)(nil).GetKeys), arg0, arg1, arg2)
}

// GetSecrets mocks base method.
func (m *MockKeyVault71Client) GetSecrets(arg0 context.Context, arg1 string, arg2 *int32) (keyvault0.SecretListResultPage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecrets", arg0, arg1, arg2)
	ret0, _ := ret[0].(keyvault0.SecretListResultPage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecrets indicates an expected call of GetSecrets.
func (mr *MockKeyVault71ClientMockRecorder) GetSecrets(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecrets", reflect.TypeOf((*MockKeyVault71Client)(nil).GetSecrets), arg0, arg1, arg2)
}

// MockKeyVaultVaultsClient is a mock of KeyVaultVaultsClient interface.
type MockKeyVaultVaultsClient struct {
	ctrl     *gomock.Controller
	recorder *MockKeyVaultVaultsClientMockRecorder
}

// MockKeyVaultVaultsClientMockRecorder is the mock recorder for MockKeyVaultVaultsClient.
type MockKeyVaultVaultsClientMockRecorder struct {
	mock *MockKeyVaultVaultsClient
}

// NewMockKeyVaultVaultsClient creates a new mock instance.
func NewMockKeyVaultVaultsClient(ctrl *gomock.Controller) *MockKeyVaultVaultsClient {
	mock := &MockKeyVaultVaultsClient{ctrl: ctrl}
	mock.recorder = &MockKeyVaultVaultsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyVaultVaultsClient) EXPECT() *MockKeyVaultVaultsClientMockRecorder {
	return m.recorder
}

// ListBySubscription mocks base method.
func (m *MockKeyVaultVaultsClient) ListBySubscription(arg0 context.Context, arg1 *int32) (keyvault.VaultListResultPage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBySubscription", arg0, arg1)
	ret0, _ := ret[0].(keyvault.VaultListResultPage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListBySubscription indicates an expected call of ListBySubscription.
func (mr *MockKeyVaultVaultsClientMockRecorder) ListBySubscription(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBySubscription", reflect.TypeOf((*MockKeyVaultVaultsClient)(nil).ListBySubscription), arg0, arg1)
}

// MockKeyVaultManagedHSMsClient is a mock of KeyVaultManagedHSMsClient interface.
type MockKeyVaultManagedHSMsClient struct {
	ctrl     *gomock.Controller
	recorder *MockKeyVaultManagedHSMsClientMockRecorder
}

// MockKeyVaultManagedHSMsClientMockRecorder is the mock recorder for MockKeyVaultManagedHSMsClient.
type MockKeyVaultManagedHSMsClientMockRecorder struct {
	mock *MockKeyVaultManagedHSMsClient
}

// NewMockKeyVaultManagedHSMsClient creates a new mock instance.
func NewMockKeyVaultManagedHSMsClient(ctrl *gomock.Controller) *MockKeyVaultManagedHSMsClient {
	mock := &MockKeyVaultManagedHSMsClient{ctrl: ctrl}
	mock.recorder = &MockKeyVaultManagedHSMsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyVaultManagedHSMsClient) EXPECT() *MockKeyVaultManagedHSMsClientMockRecorder {
	return m.recorder
}

// ListBySubscription mocks base method.
func (m *MockKeyVaultManagedHSMsClient) ListBySubscription(arg0 context.Context, arg1 *int32) (keyvault1.ManagedHsmListResultPage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBySubscription", arg0, arg1)
	ret0, _ := ret[0].(keyvault1.ManagedHsmListResultPage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListBySubscription indicates an expected call of ListBySubscription.
func (mr *MockKeyVaultManagedHSMsClientMockRecorder) ListBySubscription(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBySubscription", reflect.TypeOf((*MockKeyVaultManagedHSMsClient)(nil).ListBySubscription), arg0, arg1)
}

// MockKeyVaultKeysClient is a mock of KeyVaultKeysClient interface.
type MockKeyVaultKeysClient struct {
	ctrl     *gomock.Controller
	recorder *MockKeyVaultKeysClientMockRecorder
}

// MockKeyVaultKeysClientMockRecorder is the mock recorder for MockKeyVaultKeysClient.
type MockKeyVaultKeysClientMockRecorder struct {
	mock *MockKeyVaultKeysClient
}

// NewMockKeyVaultKeysClient creates a new mock instance.
func NewMockKeyVaultKeysClient(ctrl *gomock.Controller) *MockKeyVaultKeysClient {
	mock := &MockKeyVaultKeysClient{ctrl: ctrl}
	mock.recorder = &MockKeyVaultKeysClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyVaultKeysClient) EXPECT() *MockKeyVaultKeysClientMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockKeyVaultKeysClient) List(arg0 context.Context, arg1, arg2 string) (keyvault.KeyListResultPage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1, arg2)
	ret0, _ := ret[0].(keyvault.KeyListResultPage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockKeyVaultKeysClientMockRecorder) List(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockKeyVaultKeysClient)(nil).List), arg0, arg1, arg2)
}
