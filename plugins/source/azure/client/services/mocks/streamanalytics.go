// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cq-provider-azure/client/services (interfaces: JobsClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	streamanalytics "github.com/Azure/azure-sdk-for-go/services/streamanalytics/mgmt/2020-03-01/streamanalytics"
	gomock "github.com/golang/mock/gomock"
)

// MockJobsClient is a mock of JobsClient interface.
type MockJobsClient struct {
	ctrl     *gomock.Controller
	recorder *MockJobsClientMockRecorder
}

// MockJobsClientMockRecorder is the mock recorder for MockJobsClient.
type MockJobsClientMockRecorder struct {
	mock *MockJobsClient
}

// NewMockJobsClient creates a new mock instance.
func NewMockJobsClient(ctrl *gomock.Controller) *MockJobsClient {
	mock := &MockJobsClient{ctrl: ctrl}
	mock.recorder = &MockJobsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJobsClient) EXPECT() *MockJobsClientMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockJobsClient) List(arg0 context.Context, arg1 string) (streamanalytics.StreamingJobListResultPage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].(streamanalytics.StreamingJobListResultPage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockJobsClientMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockJobsClient)(nil).List), arg0, arg1)
}
