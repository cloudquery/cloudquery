// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cq-provider-azure/client/services (interfaces: ADApplicationsClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	graphrbac "github.com/Azure/azure-sdk-for-go/services/graphrbac/1.6/graphrbac"
	gomock "github.com/golang/mock/gomock"
)

// MockADApplicationsClient is a mock of ADApplicationsClient interface.
type MockADApplicationsClient struct {
	ctrl     *gomock.Controller
	recorder *MockADApplicationsClientMockRecorder
}

// MockADApplicationsClientMockRecorder is the mock recorder for MockADApplicationsClient.
type MockADApplicationsClientMockRecorder struct {
	mock *MockADApplicationsClient
}

// NewMockADApplicationsClient creates a new mock instance.
func NewMockADApplicationsClient(ctrl *gomock.Controller) *MockADApplicationsClient {
	mock := &MockADApplicationsClient{ctrl: ctrl}
	mock.recorder = &MockADApplicationsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockADApplicationsClient) EXPECT() *MockADApplicationsClientMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockADApplicationsClient) List(arg0 context.Context, arg1 string) (graphrbac.ApplicationListResultPage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].(graphrbac.ApplicationListResultPage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockADApplicationsClientMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockADApplicationsClient)(nil).List), arg0, arg1)
}
