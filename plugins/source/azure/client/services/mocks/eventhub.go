// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cq-provider-azure/client/services (interfaces: EventHubClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	eventhub "github.com/Azure/azure-sdk-for-go/services/preview/eventhub/mgmt/2018-01-01-preview/eventhub"
	gomock "github.com/golang/mock/gomock"
)

// MockEventHubClient is a mock of EventHubClient interface.
type MockEventHubClient struct {
	ctrl     *gomock.Controller
	recorder *MockEventHubClientMockRecorder
}

// MockEventHubClientMockRecorder is the mock recorder for MockEventHubClient.
type MockEventHubClientMockRecorder struct {
	mock *MockEventHubClient
}

// NewMockEventHubClient creates a new mock instance.
func NewMockEventHubClient(ctrl *gomock.Controller) *MockEventHubClient {
	mock := &MockEventHubClient{ctrl: ctrl}
	mock.recorder = &MockEventHubClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEventHubClient) EXPECT() *MockEventHubClientMockRecorder {
	return m.recorder
}

// GetNetworkRuleSet mocks base method.
func (m *MockEventHubClient) GetNetworkRuleSet(arg0 context.Context, arg1, arg2 string) (eventhub.NetworkRuleSet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkRuleSet", arg0, arg1, arg2)
	ret0, _ := ret[0].(eventhub.NetworkRuleSet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetworkRuleSet indicates an expected call of GetNetworkRuleSet.
func (mr *MockEventHubClientMockRecorder) GetNetworkRuleSet(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkRuleSet", reflect.TypeOf((*MockEventHubClient)(nil).GetNetworkRuleSet), arg0, arg1, arg2)
}

// List mocks base method.
func (m *MockEventHubClient) List(arg0 context.Context) (eventhub.EHNamespaceListResultPage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].(eventhub.EHNamespaceListResultPage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockEventHubClientMockRecorder) List(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockEventHubClient)(nil).List), arg0)
}
