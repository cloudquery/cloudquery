// Code generated by codegen; DO NOT EDIT.
package sql

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
)

type SqlClient struct {
	DatabaseBlobAuditingPoliciesClient                DatabaseBlobAuditingPoliciesClient
	DatabaseSecurityAlertPoliciesClient               DatabaseSecurityAlertPoliciesClient
	DatabaseVulnerabilityAssessmentScansClient        DatabaseVulnerabilityAssessmentScansClient
	DatabaseVulnerabilityAssessmentsClient            DatabaseVulnerabilityAssessmentsClient
	DatabasesClient                                   DatabasesClient
	EncryptionProtectorsClient                        EncryptionProtectorsClient
	FirewallRulesClient                               FirewallRulesClient
	LongTermRetentionPoliciesClient                   LongTermRetentionPoliciesClient
	ManagedDatabaseVulnerabilityAssessmentScansClient ManagedDatabaseVulnerabilityAssessmentScansClient
	ManagedDatabaseVulnerabilityAssessmentsClient     ManagedDatabaseVulnerabilityAssessmentsClient
	ManagedDatabasesClient                            ManagedDatabasesClient
	ManagedInstanceEncryptionProtectorsClient         ManagedInstanceEncryptionProtectorsClient
	ManagedInstanceVulnerabilityAssessmentsClient     ManagedInstanceVulnerabilityAssessmentsClient
	ManagedInstancesClient                            ManagedInstancesClient
	ServerAzureADAdministratorsClient                 ServerAzureADAdministratorsClient
	ServerBlobAuditingPoliciesClient                  ServerBlobAuditingPoliciesClient
	ServerDevOpsAuditSettingsClient                   ServerDevOpsAuditSettingsClient
	ServerSecurityAlertPoliciesClient                 ServerSecurityAlertPoliciesClient
	ServerVulnerabilityAssessmentsClient              ServerVulnerabilityAssessmentsClient
	ServersClient                                     ServersClient
	TransparentDataEncryptionsClient                  TransparentDataEncryptionsClient
	VirtualNetworkRulesClient                         VirtualNetworkRulesClient
}

func NewSqlClient(subscriptionID string, credentials azcore.TokenCredential, options *arm.ClientOptions) (*SqlClient, error) {
	var client SqlClient
	var err error

	client.DatabaseBlobAuditingPoliciesClient, err = armsql.NewDatabaseBlobAuditingPoliciesClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.DatabaseSecurityAlertPoliciesClient, err = armsql.NewDatabaseSecurityAlertPoliciesClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.DatabaseVulnerabilityAssessmentScansClient, err = armsql.NewDatabaseVulnerabilityAssessmentScansClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.DatabaseVulnerabilityAssessmentsClient, err = armsql.NewDatabaseVulnerabilityAssessmentsClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.DatabasesClient, err = armsql.NewDatabasesClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.EncryptionProtectorsClient, err = armsql.NewEncryptionProtectorsClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.FirewallRulesClient, err = armsql.NewFirewallRulesClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.LongTermRetentionPoliciesClient, err = armsql.NewLongTermRetentionPoliciesClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.ManagedDatabaseVulnerabilityAssessmentScansClient, err = armsql.NewManagedDatabaseVulnerabilityAssessmentScansClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.ManagedDatabaseVulnerabilityAssessmentsClient, err = armsql.NewManagedDatabaseVulnerabilityAssessmentsClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.ManagedDatabasesClient, err = armsql.NewManagedDatabasesClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.ManagedInstanceEncryptionProtectorsClient, err = armsql.NewManagedInstanceEncryptionProtectorsClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.ManagedInstanceVulnerabilityAssessmentsClient, err = armsql.NewManagedInstanceVulnerabilityAssessmentsClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.ManagedInstancesClient, err = armsql.NewManagedInstancesClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.ServerAzureADAdministratorsClient, err = armsql.NewServerAzureADAdministratorsClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.ServerBlobAuditingPoliciesClient, err = armsql.NewServerBlobAuditingPoliciesClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.ServerDevOpsAuditSettingsClient, err = armsql.NewServerDevOpsAuditSettingsClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.ServerSecurityAlertPoliciesClient, err = armsql.NewServerSecurityAlertPoliciesClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.ServerVulnerabilityAssessmentsClient, err = armsql.NewServerVulnerabilityAssessmentsClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.ServersClient, err = armsql.NewServersClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.TransparentDataEncryptionsClient, err = armsql.NewTransparentDataEncryptionsClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	client.VirtualNetworkRulesClient, err = armsql.NewVirtualNetworkRulesClient(subscriptionID, credentials, options)
	if err != nil {
		return nil, err
	}

	return &client, nil
}
