// Code generated by codegen; DO NOT EDIT.

package {{ .Service }}

import (
	"testing"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	api "{{ .StructPackage }}"
    "github.com/cloudquery/cloudquery/plugins/source/azure/client"
	mocks "github.com/cloudquery/cloudquery/plugins/source/azure/client/mocks/{{ .Fetcher.Service | ToLower }}"
	service "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/{{ .Fetcher.Service | ToLower }}"
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	"github.com/cloudquery/plugin-sdk/faker"
	"github.com/golang/mock/gomock"
)

func build{{ .SubService | ToCamel }}(t *testing.T, ctrl *gomock.Controller, c *client.Services) {
    {{- with .Fetcher }}
    if c.{{ .Service }} == nil {
        c.{{ .Service }} = new(service.{{ .Service }}Client)
    }
    {{ .Service | ToLower }}Client := c.{{ .Service }}
    if {{ .Service | ToLower }}Client.{{ .Client }} == nil {
        {{ .Service | ToLower }}Client.{{ .Client }} = mocks.NewMock{{ .Client }}(ctrl)
    }

    mock{{ .Client }} := {{ .Service | ToLower }}Client.{{ .Client }}.(*mocks.Mock{{ .Client }})

        {{ template "mock_fetch_call.go.tpl" . }}
    {{- end }}
    {{ if .Fetcher.PreResolver }}build{{ .SubService | ToCamel }}PreResolver(t, ctrl, c){{- end }}
    {{- range  .Children }}
    build{{ .SubService | ToCamel }}(t, ctrl, c)
    {{- end -}}
}

{{ if .Fetcher.PreResolver -}}{{ template "mock_test_preresolver.go.tpl" . }}{{- end }}