// Code generated by codegen; DO NOT EDIT.

package {{ .Service }}

import (
	"testing"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	api "{{ .StructPackage }}"
	mocks "github.com/cloudquery/cloudquery/plugins/source/azure/client/mocks/{{ .Fetcher.Service | ToLower }}"
	service "github.com/cloudquery/cloudquery/plugins/source/azure/client/services/{{ .Fetcher.Service | ToLower }}"
	"github.com/cloudquery/cloudquery/plugins/source/azure/client"
	"github.com/cloudquery/plugin-sdk/faker"
	"github.com/golang/mock/gomock"
)

func build{{ .SubService | ToCamel }}(t *testing.T, ctrl *gomock.Controller) *client.Services {
	mock{{ .Fetcher.Client }} := mocks.NewMock{{ .Fetcher.Client }}(ctrl)

	{{ with .Fetcher }}
		{{ template "mock_fetch_call.go.tpl" . }}

	{{ .Service | ToLower }}Client :=  &service.{{ .Service }}Client{
        {{ .Client }}: mock{{ .Client }},
    }

	c := &client.Services{ {{ .Service }}: {{ .Service | ToLower }}Client}
    {{ end }}
	{{ if .Fetcher.PreResolver }}build{{ .SubService | ToCamel }}PreResolver(t, ctrl, c){{- end -}}
	{{- range .Children }}
	build{{ .SubService | ToCamel }}(t, ctrl, c)
	{{- end }}

	return c
}

{{ if .Fetcher.PreResolver -}}{{ template "mock_test_preresolver.go.tpl" . }}{{- end }}

func Test{{ .SubService | ToCamel }}(t *testing.T) {
	client.MockTestHelper(t, {{ .SchemaFuncName }}(), build{{ .SubService | ToCamel }})
}
