// Code generated by codegen; DO NOT EDIT.

package project

import (
	"github.com/cloudquery/cloudquery/plugins/source/vercel/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func ProjectEnvs() *schema.Table {
	return &schema.Table{
		Name:      "vercel_project_envs",
		Resolver:  fetchProjectEnvs,
		Multiplex: client.TeamMultiplex,
		Columns: []schema.Column{
			{
				Name:     "project_id",
				Type:     schema.TypeString,
				Resolver: schema.ParentColumnResolver("id"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "target",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Target"),
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
			{
				Name:     "key",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Key"),
			},
			{
				Name:     "value",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Value"),
			},
			{
				Name:     "configuration_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ConfigurationId"),
			},
			{
				Name:     "git_branch",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("GitBranch"),
			},
			{
				Name:     "edge_config_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("EdgeConfigId"),
			},
			{
				Name:     "edge_config_token_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("EdgeConfigTokenId"),
			},
			{
				Name:     "decrypted",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Decrypted"),
			},
			{
				Name:     "system",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("System"),
			},
			{
				Name:     "created_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedAt"),
			},
			{
				Name:     "created_by",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("CreatedBy"),
			},
			{
				Name:     "updated_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("UpdatedAt"),
			},
			{
				Name:     "updated_by",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("UpdatedBy"),
			},
		},
	}
}
