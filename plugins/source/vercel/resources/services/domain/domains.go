// Code generated by codegen; DO NOT EDIT.

package domain

import (
	"github.com/cloudquery/cloudquery/plugins/source/vercel/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Domains() *schema.Table {
	return &schema.Table{
		Name:      "vercel_domains",
		Resolver:  fetchDomains,
		Multiplex: client.TeamMultiplex,
		Columns: []schema.Column{
			{
				Name:     "bought_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("BoughtAt"),
			},
			{
				Name:     "cdn_enabled",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("CdnEnabled"),
			},
			{
				Name:     "config_verified_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("ConfigVerifiedAt"),
			},
			{
				Name:     "created_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedAt"),
			},
			{
				Name:     "expires_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("ExpiresAt"),
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "intended_nameservers",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("IntendedNameservers"),
			},
			{
				Name:     "custom_nameservers",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("CustomNameservers"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "nameservers",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("Nameservers"),
			},
			{
				Name:     "ns_verified_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("NsVerifiedAt"),
			},
			{
				Name:     "ordered_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("OrderedAt"),
			},
			{
				Name:     "renew",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Renew"),
			},
			{
				Name:     "service_type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ServiceType"),
			},
			{
				Name:     "transfer_started_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("TransferStartedAt"),
			},
			{
				Name:     "transferred_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("TransferredAt"),
			},
			{
				Name:     "txt_verified_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("TxtVerifiedAt"),
			},
			{
				Name:     "verification_record",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("VerificationRecord"),
			},
			{
				Name:     "verified",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Verified"),
			},
			{
				Name:     "zone",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("Zone"),
			},
			{
				Name:     "creator",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Creator"),
			},
		},

		Relations: []*schema.Table{
			DomainRecords(),
		},
	}
}
