// Code generated by codegen; DO NOT EDIT.

package customer

import (
	"github.com/cloudquery/plugin-sdk/schema"
)

func Customers() *schema.Table {
	return &schema.Table{
		Name:     "shopify_customers",
		Resolver: fetchCustomers,
		Columns: []schema.Column{
			{
				Name:     "id",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "email",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Email"),
			},
			{
				Name:     "accepts_marketing",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("AcceptsMarketing"),
			},
			{
				Name:     "created_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreatedAt"),
			},
			{
				Name:     "updated_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("UpdatedAt"),
			},
			{
				Name:     "first_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("FirstName"),
			},
			{
				Name:     "last_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LastName"),
			},
			{
				Name:     "orders_count",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("OrdersCount"),
			},
			{
				Name:     "state",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("State"),
			},
			{
				Name:     "total_spent",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("TotalSpent"),
			},
			{
				Name:     "last_order_id",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("LastOrderID"),
			},
			{
				Name:     "verified_email",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("VerifiedEmail"),
			},
			{
				Name:     "tax_exempt",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("TaxExempt"),
			},
			{
				Name:     "tags",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Tags"),
			},
			{
				Name:     "last_order_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LastOrderName"),
			},
			{
				Name:     "currency",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Currency"),
			},
			{
				Name:     "addresses",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Addresses"),
			},
			{
				Name:     "accepts_marketing_updated_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("AcceptsMarketingUpdatedAt"),
			},
			{
				Name:     "marketing_opt_in_level",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("MarketingOptInLevel"),
			},
			{
				Name:     "tax_exemptions",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("TaxExemptions"),
			},
			{
				Name:     "email_marketing_consent",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("EmailMarketingConsent"),
			},
			{
				Name:     "admin_graphql_api_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("AdminGraphqlAPIID"),
			},
			{
				Name:     "default_address",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("DefaultAddress"),
			},
		},
	}
}
