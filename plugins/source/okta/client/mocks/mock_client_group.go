// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cloudquery/plugins/source/okta/client (interfaces: GroupService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	okta "github.com/okta/okta-sdk-golang/v2/okta"
	query "github.com/okta/okta-sdk-golang/v2/okta/query"
)

// MockGroupService is a mock of GroupService interface.
type MockGroupService struct {
	ctrl     *gomock.Controller
	recorder *MockGroupServiceMockRecorder
}

// MockGroupServiceMockRecorder is the mock recorder for MockGroupService.
type MockGroupServiceMockRecorder struct {
	mock *MockGroupService
}

// NewMockGroupService creates a new mock instance.
func NewMockGroupService(ctrl *gomock.Controller) *MockGroupService {
	mock := &MockGroupService{ctrl: ctrl}
	mock.recorder = &MockGroupServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGroupService) EXPECT() *MockGroupServiceMockRecorder {
	return m.recorder
}

// ListGroupUsers mocks base method.
func (m *MockGroupService) ListGroupUsers(arg0 context.Context, arg1 string, arg2 *query.Params) ([]*okta.User, *okta.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListGroupUsers", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*okta.User)
	ret1, _ := ret[1].(*okta.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListGroupUsers indicates an expected call of ListGroupUsers.
func (mr *MockGroupServiceMockRecorder) ListGroupUsers(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGroupUsers", reflect.TypeOf((*MockGroupService)(nil).ListGroupUsers), arg0, arg1, arg2)
}

// ListGroups mocks base method.
func (m *MockGroupService) ListGroups(arg0 context.Context, arg1 *query.Params) ([]*okta.Group, *okta.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListGroups", arg0, arg1)
	ret0, _ := ret[0].([]*okta.Group)
	ret1, _ := ret[1].(*okta.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListGroups indicates an expected call of ListGroups.
func (mr *MockGroupServiceMockRecorder) ListGroups(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGroups", reflect.TypeOf((*MockGroupService)(nil).ListGroups), arg0, arg1)
}
