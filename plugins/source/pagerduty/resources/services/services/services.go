// Code generated by codegen; DO NOT EDIT.

package services

import (
	"github.com/cloudquery/plugin-sdk/schema"
)

func Services() *schema.Table {
	return &schema.Table{
		Name:        "pagerduty_services",
		Description: `https://developer.pagerduty.com/api-reference/e960cca205c0f-list-services`,
		Resolver:    fetchServices,
		Columns: []schema.Column{
			{
				Name:     "dependencies",
				Type:     schema.TypeJSON,
				Resolver: DependenciesResolver,
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("ID"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "type",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Type"),
			},
			{
				Name:     "summary",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Summary"),
			},
			{
				Name:     "self",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Self"),
			},
			{
				Name:     "html_url",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("HTMLURL"),
			},
			{
				Name:     "name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Name"),
			},
			{
				Name:     "description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Description"),
			},
			{
				Name:     "auto_resolve_timeout",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("AutoResolveTimeout"),
			},
			{
				Name:     "acknowledgement_timeout",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("AcknowledgementTimeout"),
			},
			{
				Name:     "created_at",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreateAt"),
			},
			{
				Name:     "status",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Status"),
			},
			{
				Name:     "last_incident_timestamp",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("LastIncidentTimestamp"),
			},
			{
				Name:     "integrations",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Integrations"),
			},
			{
				Name:     "escalation_policy",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("EscalationPolicy"),
			},
			{
				Name:     "teams",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Teams"),
			},
			{
				Name:     "incident_urgency_rule",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("IncidentUrgencyRule"),
			},
			{
				Name:     "support_hours",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("SupportHours"),
			},
			{
				Name:     "scheduled_actions",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ScheduledActions"),
			},
			{
				Name:     "alert_creation",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("AlertCreation"),
			},
			{
				Name:     "alert_grouping",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("AlertGrouping"),
			},
			{
				Name:     "alert_grouping_timeout",
				Type:     schema.TypeInt,
				Resolver: schema.PathResolver("AlertGroupingTimeout"),
			},
			{
				Name:     "alert_grouping_parameters",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("AlertGroupingParameters"),
			},
			{
				Name:     "response_play",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ResponsePlay"),
			},
			{
				Name:     "addons",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Addons"),
			},
		},

		Relations: []*schema.Table{
			ServiceRules(),
		},
	}
}
