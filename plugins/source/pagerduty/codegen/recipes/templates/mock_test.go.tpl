// Code generated by codegen; DO NOT EDIT.

package {{.SubService}}

import (
	"testing"
	{{if gt (len .Children) 0}}"fmt"{{end}}

	"github.com/PagerDuty/go-pagerduty"
	"github.com/cloudquery/cloudquery/plugins/source/pagerduty/client"
	"github.com/cloudquery/plugin-sdk/faker"
)

func buildMockHttpClient() *client.MockHttpClient {
	mockHttpClient := client.MockHttpClient{}

	response := pagerduty.{{if ne .ResponseStructOverride ""}}{{.ResponseStructOverride}}{{else}}List{{.StructName}}sResponse{{end}}{}

	if err := faker.FakeObject(&response); err != nil {
		panic(err)
	}
  if err := client.FakeStringTimestamps(&response.{{if ne .ResponseFieldOverride ""}}{{.ResponseFieldOverride}}{{else}}{{.StructName}}s{{end}}[0]); err != nil {
		panic(err)
	}
	
	response.More = false

	mockHttpClient.AddMockResponse("{{if ne .RestPathOverride ""}}{{.RestPathOverride}}{{else}}/{{.StructName | ToSnake}}s{{end}}", response)

	{{range .Children}}
	{{.StructName | ToLower}}Response := pagerduty.{{if ne .ResponseStructOverride ""}}{{.ResponseStructOverride}}{{else}}List{{.StructName}}sResponse{{end}}{}
	if err := faker.FakeObject(&{{.StructName | ToLower}}Response); err != nil {
		panic(err)
	}
	{{.StructName | ToLower}}Response.More = false
	if err := client.FakeStringTimestamps(&{{.StructName | ToLower}}Response.{{if ne .ResponseFieldOverride ""}}{{.ResponseFieldOverride}}{{else}}{{.StructName}}s{{end}}[0]); err != nil {
		panic(err)
	}
	mockHttpClient.AddMockResponse(
		fmt.Sprintf("{{if ne $.RestPathOverride ""}}{{$.RestPathOverride}}{{else}}/{{$.StructName | ToSnake}}s{{end}}/%s{{if ne .RestPathOverride ""}}{{.RestPathOverride}}{{else}}/{{.StructName | ToSnake}}s{{end}}", 
			response.{{if ne $.ResponseFieldOverride ""}}{{$.ResponseFieldOverride}}{{else}}{{$.StructName}}s{{end}}[0].ID), 
		{{.StructName | ToLower}}Response)
	{{end}}


	return &mockHttpClient
}

func Test{{.SubService | ToCamel}}(t *testing.T) {
	client.PagerdutyMockTestHelper(t, {{.SubService | ToCamel}}(), buildMockHttpClient)
}
